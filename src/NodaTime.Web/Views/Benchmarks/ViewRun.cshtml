@using NodaTime.Benchmarks;
@model BenchmarkRun

@{
    ViewBag.Title = "Benchmark run";
    var run = Model;
    var env = run.Environment;
    var types = run.Types_;
}

<div class="row">
	<ul class="breadcrumbs">
		<li><a href="/">Home</a></li>
		<li><a href="/benchmarks">Benchmarks</a></li>
		<li><a href="/benchmarks/environments/@env.BenchmarkEnvironmentId">Environment ( @env.Machine, @env.TargetFramework )</a></li>
		<li class="current"><a href="#">Run Detail</a></li>
	</ul>

    <div class="large-12 columns">
        <h1>Benchmark run</h1>
        <p>
            Commit: <a href="https://github.com/nodatime/nodatime/commit/@run.Commit">@run.Commit.TruncateCommit()</a><br />
            Environment: <a href="/benchmarks/environments/@env.BenchmarkEnvironmentId">@env.Machine, @env.TargetFramework</a><br />
            Start time: @Html.RenderTimestamp(run.Start)<br />
            End time: @Html.RenderTimestamp(run.End)<br />
            BenchmarkDotNet version: @run.BenchmarkDotNetVersion
        </p>
        <h2>Types (by namespace)</h2>
        @* TODO: Present in a single table with a different style for a namespace row? *@
		<table>
			@foreach (var groupByNs in types.GroupBy(t => t.Namespace).OrderBy(g => g.Key))
			{
				<tr class="nsType">
					<th>@groupByNs.Key</th>
					<th></th>
				</tr>
				<tr>
					<th>Type</th>
					<th>Count</th>
				</tr>
				@foreach (var type in groupByNs)
				{
					<tr>
						<td><a href="/benchmarks/types/@type.BenchmarkTypeId">@type.Type</a></td>
						<td>@type.Benchmarks.Count</td>
					</tr>
				}
			}
        </table>
    </div>
    @* Work out how to style the above to leave some padding instead... *@
    <p />
</div>
