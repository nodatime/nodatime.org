<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ZonedDateTime Structure</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_ZonedDateTime" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.ZonedDateTime" /><MSHelp:Keyword Index="A" Term="T:NodaTime.ZonedDateTime" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeZonedDateTimeClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeZonedDateTimeMembersTopic" /><MSHelp:Keyword Index="K" Term="ZonedDateTime structure" /><MSHelp:Keyword Index="K" Term="NodaTime.ZonedDateTime structure" /><MSHelp:Keyword Index="F" Term="ZonedDateTime" /><MSHelp:Keyword Index="F" Term="NodaTime.ZonedDateTime" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.ZonedDateTime" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="A in a specific time zone and with a particular offset to distinguish between otherwise-ambiguous instants. A is global, in that it maps to a single ." /></xml></head><body><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">ZonedDateTime Structure</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <a href="N_NodaTime.htm">NodaTime</a> ► <span class="selflink">ZonedDateTime</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            A <a href="P_NodaTime_ZonedDateTime_LocalDateTime.htm">LocalDateTime</a> in a specific time zone and with a particular offset to distinguish between otherwise-ambiguous
            instants. A <span class="selflink">ZonedDateTime</span> is global, in that it maps to a single <a href="T_NodaTime_Instant.htm">Instant</a>.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">ZonedDateTime</span> : <span class="identifier">IEquatable</span>&lt;<span class="identifier">ZonedDateTime</span>&gt;, 
	<span class="identifier">IComparable</span>&lt;<span class="identifier">ZonedDateTime</span>&gt;, <span class="identifier">IComparable</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">ZonedDateTime</span>
	<span class="keyword">Implements</span> <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> <span class="identifier">ZonedDateTime</span>), <span class="identifier">IComparable</span>(<span class="keyword">Of</span> <span class="identifier">ZonedDateTime</span>), 
	<span class="identifier">IComparable</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">ZonedDateTime</span> : <span class="identifier">IEquatable</span>&lt;<span class="identifier">ZonedDateTime</span>&gt;, 
	<span class="identifier">IComparable</span>&lt;<span class="identifier">ZonedDateTime</span>&gt;, <span class="identifier">IComparable</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime__ctor_1.htm">ZonedDateTime(Instant, DateTimeZone, CalendarSystem)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">ZonedDateTime</span> struct.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime__ctor.htm">ZonedDateTime(Instant, DateTimeZone)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">ZonedDateTime</span> struct in the specified time zone
            and the ISO calendar.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime__ctor_2.htm">ZonedDateTime(LocalDateTime, DateTimeZone, Offset)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">ZonedDateTime</span> struct in the specified time zone
            from a given local time and offset. The offset is validated to be correct as part of initialization.
            In most cases a local time can only map to a single instant anyway, but the offset is included here for cases
            where the local time is ambiguous, usually due to daylight saving transitions.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_Add.htm">Add(ZonedDateTime, Duration)</a></td><td><div class="summary">
            Adds a duration to a zoned date and time. Friendly alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_Addition.htm">Addition(ZonedDateTime, Duration)</a></td><td><div class="summary">
            Returns a new <span class="selflink">ZonedDateTime</span> with the time advanced by the given duration. Note that
            due to daylight saving time changes this may not advance the local time by the same amount.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_CenturyOfEra.htm">CenturyOfEra</a></td><td><div class="summary">Gets the century within the era of this zoned date and time.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_ClockHourOfHalfDay.htm">ClockHourOfHalfDay</a></td><td><div class="summary">
            Gets the hour of the half-day of this zoned date and time, in the range 1 to 12 inclusive.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_CompareTo.htm">CompareTo(ZonedDateTime)</a></td><td><div class="summary">
            Indicates whether this date/time is earlier, later or the same as another one.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Date.htm">Date</a></td><td><div class="summary">
            Gets the local date represented by this zoned date and time. The returned <a href="T_NodaTime_LocalDate.htm">LocalDate</a>
            will have the same calendar system and return the same values for each of the date-based calendar
            properties (Year, MonthOfYear and so on), but will not be associated with any particular time zone.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Day.htm">Day</a></td><td><div class="summary">
            Gets the day of this zoned date and time within the month.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_DayOfWeek.htm">DayOfWeek</a></td><td><div class="summary">
            Gets the week day of this zoned date and time as a number.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_DayOfYear.htm">DayOfYear</a></td><td><div class="summary">Gets the day of this zoned date and time within the year.</div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_Equality.htm">Equality(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Implements the operator ==.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_Equals.htm">Equals(ZonedDateTime)</a></td><td><div class="summary">
            Indicates whether the current object is equal to another object of the same type.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_Equals_1.htm">Equals(Object)</a></td><td><div class="summary">
            Indicates whether this instance and a specified object are equal.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/2dts52z7" target="_blank">Equals(Object)</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Era.htm">Era</a></td><td><div class="summary">Gets the era for this zoned date and time.</div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_FromDateTimeOffset.htm">FromDateTimeOffset(DateTimeOffset)</a></td><td><div class="summary">
            Returns a new <span class="selflink">ZonedDateTime</span> representing the same instant in time as the given
            <a href="http://msdn2.microsoft.com/en-us/library/bb341783" target="_blank">DateTimeOffset</a>.
            The time zone used will be a fixed time zone, which uses the same offset throughout time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_GetHashCode.htm">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Computes the hash code for this instance.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/y3509fc2" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_GreaterThan.htm">GreaterThan(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Compares two <span class="selflink">ZonedDateTime</span> values to see if the left one is strictly later than the right
            one.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_GreaterThanOrEqual.htm">GreaterThanOrEqual(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Compares two <span class="selflink">ZonedDateTime</span> values to see if the left one is later than or equal to the right
            one.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Hour.htm">Hour</a></td><td><div class="summary">
            Gets the hour of day of this zoned date and time, in the range 0 to 23 inclusive.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_Inequality.htm">Inequality(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Implements the operator !=.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_IsoDayOfWeek.htm">IsoDayOfWeek</a></td><td><div class="summary">
            Gets the week day of this zoned date and time expressed as an <a href="T_NodaTime_IsoDayOfWeek.htm">IsoDayOfWeek</a> value,
            for calendars which use ISO days of the week.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_LessThan.htm">LessThan(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Compares two <span class="selflink">ZonedDateTime</span> values to see if the left one is strictly earlier than the right
            one.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_LessThanOrEqual.htm">LessThanOrEqual(ZonedDateTime, ZonedDateTime)</a></td><td><div class="summary">
            Compares two <span class="selflink">ZonedDateTime</span> values to see if the left one is earlier than or equal to the right
            one.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_LocalDateTime.htm">LocalDateTime</a></td><td><div class="summary">
            Gets the local date and time represented by this zoned date and time. The returned <a href="P_NodaTime_ZonedDateTime_LocalDateTime.htm">LocalDateTime</a>
            will have the same calendar system and return the same values for each of the calendar properties
            (Year, MonthOfYear and so on), but will not be associated with any particular time zone.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Millisecond.htm">Millisecond</a></td><td><div class="summary">
            Gets the millisecond of this zoned date and time within the second, in the range 0 to 999 inclusive.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_Minus.htm">Minus(Duration)</a></td><td><div class="summary">
            Returns the result of subtracting a duration from this zoned date and time, for a fluent alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Minute.htm">Minute</a></td><td><div class="summary">
            Gets the minute of this zoned date and time, in the range 0 to 59 inclusive.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Month.htm">Month</a></td><td><div class="summary">Gets the month of this zoned date and time within the year.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Offset.htm">Offset</a></td><td><div class="summary">Gets the offset of the local representation of this value from UTC.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_Plus.htm">Plus(Duration)</a></td><td><div class="summary">
            Returns the result of adding a duration to this zoned date and time, for a fluent alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Second.htm">Second</a></td><td><div class="summary">
            Gets the second of this zoned date and time within the minute, in the range 0 to 59 inclusive.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_Subtract.htm">Subtract(ZonedDateTime, Duration)</a></td><td><div class="summary">
            Subtracts a duration from a zoned date and time. Friendly alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_ZonedDateTime_op_Subtraction.htm">Subtraction(ZonedDateTime, Duration)</a></td><td><div class="summary">
            Returns a new ZonedDateTime with the duration subtracted. Note that
            due to daylight saving time changes this may not change the local time by the same amount.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_TickOfDay.htm">TickOfDay</a></td><td><div class="summary">
            Gets the tick of this zoned date and time within the day, in the range 0 to 863,999,999,999 inclusive.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_TickOfSecond.htm">TickOfSecond</a></td><td><div class="summary">
            Gets the tick of this zoned date and time within the second, in the range 0 to 9,999,999 inclusive.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_TimeOfDay.htm">TimeOfDay</a></td><td><div class="summary">
            Gets the time portion of this zoned date and time. The returned <a href="T_NodaTime_LocalTime.htm">LocalTime</a> will
            return the same values for each of the time-based properties (Hour, Minute an so on), but
            will not be associated with any particular time zone.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToDateTimeOffset.htm">ToDateTimeOffset<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs a <a href="http://msdn2.microsoft.com/en-us/library/bb341783" target="_blank">DateTimeOffset</a> value with the same local time and offset from
            UTC as this value.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToDateTimeUnspecified.htm">ToDateTimeUnspecified<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs a <a href="http://msdn2.microsoft.com/en-us/library/03ybds8y" target="_blank">DateTime</a> from this <span class="selflink">ZonedDateTime</span> which has a
            <a href="http://msdn2.microsoft.com/en-us/library/e3t6hfy5" target="_blank">Kind</a> of <a href="http://msdn2.microsoft.com/en-us/library/shx7s921" target="_blank">Unspecified</a> and represents the same local time as
            this value rather than the same instant in time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToDateTimeUtc.htm">ToDateTimeUtc<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs a <a href="http://msdn2.microsoft.com/en-us/library/03ybds8y" target="_blank">DateTime</a> from this <span class="selflink">ZonedDateTime</span> which has a
            <a href="http://msdn2.microsoft.com/en-us/library/e3t6hfy5" target="_blank">Kind</a> of <a href="http://msdn2.microsoft.com/en-us/library/shx7s921" target="_blank">Utc</a> and represents the same instant of time as
            this value rather than the same local time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToInstant.htm">ToInstant<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Converts this value to the instant it represents on the time line.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToOffsetDateTime.htm">ToOffsetDateTime<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs an <a href="T_NodaTime_OffsetDateTime.htm">OffsetDateTime</a> with the same local date and time, and the same offset
            as this zoned date and time, effectively just "removing" the time zone itself.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_ToString.htm">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Currently returns a string representation of this value indicating the local time,
            offset and time zone separately. The default <span class="code">ToString</span> method of each component is used,
            which will render the local time and offset in the "general" pattern for the current thread's culture,
            and simply include the ID for most time zone implementations.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/wb77sz3h" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_WeekOfWeekYear.htm">WeekOfWeekYear</a></td><td><div class="summary">Gets the week within the WeekYear. See <a href="P_NodaTime_ZonedDateTime_WeekYear.htm">WeekYear</a> for more details.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_WeekYear.htm">WeekYear</a></td><td><div class="summary">
            Gets the "week year" of this date and time.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_ZonedDateTime_WithZone.htm">WithZone(DateTimeZone)</a></td><td><div class="summary">
            Creates a new <span class="selflink">ZonedDateTime</span> representing the same instant in time, in the
            same calendar but a different time zone.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Year.htm">Year</a></td><td><div class="summary">Gets the year of this zoned date and time.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_YearOfCentury.htm">YearOfCentury</a></td><td><div class="summary">Gets the year of this zoned date and time within its century.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_YearOfEra.htm">YearOfEra</a></td><td><div class="summary">Gets the year of this zoned date and time within its era.</div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_ZonedDateTime_Zone.htm">Zone</a></td><td><div class="summary">Gets the time zone associated with this value.</div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent"><p>Although <span class="selflink">ZonedDateTime</span> includes both local and global concepts, it only supports
            duration-based - and not calendar-based - arithmetic. This avoids ambiguities
            and skipped date/time values becoming a problem within a series of calculations; instead,
            these can be considered just once, at the point of conversion to a <span class="selflink">ZonedDateTime</span>.
            </p><p>Comparisons of values can be handled in a way which is either calendar and zone sensitive or insensitive.
            Noda Time implements all the operators (and the <a href="M_NodaTime_ZonedDateTime_Equals.htm">Equals(ZonedDateTime)</a> method) such that all operators other than <a href="M_NodaTime_ZonedDateTime_op_Inequality.htm">Inequality(ZonedDateTime, ZonedDateTime)</a>
            will return false if asked to compare two values in different calendar systems or time zones.
            </p><p>
            However, the <a href="M_NodaTime_ZonedDateTime_CompareTo.htm">CompareTo(ZonedDateTime)</a> method (implementing <a href="http://msdn2.microsoft.com/en-us/library/4d7sx9hd" target="_blank">IComparable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>) is calendar and zone insensitive; it compares the two
            global instants in terms of when they actually occurred.
            </p><p>
            It's unclear at the time of this writing whether this is the most appropriate approach, and it may change in future versions. In general,
            it would be a good idea for users to avoid comparing dates in different calendar systems, and indeed most users are unlikely to ever explicitly
            consider which calendar system they're working in anyway.
            </p><p>
            Currently there is no real text handling support for this type.
            </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Thread Safety</div><div class="sectionContent">This type is an immutable value type. See the thread safety section of the user guide for more information.</div></div><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2013 The Noda Time Authors. All rights reserved.</a></div><p>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime.dll) Version: 1.1.0.0 (1.1.1)</p></div></body></html>