### YamlMime:ManagedReference
items:
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  id: IDateTimeZoneProvider
  parent: NodaTime
  children:
  - NodaTime.IDateTimeZoneProvider.GetSystemDefault
  - NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
  - NodaTime.IDateTimeZoneProvider.Ids
  - NodaTime.IDateTimeZoneProvider.Item(System.String)
  - NodaTime.IDateTimeZoneProvider.VersionId
  langs:
  - csharp
  - vb
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
  type: Interface
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Provides stable, performant time zone data.
  remarks: >-
    <p>Consumers should be able to treat an <xref href="NodaTime.IDateTimeZoneProvider" data-throw-if-not-resolved="false"></xref> like a cache:

    lookups should be quick (after at most one lookup of a given ID), and multiple calls for a given ID must

    always return references to equal instances, even if they are not references to a single instance.

    Consumers should not feel the need to cache data accessed through this interface.</p>

    <p>Implementations designed to work with any <xref href="NodaTime.TimeZones.IDateTimeZoneSource" data-throw-if-not-resolved="false"></xref> implementation (such as

    <xref href="NodaTime.TimeZones.DateTimeZoneCache" data-throw-if-not-resolved="false"></xref>) should not attempt to handle exceptions thrown by the source. A source-specific

    provider may do so, as it has more detailed knowledge of what can go wrong and how it can best be handled.</p>
  example: []
  syntax:
    content: public interface IDateTimeZoneProvider
    content.vb: Public Interface IDateTimeZoneProvider
  extensionMethods:
  - NodaTime.IDateTimeZoneProvider.NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones
- uid: NodaTime.IDateTimeZoneProvider.VersionId
  commentId: P:NodaTime.IDateTimeZoneProvider.VersionId
  id: VersionId
  parent: NodaTime.IDateTimeZoneProvider
  langs:
  - csharp
  - vb
  name: VersionId
  nameWithType: IDateTimeZoneProvider.VersionId
  fullName: NodaTime.IDateTimeZoneProvider.VersionId
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the version ID of this provider.
  example: []
  syntax:
    content: string VersionId { get; }
    parameters: []
    return:
      type: System.String
      description: The version ID of this provider.
    content.vb: ReadOnly Property VersionId As String
  overload: NodaTime.IDateTimeZoneProvider.VersionId*
- uid: NodaTime.IDateTimeZoneProvider.Ids
  commentId: P:NodaTime.IDateTimeZoneProvider.Ids
  id: Ids
  parent: NodaTime.IDateTimeZoneProvider
  langs:
  - csharp
  - vb
  name: Ids
  nameWithType: IDateTimeZoneProvider.Ids
  fullName: NodaTime.IDateTimeZoneProvider.Ids
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the list of valid time zone ids advertised by this provider.
  remarks: >-
    <p>

    This list will be sorted in ordinal lexicographic order. It cannot be modified by callers, and

    must not be modified by the provider either: client code can safely treat it as thread-safe

    and deeply immutable.

    </p>

    <p>

    In addition to the list returned here, providers always support the fixed-offset timezones with IDs "UTC"

    and "UTC+/-Offset". These may or may not be included explicitly in this list.

    </p>
  example: []
  syntax:
    content: ReadOnlyCollection<string> Ids { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: The <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of string ids.
    content.vb: ReadOnly Property Ids As ReadOnlyCollection(Of String)
  overload: NodaTime.IDateTimeZoneProvider.Ids*
- uid: NodaTime.IDateTimeZoneProvider.GetSystemDefault
  commentId: M:NodaTime.IDateTimeZoneProvider.GetSystemDefault
  id: GetSystemDefault
  parent: NodaTime.IDateTimeZoneProvider
  langs:
  - csharp
  - vb
  name: GetSystemDefault()
  nameWithType: IDateTimeZoneProvider.GetSystemDefault()
  fullName: NodaTime.IDateTimeZoneProvider.GetSystemDefault()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Gets the time zone from this provider that matches the system default time zone, if a matching time zone is

    available.
  remarks: >-
    <p>

    Callers should be aware that this method will throw <xref href="NodaTime.TimeZones.DateTimeZoneNotFoundException" data-throw-if-not-resolved="false"></xref> if no matching

    time zone is found. For the built-in Noda Time providers, this is unlikely to occur in practice (assuming

    the system is using a standard Windows time zone), but can occur even then, if no mapping is found. The TZDB

    source contains mappings for almost all Windows system time zones, but a few (such as "Mid-Atlantic Standard Time")

    are unmappable.

    </p>

    <p>

    If it is necessary to handle this case, callers can construct a

    <xref href="NodaTime.TimeZones.BclDateTimeZone" data-throw-if-not-resolved="false"></xref> via <xref href="NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault" data-throw-if-not-resolved="false"></xref>, which returns a

    <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> that wraps the system local <xref href="System.TimeZoneInfo" data-throw-if-not-resolved="false"></xref>, and which always

    succeeds.

    Note that <code>BclDateTimeZone</code> may not be available in all versions of Noda Time 1.x and 2.x; see

    the class documentation for more details.

    </p>
  example: []
  syntax:
    content: DateTimeZone GetSystemDefault()
    return:
      type: NodaTime.DateTimeZone
      description: The provider-specific representation of the system default time zone.
    content.vb: Function GetSystemDefault() As DateTimeZone
  overload: NodaTime.IDateTimeZoneProvider.GetSystemDefault*
  exceptions:
  - type: NodaTime.TimeZones.DateTimeZoneNotFoundException
    commentId: T:NodaTime.TimeZones.DateTimeZoneNotFoundException
    description: >-
      The system default time zone is not mapped by
          this provider.
- uid: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
  commentId: M:NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
  id: GetZoneOrNull(System.String)
  parent: NodaTime.IDateTimeZoneProvider
  langs:
  - csharp
  - vb
  name: GetZoneOrNull(string)
  nameWithType: IDateTimeZoneProvider.GetZoneOrNull(string)
  fullName: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the time zone for the given ID, if it's available.
  remarks: >-
    <p>

    Note that this may return a <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> that has a different ID to that requested, if the ID

    provided is an alias.

    </p>

    <p>

    Note also that this method is not required to return the same <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> instance for

    successive requests for the same ID; however, all instances returned for a given ID must compare

    as equal.

    </p>

    <p>

    The fixed-offset timezones with IDs "UTC" and "UTC+/-Offset" are always available.

    </p>
  example: []
  syntax:
    content: DateTimeZone? GetZoneOrNull(string id)
    parameters:
    - id: id
      type: System.String
      description: The time zone ID to find.
    return:
      type: NodaTime.DateTimeZone
      description: >-
        The <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> for the given ID or null if the provider does not support
            the given ID.
    content.vb: Function GetZoneOrNull(id As String) As DateTimeZone
  overload: NodaTime.IDateTimeZoneProvider.GetZoneOrNull*
  nameWithType.vb: IDateTimeZoneProvider.GetZoneOrNull(String)
  fullName.vb: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(String)
  name.vb: GetZoneOrNull(String)
- uid: NodaTime.IDateTimeZoneProvider.Item(System.String)
  commentId: P:NodaTime.IDateTimeZoneProvider.Item(System.String)
  id: Item(System.String)
  parent: NodaTime.IDateTimeZoneProvider
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: IDateTimeZoneProvider.this[string]
  fullName: NodaTime.IDateTimeZoneProvider.this[string]
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the time zone for the given ID.
  remarks: >-
    <p>

    Unlike <xref href="NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)" data-throw-if-not-resolved="false"></xref>, this indexer will never return a null reference. If the ID is not

    supported by this provider, it will throw <xref href="NodaTime.TimeZones.DateTimeZoneNotFoundException" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Note that this may return a <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> that has a different ID to that requested, if the ID

    provided is an alias.

    </p>

    <p>

    Note also that this method is not required to return the same <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> instance for

    successive requests for the same ID; however, all instances returned for a given ID must compare

    as equal.

    </p>

    <p>

    The fixed-offset timezones with IDs "UTC" and "UTC+/-Offset" are always available.

    </p>
  example: []
  syntax:
    content: DateTimeZone this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: The time zone id to find.
    return:
      type: NodaTime.DateTimeZone
      description: The <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref> for the given ID.
    content.vb: ReadOnly Default Property this[](id As String) As DateTimeZone
  overload: NodaTime.IDateTimeZoneProvider.Item*
  exceptions:
  - type: NodaTime.TimeZones.DateTimeZoneNotFoundException
    commentId: T:NodaTime.TimeZones.DateTimeZoneNotFoundException
    description: This provider does not support the given ID.
  nameWithType.vb: IDateTimeZoneProvider.this[](String)
  fullName.vb: NodaTime.IDateTimeZoneProvider.this[](String)
  name.vb: this[](String)
references:
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  parent: NodaTime
  href: NodaTime.IDateTimeZoneProvider.html
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
- uid: NodaTime.TimeZones.IDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.IDateTimeZoneSource
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.IDateTimeZoneSource.html
  name: IDateTimeZoneSource
  nameWithType: IDateTimeZoneSource
  fullName: NodaTime.TimeZones.IDateTimeZoneSource
- uid: NodaTime.TimeZones.DateTimeZoneCache
  commentId: T:NodaTime.TimeZones.DateTimeZoneCache
  href: NodaTime.TimeZones.DateTimeZoneCache.html
  name: DateTimeZoneCache
  nameWithType: DateTimeZoneCache
  fullName: NodaTime.TimeZones.DateTimeZoneCache
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.IDateTimeZoneProvider.NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones
  commentId: M:NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  parent: NodaTime.Extensions.DateTimeZoneProviderExtensions
  definition: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  name: GetAllZones(IDateTimeZoneProvider)
  nameWithType: DateTimeZoneProviderExtensions.GetAllZones(IDateTimeZoneProvider)
  fullName: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  spec.csharp:
  - uid: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
    name: GetAllZones
    href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  - name: (
  - uid: NodaTime.IDateTimeZoneProvider
    name: IDateTimeZoneProvider
    href: NodaTime.IDateTimeZoneProvider.html
  - name: )
  spec.vb:
  - uid: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
    name: GetAllZones
    href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  - name: (
  - uid: NodaTime.IDateTimeZoneProvider
    name: IDateTimeZoneProvider
    href: NodaTime.IDateTimeZoneProvider.html
  - name: )
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  commentId: M:NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  name: GetAllZones(IDateTimeZoneProvider)
  nameWithType: DateTimeZoneProviderExtensions.GetAllZones(IDateTimeZoneProvider)
  fullName: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
  spec.csharp:
  - uid: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
    name: GetAllZones
    href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  - name: (
  - uid: NodaTime.IDateTimeZoneProvider
    name: IDateTimeZoneProvider
    href: NodaTime.IDateTimeZoneProvider.html
  - name: )
  spec.vb:
  - uid: NodaTime.Extensions.DateTimeZoneProviderExtensions.GetAllZones(NodaTime.IDateTimeZoneProvider)
    name: GetAllZones
    href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html#NodaTime_Extensions_DateTimeZoneProviderExtensions_GetAllZones_NodaTime_IDateTimeZoneProvider_
  - name: (
  - uid: NodaTime.IDateTimeZoneProvider
    name: IDateTimeZoneProvider
    href: NodaTime.IDateTimeZoneProvider.html
  - name: )
- uid: NodaTime.Extensions.DateTimeZoneProviderExtensions
  commentId: T:NodaTime.Extensions.DateTimeZoneProviderExtensions
  parent: NodaTime.Extensions
  href: NodaTime.Extensions.DateTimeZoneProviderExtensions.html
  name: DateTimeZoneProviderExtensions
  nameWithType: DateTimeZoneProviderExtensions
  fullName: NodaTime.Extensions.DateTimeZoneProviderExtensions
- uid: NodaTime.Extensions
  commentId: N:NodaTime.Extensions
  href: NodaTime.html
  name: NodaTime.Extensions
  nameWithType: NodaTime.Extensions
  fullName: NodaTime.Extensions
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Extensions
    name: Extensions
    href: NodaTime.Extensions.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Extensions
    name: Extensions
    href: NodaTime.Extensions.html
- uid: NodaTime.IDateTimeZoneProvider.VersionId*
  commentId: Overload:NodaTime.IDateTimeZoneProvider.VersionId
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_VersionId
  name: VersionId
  nameWithType: IDateTimeZoneProvider.VersionId
  fullName: NodaTime.IDateTimeZoneProvider.VersionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.IDateTimeZoneProvider.Ids*
  commentId: Overload:NodaTime.IDateTimeZoneProvider.Ids
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_Ids
  name: Ids
  nameWithType: IDateTimeZoneProvider.Ids
  fullName: NodaTime.IDateTimeZoneProvider.Ids
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<string>
  nameWithType: ReadOnlyCollection<string>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<string>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: NodaTime.TimeZones.DateTimeZoneNotFoundException
  commentId: T:NodaTime.TimeZones.DateTimeZoneNotFoundException
  href: NodaTime.TimeZones.DateTimeZoneNotFoundException.html
  name: DateTimeZoneNotFoundException
  nameWithType: DateTimeZoneNotFoundException
  fullName: NodaTime.TimeZones.DateTimeZoneNotFoundException
- uid: NodaTime.TimeZones.BclDateTimeZone
  commentId: T:NodaTime.TimeZones.BclDateTimeZone
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.BclDateTimeZone.html
  name: BclDateTimeZone
  nameWithType: BclDateTimeZone
  fullName: NodaTime.TimeZones.BclDateTimeZone
- uid: NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault
  commentId: M:NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault
  href: NodaTime.TimeZones.BclDateTimeZone.html#NodaTime_TimeZones_BclDateTimeZone_ForSystemDefault
  name: ForSystemDefault()
  nameWithType: BclDateTimeZone.ForSystemDefault()
  fullName: NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault()
  spec.csharp:
  - uid: NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault
    name: ForSystemDefault
    href: NodaTime.TimeZones.BclDateTimeZone.html#NodaTime_TimeZones_BclDateTimeZone_ForSystemDefault
  - name: (
  - name: )
  spec.vb:
  - uid: NodaTime.TimeZones.BclDateTimeZone.ForSystemDefault
    name: ForSystemDefault
    href: NodaTime.TimeZones.BclDateTimeZone.html#NodaTime_TimeZones_BclDateTimeZone_ForSystemDefault
  - name: (
  - name: )
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: System.TimeZoneInfo
  commentId: T:System.TimeZoneInfo
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timezoneinfo
  name: TimeZoneInfo
  nameWithType: TimeZoneInfo
  fullName: System.TimeZoneInfo
- uid: NodaTime.IDateTimeZoneProvider.GetSystemDefault*
  commentId: Overload:NodaTime.IDateTimeZoneProvider.GetSystemDefault
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_GetSystemDefault
  name: GetSystemDefault
  nameWithType: IDateTimeZoneProvider.GetSystemDefault
  fullName: NodaTime.IDateTimeZoneProvider.GetSystemDefault
- uid: NodaTime.IDateTimeZoneProvider.GetZoneOrNull*
  commentId: Overload:NodaTime.IDateTimeZoneProvider.GetZoneOrNull
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_GetZoneOrNull_System_String_
  name: GetZoneOrNull
  nameWithType: IDateTimeZoneProvider.GetZoneOrNull
  fullName: NodaTime.IDateTimeZoneProvider.GetZoneOrNull
- uid: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
  commentId: M:NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
  parent: NodaTime.IDateTimeZoneProvider
  isExternal: true
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_GetZoneOrNull_System_String_
  name: GetZoneOrNull(string)
  nameWithType: IDateTimeZoneProvider.GetZoneOrNull(string)
  fullName: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(string)
  nameWithType.vb: IDateTimeZoneProvider.GetZoneOrNull(String)
  fullName.vb: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(String)
  name.vb: GetZoneOrNull(String)
  spec.csharp:
  - uid: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
    name: GetZoneOrNull
    href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_GetZoneOrNull_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NodaTime.IDateTimeZoneProvider.GetZoneOrNull(System.String)
    name: GetZoneOrNull
    href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_GetZoneOrNull_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.IDateTimeZoneProvider.Item*
  commentId: Overload:NodaTime.IDateTimeZoneProvider.Item
  href: NodaTime.IDateTimeZoneProvider.html#NodaTime_IDateTimeZoneProvider_Item_System_String_
  name: this
  nameWithType: IDateTimeZoneProvider.this
  fullName: NodaTime.IDateTimeZoneProvider.this
  nameWithType.vb: IDateTimeZoneProvider.this[]
  fullName.vb: NodaTime.IDateTimeZoneProvider.this[]
  name.vb: this[]
shouldSkipMarkup: true
