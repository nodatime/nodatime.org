### YamlMime:ManagedReference
items:
- uid: NodaTime.Text.DurationPattern
  commentId: T:NodaTime.Text.DurationPattern
  id: DurationPattern
  parent: NodaTime.Text
  children:
  - NodaTime.Text.DurationPattern.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  - NodaTime.Text.DurationPattern.Create(System.String,System.Globalization.CultureInfo)
  - NodaTime.Text.DurationPattern.CreateWithCurrentCulture(System.String)
  - NodaTime.Text.DurationPattern.CreateWithInvariantCulture(System.String)
  - NodaTime.Text.DurationPattern.Format(NodaTime.Duration)
  - NodaTime.Text.DurationPattern.JsonRoundtrip
  - NodaTime.Text.DurationPattern.Parse(System.String)
  - NodaTime.Text.DurationPattern.PatternText
  - NodaTime.Text.DurationPattern.Roundtrip
  - NodaTime.Text.DurationPattern.WithCulture(System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: DurationPattern
  nameWithType: DurationPattern
  fullName: NodaTime.Text.DurationPattern
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Represents a pattern for parsing and formatting <xref href="NodaTime.Duration" data-throw-if-not-resolved="false"></xref> values.
  example: []
  syntax:
    content: 'public sealed class DurationPattern : IPattern<Duration>'
    content.vb: Public NotInheritable Class DurationPattern Implements IPattern(Of Duration)
  inheritance:
  - System.Object
  implements:
  - NodaTime.Text.IPattern{NodaTime.Duration}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Text.DurationPattern.Roundtrip
  commentId: P:NodaTime.Text.DurationPattern.Roundtrip
  id: Roundtrip
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: Roundtrip
  nameWithType: DurationPattern.Roundtrip
  fullName: NodaTime.Text.DurationPattern.Roundtrip
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets the general pattern for durations using the invariant culture, with a format string of "-D:hh:mm:ss.FFFFFFFFF".

    This pattern round-trips. This corresponds to the "o" standard pattern.
  example: []
  syntax:
    content: public static DurationPattern Roundtrip { get; }
    parameters: []
    return:
      type: NodaTime.Text.DurationPattern
      description: The general pattern for durations using the invariant culture.
    content.vb: Public Shared ReadOnly Property Roundtrip As DurationPattern
  overload: NodaTime.Text.DurationPattern.Roundtrip*
- uid: NodaTime.Text.DurationPattern.JsonRoundtrip
  commentId: P:NodaTime.Text.DurationPattern.JsonRoundtrip
  id: JsonRoundtrip
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: JsonRoundtrip
  nameWithType: DurationPattern.JsonRoundtrip
  fullName: NodaTime.Text.DurationPattern.JsonRoundtrip
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets a pattern for durations using the invariant culture, with a format string of "-H:mm:ss.FFFFFFFFF".

    This pattern round-trips, and is the pattern that NodaTime.Serialization.JsonNet uses by default.

    This corresponds to the "j" standard pattern.
  example: []
  syntax:
    content: public static DurationPattern JsonRoundtrip { get; }
    parameters: []
    return:
      type: NodaTime.Text.DurationPattern
      description: The pattern for durations using the invariant culture. This is the pattern that NodaTime.Serialization.JsonNet uses by default.
    content.vb: Public Shared ReadOnly Property JsonRoundtrip As DurationPattern
  overload: NodaTime.Text.DurationPattern.JsonRoundtrip*
- uid: NodaTime.Text.DurationPattern.PatternText
  commentId: P:NodaTime.Text.DurationPattern.PatternText
  id: PatternText
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: PatternText
  nameWithType: DurationPattern.PatternText
  fullName: NodaTime.Text.DurationPattern.PatternText
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Gets the pattern text for this pattern, as supplied on creation.
  example: []
  syntax:
    content: public string PatternText { get; }
    parameters: []
    return:
      type: System.String
      description: The pattern text for this pattern, as supplied on creation.
    content.vb: Public ReadOnly Property PatternText As String
  overload: NodaTime.Text.DurationPattern.PatternText*
- uid: NodaTime.Text.DurationPattern.Parse(System.String)
  commentId: M:NodaTime.Text.DurationPattern.Parse(System.String)
  id: Parse(System.String)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: DurationPattern.Parse(string)
  fullName: NodaTime.Text.DurationPattern.Parse(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Parses the given text value according to the rules of this pattern.
  remarks: >-
    This method never throws an exception (barring a bug in Noda Time itself). Even errors such as

    the argument being null are wrapped in a parse result.
  example: []
  syntax:
    content: public ParseResult<Duration> Parse(string text)
    parameters:
    - id: text
      type: System.String
      description: The text value to parse.
    return:
      type: NodaTime.Text.ParseResult{NodaTime.Duration}
      description: The result of parsing, which may be successful or unsuccessful.
    content.vb: Public Function Parse(text As String) As ParseResult(Of Duration)
  overload: NodaTime.Text.DurationPattern.Parse*
  implements:
  - NodaTime.Text.IPattern{NodaTime.Duration}.Parse(System.String)
  nameWithType.vb: DurationPattern.Parse(String)
  fullName.vb: NodaTime.Text.DurationPattern.Parse(String)
  name.vb: Parse(String)
- uid: NodaTime.Text.DurationPattern.Format(NodaTime.Duration)
  commentId: M:NodaTime.Text.DurationPattern.Format(NodaTime.Duration)
  id: Format(NodaTime.Duration)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: Format(Duration)
  nameWithType: DurationPattern.Format(Duration)
  fullName: NodaTime.Text.DurationPattern.Format(NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Formats the given duration as text according to the rules of this pattern.
  example: []
  syntax:
    content: public string Format(Duration value)
    parameters:
    - id: value
      type: NodaTime.Duration
      description: The duration to format.
    return:
      type: System.String
      description: The duration formatted according to this pattern.
    content.vb: Public Function Format(value As Duration) As String
  overload: NodaTime.Text.DurationPattern.Format*
  implements:
  - NodaTime.Text.IPattern{NodaTime.Duration}.Format(NodaTime.Duration)
- uid: NodaTime.Text.DurationPattern.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.DurationPattern.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  id: AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: AppendFormat(Duration, StringBuilder)
  nameWithType: DurationPattern.AppendFormat(Duration, StringBuilder)
  fullName: NodaTime.Text.DurationPattern.AppendFormat(NodaTime.Duration, System.Text.StringBuilder)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Formats the given value as text according to the rules of this pattern,

    appending to the given <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public StringBuilder AppendFormat(Duration value, StringBuilder builder)
    parameters:
    - id: value
      type: NodaTime.Duration
      description: The value to format.
    - id: builder
      type: System.Text.StringBuilder
      description: The <code>StringBuilder</code> to append to.
    return:
      type: System.Text.StringBuilder
      description: The builder passed in as <code class="paramref">builder</code>.
    content.vb: Public Function AppendFormat(value As Duration, builder As StringBuilder) As StringBuilder
  overload: NodaTime.Text.DurationPattern.AppendFormat*
  implements:
  - NodaTime.Text.IPattern{NodaTime.Duration}.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
- uid: NodaTime.Text.DurationPattern.Create(System.String,System.Globalization.CultureInfo)
  commentId: M:NodaTime.Text.DurationPattern.Create(System.String,System.Globalization.CultureInfo)
  id: Create(System.String,System.Globalization.CultureInfo)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: Create(string, CultureInfo)
  nameWithType: DurationPattern.Create(string, CultureInfo)
  fullName: NodaTime.Text.DurationPattern.Create(string, System.Globalization.CultureInfo)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text and culture.
  remarks: See the user guide for the available pattern text options.
  example: []
  syntax:
    content: public static DurationPattern Create(string patternText, CultureInfo cultureInfo)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in the pattern
    return:
      type: NodaTime.Text.DurationPattern
      description: A pattern for parsing and formatting offsets.
    content.vb: Public Shared Function Create(patternText As String, cultureInfo As CultureInfo) As DurationPattern
  overload: NodaTime.Text.DurationPattern.Create*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: DurationPattern.Create(String, CultureInfo)
  fullName.vb: NodaTime.Text.DurationPattern.Create(String, System.Globalization.CultureInfo)
  name.vb: Create(String, CultureInfo)
- uid: NodaTime.Text.DurationPattern.CreateWithCurrentCulture(System.String)
  commentId: M:NodaTime.Text.DurationPattern.CreateWithCurrentCulture(System.String)
  id: CreateWithCurrentCulture(System.String)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: CreateWithCurrentCulture(string)
  nameWithType: DurationPattern.CreateWithCurrentCulture(string)
  fullName: NodaTime.Text.DurationPattern.CreateWithCurrentCulture(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text in the current thread's current culture.
  remarks: >-
    See the user guide for the available pattern text options. Note that the current culture

    is captured at the time this method is called - it is not captured at the point of parsing

    or formatting values.
  example: []
  syntax:
    content: public static DurationPattern CreateWithCurrentCulture(string patternText)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    return:
      type: NodaTime.Text.DurationPattern
      description: A pattern for parsing and formatting offsets.
    content.vb: Public Shared Function CreateWithCurrentCulture(patternText As String) As DurationPattern
  overload: NodaTime.Text.DurationPattern.CreateWithCurrentCulture*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: DurationPattern.CreateWithCurrentCulture(String)
  fullName.vb: NodaTime.Text.DurationPattern.CreateWithCurrentCulture(String)
  name.vb: CreateWithCurrentCulture(String)
- uid: NodaTime.Text.DurationPattern.CreateWithInvariantCulture(System.String)
  commentId: M:NodaTime.Text.DurationPattern.CreateWithInvariantCulture(System.String)
  id: CreateWithInvariantCulture(System.String)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: CreateWithInvariantCulture(string)
  nameWithType: DurationPattern.CreateWithInvariantCulture(string)
  fullName: NodaTime.Text.DurationPattern.CreateWithInvariantCulture(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text in the invariant culture.
  remarks: See the user guide for the available pattern text options.
  example: []
  syntax:
    content: public static DurationPattern CreateWithInvariantCulture(string patternText)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    return:
      type: NodaTime.Text.DurationPattern
      description: A pattern for parsing and formatting offsets.
    content.vb: Public Shared Function CreateWithInvariantCulture(patternText As String) As DurationPattern
  overload: NodaTime.Text.DurationPattern.CreateWithInvariantCulture*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: DurationPattern.CreateWithInvariantCulture(String)
  fullName.vb: NodaTime.Text.DurationPattern.CreateWithInvariantCulture(String)
  name.vb: CreateWithInvariantCulture(String)
- uid: NodaTime.Text.DurationPattern.WithCulture(System.Globalization.CultureInfo)
  commentId: M:NodaTime.Text.DurationPattern.WithCulture(System.Globalization.CultureInfo)
  id: WithCulture(System.Globalization.CultureInfo)
  parent: NodaTime.Text.DurationPattern
  langs:
  - csharp
  - vb
  name: WithCulture(CultureInfo)
  nameWithType: DurationPattern.WithCulture(CultureInfo)
  fullName: NodaTime.Text.DurationPattern.WithCulture(System.Globalization.CultureInfo)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Creates a pattern for the same original pattern text as this pattern, but with the specified

    culture.
  example: []
  syntax:
    content: public DurationPattern WithCulture(CultureInfo cultureInfo)
    parameters:
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in the new pattern.
    return:
      type: NodaTime.Text.DurationPattern
      description: A new pattern with the given culture.
    content.vb: Public Function WithCulture(cultureInfo As CultureInfo) As DurationPattern
  overload: NodaTime.Text.DurationPattern.WithCulture*
references:
- uid: NodaTime.Duration
  commentId: T:NodaTime.Duration
  parent: NodaTime
  href: NodaTime.Duration.html
  name: Duration
  nameWithType: Duration
  fullName: NodaTime.Duration
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: NodaTime.Text
  commentId: N:NodaTime.Text
  href: NodaTime.html
  name: NodaTime.Text
  nameWithType: NodaTime.Text
  fullName: NodaTime.Text
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Text
    name: Text
    href: NodaTime.Text.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Text
    name: Text
    href: NodaTime.Text.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.Text.IPattern{NodaTime.Duration}
  commentId: T:NodaTime.Text.IPattern{NodaTime.Duration}
  parent: NodaTime.Text
  definition: NodaTime.Text.IPattern`1
  href: NodaTime.Text.IPattern-1.html
  name: IPattern<Duration>
  nameWithType: IPattern<Duration>
  fullName: NodaTime.Text.IPattern<NodaTime.Duration>
  nameWithType.vb: IPattern(Of Duration)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.Duration)
  name.vb: IPattern(Of Duration)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: <
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Text.IPattern`1
  commentId: T:NodaTime.Text.IPattern`1
  href: NodaTime.Text.IPattern-1.html
  name: IPattern<T>
  nameWithType: IPattern<T>
  fullName: NodaTime.Text.IPattern<T>
  nameWithType.vb: IPattern(Of T)
  fullName.vb: NodaTime.Text.IPattern(Of T)
  name.vb: IPattern(Of T)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.Text.DurationPattern.Roundtrip*
  commentId: Overload:NodaTime.Text.DurationPattern.Roundtrip
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_Roundtrip
  name: Roundtrip
  nameWithType: DurationPattern.Roundtrip
  fullName: NodaTime.Text.DurationPattern.Roundtrip
- uid: NodaTime.Text.DurationPattern
  commentId: T:NodaTime.Text.DurationPattern
  parent: NodaTime.Text
  href: NodaTime.Text.DurationPattern.html
  name: DurationPattern
  nameWithType: DurationPattern
  fullName: NodaTime.Text.DurationPattern
- uid: NodaTime.Text.DurationPattern.JsonRoundtrip*
  commentId: Overload:NodaTime.Text.DurationPattern.JsonRoundtrip
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_JsonRoundtrip
  name: JsonRoundtrip
  nameWithType: DurationPattern.JsonRoundtrip
  fullName: NodaTime.Text.DurationPattern.JsonRoundtrip
- uid: NodaTime.Text.DurationPattern.PatternText*
  commentId: Overload:NodaTime.Text.DurationPattern.PatternText
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_PatternText
  name: PatternText
  nameWithType: DurationPattern.PatternText
  fullName: NodaTime.Text.DurationPattern.PatternText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.Text.DurationPattern.Parse*
  commentId: Overload:NodaTime.Text.DurationPattern.Parse
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_Parse_System_String_
  name: Parse
  nameWithType: DurationPattern.Parse
  fullName: NodaTime.Text.DurationPattern.Parse
- uid: NodaTime.Text.IPattern{NodaTime.Duration}.Parse(System.String)
  commentId: M:NodaTime.Text.IPattern{NodaTime.Duration}.Parse(System.String)
  parent: NodaTime.Text.IPattern{NodaTime.Duration}
  definition: NodaTime.Text.IPattern`1.Parse(System.String)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  name: Parse(string)
  nameWithType: IPattern<Duration>.Parse(string)
  fullName: NodaTime.Text.IPattern<NodaTime.Duration>.Parse(string)
  nameWithType.vb: IPattern(Of Duration).Parse(String)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.Duration).Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.Text.ParseResult{NodaTime.Duration}
  commentId: T:NodaTime.Text.ParseResult{NodaTime.Duration}
  parent: NodaTime.Text
  definition: NodaTime.Text.ParseResult`1
  href: NodaTime.Text.ParseResult-1.html
  name: ParseResult<Duration>
  nameWithType: ParseResult<Duration>
  fullName: NodaTime.Text.ParseResult<NodaTime.Duration>
  nameWithType.vb: ParseResult(Of Duration)
  fullName.vb: NodaTime.Text.ParseResult(Of NodaTime.Duration)
  name.vb: ParseResult(Of Duration)
  spec.csharp:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: <
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: NodaTime.Text.IPattern`1.Parse(System.String)
  commentId: M:NodaTime.Text.IPattern`1.Parse(System.String)
  isExternal: true
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  name: Parse(string)
  nameWithType: IPattern<T>.Parse(string)
  fullName: NodaTime.Text.IPattern<T>.Parse(string)
  nameWithType.vb: IPattern(Of T).Parse(String)
  fullName.vb: NodaTime.Text.IPattern(Of T).Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.Text.ParseResult`1
  commentId: T:NodaTime.Text.ParseResult`1
  parent: NodaTime.Text
  href: NodaTime.Text.ParseResult-1.html
  name: ParseResult<T>
  nameWithType: ParseResult<T>
  fullName: NodaTime.Text.ParseResult<T>
  nameWithType.vb: ParseResult(Of T)
  fullName.vb: NodaTime.Text.ParseResult(Of T)
  name.vb: ParseResult(Of T)
  spec.csharp:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.Text.DurationPattern.Format*
  commentId: Overload:NodaTime.Text.DurationPattern.Format
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_Format_NodaTime_Duration_
  name: Format
  nameWithType: DurationPattern.Format
  fullName: NodaTime.Text.DurationPattern.Format
- uid: NodaTime.Text.IPattern{NodaTime.Duration}.Format(NodaTime.Duration)
  commentId: M:NodaTime.Text.IPattern{NodaTime.Duration}.Format(NodaTime.Duration)
  parent: NodaTime.Text.IPattern{NodaTime.Duration}
  definition: NodaTime.Text.IPattern`1.Format(`0)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  name: Format(Duration)
  nameWithType: IPattern<Duration>.Format(Duration)
  fullName: NodaTime.Text.IPattern<NodaTime.Duration>.Format(NodaTime.Duration)
  nameWithType.vb: IPattern(Of Duration).Format(Duration)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.Duration).Format(NodaTime.Duration)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.Format(NodaTime.Duration)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.Format(NodaTime.Duration)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: NodaTime.Text.IPattern`1.Format(`0)
  commentId: M:NodaTime.Text.IPattern`1.Format(`0)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  name: Format(T)
  nameWithType: IPattern<T>.Format(T)
  fullName: NodaTime.Text.IPattern<T>.Format(T)
  nameWithType.vb: IPattern(Of T).Format(T)
  fullName.vb: NodaTime.Text.IPattern(Of T).Format(T)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.Format(`0)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.Format(`0)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - name: T
  - name: )
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: NodaTime.Text.DurationPattern.AppendFormat*
  commentId: Overload:NodaTime.Text.DurationPattern.AppendFormat
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_AppendFormat_NodaTime_Duration_System_Text_StringBuilder_
  name: AppendFormat
  nameWithType: DurationPattern.AppendFormat
  fullName: NodaTime.Text.DurationPattern.AppendFormat
- uid: NodaTime.Text.IPattern{NodaTime.Duration}.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.IPattern{NodaTime.Duration}.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
  parent: NodaTime.Text.IPattern{NodaTime.Duration}
  definition: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  name: AppendFormat(Duration, StringBuilder)
  nameWithType: IPattern<Duration>.AppendFormat(Duration, StringBuilder)
  fullName: NodaTime.Text.IPattern<NodaTime.Duration>.AppendFormat(NodaTime.Duration, System.Text.StringBuilder)
  nameWithType.vb: IPattern(Of Duration).AppendFormat(Duration, StringBuilder)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.Duration).AppendFormat(NodaTime.Duration, System.Text.StringBuilder)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.Duration}.AppendFormat(NodaTime.Duration,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  isExternal: true
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  name: AppendFormat(T, StringBuilder)
  nameWithType: IPattern<T>.AppendFormat(T, StringBuilder)
  fullName: NodaTime.Text.IPattern<T>.AppendFormat(T, System.Text.StringBuilder)
  nameWithType.vb: IPattern(Of T).AppendFormat(T, StringBuilder)
  fullName.vb: NodaTime.Text.IPattern(Of T).AppendFormat(T, System.Text.StringBuilder)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: NodaTime.Text.InvalidPatternException
  commentId: T:NodaTime.Text.InvalidPatternException
  href: NodaTime.Text.InvalidPatternException.html
  name: InvalidPatternException
  nameWithType: InvalidPatternException
  fullName: NodaTime.Text.InvalidPatternException
- uid: NodaTime.Text.DurationPattern.Create*
  commentId: Overload:NodaTime.Text.DurationPattern.Create
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_Create_System_String_System_Globalization_CultureInfo_
  name: Create
  nameWithType: DurationPattern.Create
  fullName: NodaTime.Text.DurationPattern.Create
- uid: NodaTime.Text.DurationPattern.CreateWithCurrentCulture*
  commentId: Overload:NodaTime.Text.DurationPattern.CreateWithCurrentCulture
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_CreateWithCurrentCulture_System_String_
  name: CreateWithCurrentCulture
  nameWithType: DurationPattern.CreateWithCurrentCulture
  fullName: NodaTime.Text.DurationPattern.CreateWithCurrentCulture
- uid: NodaTime.Text.DurationPattern.CreateWithInvariantCulture*
  commentId: Overload:NodaTime.Text.DurationPattern.CreateWithInvariantCulture
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_CreateWithInvariantCulture_System_String_
  name: CreateWithInvariantCulture
  nameWithType: DurationPattern.CreateWithInvariantCulture
  fullName: NodaTime.Text.DurationPattern.CreateWithInvariantCulture
- uid: NodaTime.Text.DurationPattern.WithCulture*
  commentId: Overload:NodaTime.Text.DurationPattern.WithCulture
  href: NodaTime.Text.DurationPattern.html#NodaTime_Text_DurationPattern_WithCulture_System_Globalization_CultureInfo_
  name: WithCulture
  nameWithType: DurationPattern.WithCulture
  fullName: NodaTime.Text.DurationPattern.WithCulture
shouldSkipMarkup: true
