### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.AmbiguousTimeResolver
  commentId: T:NodaTime.TimeZones.AmbiguousTimeResolver
  id: AmbiguousTimeResolver
  parent: NodaTime.TimeZones
  children: []
  langs:
  - csharp
  - vb
  name: AmbiguousTimeResolver
  nameWithType: AmbiguousTimeResolver
  fullName: NodaTime.TimeZones.AmbiguousTimeResolver
  type: Delegate
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Chooses between two <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> values that resolve to the same <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    This delegate is used by <xref href="NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver%2cNodaTime.TimeZones.SkippedTimeResolver)" data-throw-if-not-resolved="false"></xref> when handling an ambiguous local time,

    due to clocks moving backward in a time zone transition (usually due to an autumnal daylight saving transition).

    </p>

    <p>

    The returned value should be one of the two parameter values, based on the policy of the specific

    implementation. Alternatively, it can throw an <xref href="NodaTime.AmbiguousTimeException" data-throw-if-not-resolved="false"></xref> to implement a policy of

    "reject ambiguous times."

    </p>

    <p>See the <xref href="NodaTime.TimeZones.Resolvers" data-throw-if-not-resolved="false"></xref> class for predefined implementations.</p>

    <p>

    Implementations of this delegate can reasonably

    assume that the target local date and time really is ambiguous; the behaviour when the local date and time

    can be unambiguously mapped into the target time zone (or when it's skipped) is undefined.

    </p>
  example: []
  syntax:
    content: public delegate ZonedDateTime AmbiguousTimeResolver(ZonedDateTime earlier, ZonedDateTime later)
    parameters:
    - id: earlier
      type: NodaTime.ZonedDateTime
      description: The earlier of the ambiguous matches for the original local date and time
    - id: later
      type: NodaTime.ZonedDateTime
      description: The later of the ambiguous matches for the original local date and time
    return:
      type: NodaTime.ZonedDateTime
      description: A <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> in the target time zone; typically, one of the two input parameters.
    content.vb: Public Delegate Function AmbiguousTimeResolver(earlier As ZonedDateTime, later As ZonedDateTime) As ZonedDateTime
  exceptions:
  - type: NodaTime.AmbiguousTimeException
    commentId: T:NodaTime.AmbiguousTimeException
    description: The implementation rejects requests to map ambiguous times.
references:
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  href: NodaTime.ZonedDateTime.html
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  href: NodaTime.LocalDateTime.html
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver,NodaTime.TimeZones.SkippedTimeResolver)
  commentId: M:NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver,NodaTime.TimeZones.SkippedTimeResolver)
  href: NodaTime.TimeZones.Resolvers.html#NodaTime_TimeZones_Resolvers_CreateMappingResolver_NodaTime_TimeZones_AmbiguousTimeResolver_NodaTime_TimeZones_SkippedTimeResolver_
  name: CreateMappingResolver(AmbiguousTimeResolver, SkippedTimeResolver)
  nameWithType: Resolvers.CreateMappingResolver(AmbiguousTimeResolver, SkippedTimeResolver)
  fullName: NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver, NodaTime.TimeZones.SkippedTimeResolver)
  spec.csharp:
  - uid: NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver,NodaTime.TimeZones.SkippedTimeResolver)
    name: CreateMappingResolver
    href: NodaTime.TimeZones.Resolvers.html#NodaTime_TimeZones_Resolvers_CreateMappingResolver_NodaTime_TimeZones_AmbiguousTimeResolver_NodaTime_TimeZones_SkippedTimeResolver_
  - name: (
  - uid: NodaTime.TimeZones.AmbiguousTimeResolver
    name: AmbiguousTimeResolver
    href: NodaTime.TimeZones.AmbiguousTimeResolver.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.SkippedTimeResolver
    name: SkippedTimeResolver
    href: NodaTime.TimeZones.SkippedTimeResolver.html
  - name: )
  spec.vb:
  - uid: NodaTime.TimeZones.Resolvers.CreateMappingResolver(NodaTime.TimeZones.AmbiguousTimeResolver,NodaTime.TimeZones.SkippedTimeResolver)
    name: CreateMappingResolver
    href: NodaTime.TimeZones.Resolvers.html#NodaTime_TimeZones_Resolvers_CreateMappingResolver_NodaTime_TimeZones_AmbiguousTimeResolver_NodaTime_TimeZones_SkippedTimeResolver_
  - name: (
  - uid: NodaTime.TimeZones.AmbiguousTimeResolver
    name: AmbiguousTimeResolver
    href: NodaTime.TimeZones.AmbiguousTimeResolver.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.SkippedTimeResolver
    name: SkippedTimeResolver
    href: NodaTime.TimeZones.SkippedTimeResolver.html
  - name: )
- uid: NodaTime.AmbiguousTimeException
  commentId: T:NodaTime.AmbiguousTimeException
  href: NodaTime.AmbiguousTimeException.html
  name: AmbiguousTimeException
  nameWithType: AmbiguousTimeException
  fullName: NodaTime.AmbiguousTimeException
- uid: NodaTime.TimeZones.Resolvers
  commentId: T:NodaTime.TimeZones.Resolvers
  href: NodaTime.TimeZones.Resolvers.html
  name: Resolvers
  nameWithType: Resolvers
  fullName: NodaTime.TimeZones.Resolvers
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
shouldSkipMarkup: true
