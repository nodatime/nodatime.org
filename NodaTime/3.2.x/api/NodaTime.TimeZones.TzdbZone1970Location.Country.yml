### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country
  commentId: T:NodaTime.TimeZones.TzdbZone1970Location.Country
  id: TzdbZone1970Location.Country
  parent: NodaTime.TimeZones
  children:
  - NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor(System.String,System.String)
  - NodaTime.TimeZones.TzdbZone1970Location.Country.Code
  - NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  - NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(System.Object)
  - NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode
  - NodaTime.TimeZones.TzdbZone1970Location.Country.Name
  - NodaTime.TimeZones.TzdbZone1970Location.Country.ToString
  langs:
  - csharp
  - vb
  name: TzdbZone1970Location.Country
  nameWithType: TzdbZone1970Location.Country
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    A country represented within an entry in the "zone1970.tab" file, with the English name

    mapped from the "iso3166.tab" file.
  remarks: >-
    <p>Equality is defined component-wise: two values are considered equal if their country names are equal to

    each other, and their country codes are equal to each other.</p>
  example: []
  syntax:
    content: 'public sealed class TzdbZone1970Location.Country : IEquatable<TzdbZone1970Location.Country?>'
    content.vb: Public NotInheritable Class TzdbZone1970Location.Country Implements IEquatable(Of TzdbZone1970Location.Country)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Name
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Country.Name
  id: Name
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TzdbZone1970Location.Country.Name
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Name
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the English name of the country.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: The English name of the country.
    content.vb: Public ReadOnly Property Name As String
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.Name*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Code
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Country.Code
  id: Code
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: TzdbZone1970Location.Country.Code
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Code
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the ISO-3166 2-letter country code for the country.
  example: []
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
      description: The ISO-3166 2-letter country code for the country.
    content.vb: Public ReadOnly Property Code As String
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.Code*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor(System.String,System.String)
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: Country(string, string)
  nameWithType: TzdbZone1970Location.Country.Country(string, string)
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Country(string, string)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Constructs a new country from its name and ISO-3166 2-letter code.
  example: []
  syntax:
    content: public Country(string name, string code)
    parameters:
    - id: name
      type: System.String
      description: Country name; must not be empty.
    - id: code
      type: System.String
      description: 2-letter code
    content.vb: Public Sub New(name As String, code As String)
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor*
  nameWithType.vb: TzdbZone1970Location.Country.New(String, String)
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.Country.New(String, String)
  name.vb: New(String, String)
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  id: Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: Equals(Country?)
  nameWithType: TzdbZone1970Location.Country.Equals(TzdbZone1970Location.Country?)
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    Compares countries for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(TzdbZone1970Location.Country? other)
    parameters:
    - id: other
      type: NodaTime.TimeZones.TzdbZone1970Location.Country
      description: The country to compare with this one.
    return:
      type: System.Boolean
      description: <code>true</code> if the given country has the same name and code as this one; <code>false</code> otherwise.
    content.vb: Public Function Equals(other As TzdbZone1970Location.Country) As Boolean
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals*
  implements:
  - System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  nameWithType.vb: TzdbZone1970Location.Country.Equals(TzdbZone1970Location.Country)
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  name.vb: Equals(Country)
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(System.Object)
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TzdbZone1970Location.Country.Equals(object?)
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    Compares countries for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this one with.
    return:
      type: System.Boolean
      description: <code>true</code> if the given object is a country with the same name and code as this one; <code>false</code> otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals*
  nameWithType.vb: TzdbZone1970Location.Country.Equals(Object)
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode
  id: GetHashCode
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TzdbZone1970Location.Country.GetHashCode()
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    Returns a hash code for this country.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this country.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.ToString
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.Country.ToString
  id: ToString
  parent: NodaTime.TimeZones.TzdbZone1970Location.Country
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TzdbZone1970Location.Country.ToString()
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Returns a string representation of this country, including the code and name.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of this country.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NodaTime.TimeZones.TzdbZone1970Location.Country.ToString*
references:
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  commentId: T:System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TzdbZone1970Location.Country>
  nameWithType: IEquatable<TzdbZone1970Location.Country>
  fullName: System.IEquatable<NodaTime.TimeZones.TzdbZone1970Location.Country>
  nameWithType.vb: IEquatable(Of TzdbZone1970Location.Country)
  fullName.vb: System.IEquatable(Of NodaTime.TimeZones.TzdbZone1970Location.Country)
  name.vb: IEquatable(Of TzdbZone1970Location.Country)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Name*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.Name
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country_Name
  name: Name
  nameWithType: TzdbZone1970Location.Country.Name
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Code*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.Code
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country_Code
  name: Code
  nameWithType: TzdbZone1970Location.Country.Code
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Code
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.#ctor
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country__ctor_System_String_System_String_
  name: Country
  nameWithType: TzdbZone1970Location.Country.Country
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Country
  nameWithType.vb: TzdbZone1970Location.Country.New
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.Country.New
  name.vb: New
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.Equals
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country_Equals_NodaTime_TimeZones_TzdbZone1970Location_Country_
  name: Equals
  nameWithType: TzdbZone1970Location.Country.Equals
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.Equals
- uid: System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  commentId: M:System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  parent: System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Country)
  nameWithType: IEquatable<TzdbZone1970Location.Country>.Equals(TzdbZone1970Location.Country)
  fullName: System.IEquatable<NodaTime.TimeZones.TzdbZone1970Location.Country>.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  nameWithType.vb: IEquatable(Of TzdbZone1970Location.Country).Equals(TzdbZone1970Location.Country)
  fullName.vb: System.IEquatable(Of NodaTime.TimeZones.TzdbZone1970Location.Country).Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.TimeZones.TzdbZone1970Location.Country}.Equals(NodaTime.TimeZones.TzdbZone1970Location.Country)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: )
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country
  commentId: T:NodaTime.TimeZones.TzdbZone1970Location.Country
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.TzdbZone1970Location.html
  name: TzdbZone1970Location.Country
  nameWithType: TzdbZone1970Location.Country
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country
  spec.csharp:
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  spec.vb:
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country_GetHashCode
  name: GetHashCode
  nameWithType: TzdbZone1970Location.Country.GetHashCode
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime.TimeZones.TzdbZone1970Location.Country.ToString*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Country.ToString
  href: NodaTime.TimeZones.TzdbZone1970Location.Country.html#NodaTime_TimeZones_TzdbZone1970Location_Country_ToString
  name: ToString
  nameWithType: TzdbZone1970Location.Country.ToString
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Country.ToString
shouldSkipMarkup: true
