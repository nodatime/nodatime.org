### YamlMime:ManagedReference
items:
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  id: OffsetDateTime
  parent: NodaTime
  children:
  - NodaTime.OffsetDateTime.#ctor(NodaTime.LocalDateTime,NodaTime.Offset)
  - NodaTime.OffsetDateTime.Add(NodaTime.OffsetDateTime,NodaTime.Duration)
  - NodaTime.OffsetDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  - NodaTime.OffsetDateTime.Calendar
  - NodaTime.OffsetDateTime.ClockHourOfHalfDay
  - NodaTime.OffsetDateTime.Date
  - NodaTime.OffsetDateTime.Day
  - NodaTime.OffsetDateTime.DayOfWeek
  - NodaTime.OffsetDateTime.DayOfYear
  - NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@,NodaTime.Offset@)
  - NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDateTime@,NodaTime.Offset@)
  - NodaTime.OffsetDateTime.Equals(NodaTime.OffsetDateTime)
  - NodaTime.OffsetDateTime.Equals(System.Object)
  - NodaTime.OffsetDateTime.Era
  - NodaTime.OffsetDateTime.FromDateTimeOffset(System.DateTimeOffset)
  - NodaTime.OffsetDateTime.GetHashCode
  - NodaTime.OffsetDateTime.Hour
  - NodaTime.OffsetDateTime.InFixedZone
  - NodaTime.OffsetDateTime.InZone(NodaTime.DateTimeZone)
  - NodaTime.OffsetDateTime.LocalDateTime
  - NodaTime.OffsetDateTime.Millisecond
  - NodaTime.OffsetDateTime.Minus(NodaTime.Duration)
  - NodaTime.OffsetDateTime.Minus(NodaTime.OffsetDateTime)
  - NodaTime.OffsetDateTime.Minute
  - NodaTime.OffsetDateTime.Month
  - NodaTime.OffsetDateTime.NanosecondOfDay
  - NodaTime.OffsetDateTime.NanosecondOfSecond
  - NodaTime.OffsetDateTime.Offset
  - NodaTime.OffsetDateTime.Plus(NodaTime.Duration)
  - NodaTime.OffsetDateTime.PlusHours(System.Int32)
  - NodaTime.OffsetDateTime.PlusMilliseconds(System.Int64)
  - NodaTime.OffsetDateTime.PlusMinutes(System.Int32)
  - NodaTime.OffsetDateTime.PlusNanoseconds(System.Int64)
  - NodaTime.OffsetDateTime.PlusSeconds(System.Int64)
  - NodaTime.OffsetDateTime.PlusTicks(System.Int64)
  - NodaTime.OffsetDateTime.Second
  - NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.Duration)
  - NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  - NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  - NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - NodaTime.OffsetDateTime.TickOfDay
  - NodaTime.OffsetDateTime.TickOfSecond
  - NodaTime.OffsetDateTime.TimeOfDay
  - NodaTime.OffsetDateTime.ToDateTimeOffset
  - NodaTime.OffsetDateTime.ToInstant
  - NodaTime.OffsetDateTime.ToOffsetDate
  - NodaTime.OffsetDateTime.ToOffsetTime
  - NodaTime.OffsetDateTime.ToString
  - NodaTime.OffsetDateTime.ToString(System.String,System.IFormatProvider)
  - NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  - NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  - NodaTime.OffsetDateTime.WithCalendar(NodaTime.CalendarSystem)
  - NodaTime.OffsetDateTime.WithOffset(NodaTime.Offset)
  - NodaTime.OffsetDateTime.Year
  - NodaTime.OffsetDateTime.YearOfEra
  - NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  - NodaTime.OffsetDateTime.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  - NodaTime.OffsetDateTime.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  - NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  - NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  langs:
  - csharp
  - vb
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
  type: Struct
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A local date and time in a particular calendar system, combined with an offset from UTC. This is

    broadly similar to <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> in the BCL.
  remarks: >-
    <p>

    Equality is defined in a component-wise fashion: two values are the same if they represent equal date/time values

    (including being in the same calendar) and equal offsets from UTC.

    Ordering between offset date/time values has no natural definition; see <xref href="NodaTime.OffsetDateTime.Comparer" data-throw-if-not-resolved="false"></xref> for built-in comparers.

    </p>

    <p>

    A value of this type unambiguously represents both a local time and an instant on the timeline,

    but does not have a well-defined time zone. This means you cannot reliably know what the local

    time would be five minutes later, for example. While this doesn't sound terribly useful, it's very common

    in text representations.

    </p>

    <p>The default value of this type is 0001-01-01T00:00:00Z (midnight on January 1st, 1 C.E. with a UTC offset of 0) in the ISO calendar.</p>
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(OffsetDateTimeTypeConverter))]

      public readonly struct OffsetDateTime : IEquatable<OffsetDateTime>, IFormattable, IXmlSerializable, IAdditionOperators<OffsetDateTime, Duration, OffsetDateTime>, ISubtractionOperators<OffsetDateTime, Duration, OffsetDateTime>, IEqualityOperators<OffsetDateTime, OffsetDateTime, bool>
    content.vb: >-
      <TypeConverter(GetType(OffsetDateTimeTypeConverter))>

      Public Structure OffsetDateTime Implements IEquatable(Of OffsetDateTime), IFormattable, IXmlSerializable, IAdditionOperators(Of OffsetDateTime, Duration, OffsetDateTime), ISubtractionOperators(Of OffsetDateTime, Duration, OffsetDateTime), IEqualityOperators(Of OffsetDateTime, OffsetDateTime, Boolean)
  implements:
  - System.IEquatable{NodaTime.OffsetDateTime}
  - System.IFormattable
  - System.Xml.Serialization.IXmlSerializable
  - System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  - System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  - System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.OffsetDateTime.#ctor(NodaTime.LocalDateTime,NodaTime.Offset)
  commentId: M:NodaTime.OffsetDateTime.#ctor(NodaTime.LocalDateTime,NodaTime.Offset)
  id: '#ctor(NodaTime.LocalDateTime,NodaTime.Offset)'
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: OffsetDateTime(LocalDateTime, Offset)
  nameWithType: OffsetDateTime.OffsetDateTime(LocalDateTime, Offset)
  fullName: NodaTime.OffsetDateTime.OffsetDateTime(NodaTime.LocalDateTime, NodaTime.Offset)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs a new offset date/time with the given local date and time, and the given offset from UTC.
  example: []
  syntax:
    content: public OffsetDateTime(LocalDateTime localDateTime, Offset offset)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: Local date and time to represent
    - id: offset
      type: NodaTime.Offset
      description: Offset from UTC
    content.vb: Public Sub New(localDateTime As LocalDateTime, offset As Offset)
  overload: NodaTime.OffsetDateTime.#ctor*
  nameWithType.vb: OffsetDateTime.New(LocalDateTime, Offset)
  fullName.vb: NodaTime.OffsetDateTime.New(NodaTime.LocalDateTime, NodaTime.Offset)
  name.vb: New(LocalDateTime, Offset)
- uid: NodaTime.OffsetDateTime.Calendar
  commentId: P:NodaTime.OffsetDateTime.Calendar
  id: Calendar
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: OffsetDateTime.Calendar
  fullName: NodaTime.OffsetDateTime.Calendar
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the calendar system associated with this offset date and time.
  example: []
  syntax:
    content: public CalendarSystem Calendar { get; }
    parameters: []
    return:
      type: NodaTime.CalendarSystem
      description: The calendar system associated with this offset date and time.
    content.vb: Public ReadOnly Property Calendar As CalendarSystem
  overload: NodaTime.OffsetDateTime.Calendar*
- uid: NodaTime.OffsetDateTime.Year
  commentId: P:NodaTime.OffsetDateTime.Year
  id: Year
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: OffsetDateTime.Year
  fullName: NodaTime.OffsetDateTime.Year
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this offset date and time.
  remarks: >-
    This returns the "absolute year", so, for the ISO calendar,
        a value of 0 means 1 BC, for example.
  example: []
  syntax:
    content: public int Year { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this offset date and time.
    content.vb: Public ReadOnly Property Year As Integer
  overload: NodaTime.OffsetDateTime.Year*
- uid: NodaTime.OffsetDateTime.Month
  commentId: P:NodaTime.OffsetDateTime.Month
  id: Month
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: OffsetDateTime.Month
  fullName: NodaTime.OffsetDateTime.Month
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the month of this offset date and time within the year.
  example: []
  syntax:
    content: public int Month { get; }
    parameters: []
    return:
      type: System.Int32
      description: The month of this offset date and time within the year.
    content.vb: Public ReadOnly Property Month As Integer
  overload: NodaTime.OffsetDateTime.Month*
- uid: NodaTime.OffsetDateTime.Day
  commentId: P:NodaTime.OffsetDateTime.Day
  id: Day
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: OffsetDateTime.Day
  fullName: NodaTime.OffsetDateTime.Day
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the day of this offset date and time within the month.
  example: []
  syntax:
    content: public int Day { get; }
    parameters: []
    return:
      type: System.Int32
      description: The day of this offset date and time within the month.
    content.vb: Public ReadOnly Property Day As Integer
  overload: NodaTime.OffsetDateTime.Day*
- uid: NodaTime.OffsetDateTime.DayOfWeek
  commentId: P:NodaTime.OffsetDateTime.DayOfWeek
  id: DayOfWeek
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: DayOfWeek
  nameWithType: OffsetDateTime.DayOfWeek
  fullName: NodaTime.OffsetDateTime.DayOfWeek
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the week day of this offset date and time expressed as an <xref href="NodaTime.IsoDayOfWeek" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public IsoDayOfWeek DayOfWeek { get; }
    parameters: []
    return:
      type: NodaTime.IsoDayOfWeek
      description: The week day of this offset date and time expressed as an <code>IsoDayOfWeek</code>.
    content.vb: Public ReadOnly Property DayOfWeek As IsoDayOfWeek
  overload: NodaTime.OffsetDateTime.DayOfWeek*
- uid: NodaTime.OffsetDateTime.YearOfEra
  commentId: P:NodaTime.OffsetDateTime.YearOfEra
  id: YearOfEra
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: YearOfEra
  nameWithType: OffsetDateTime.YearOfEra
  fullName: NodaTime.OffsetDateTime.YearOfEra
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this offset date and time within the era.
  example: []
  syntax:
    content: public int YearOfEra { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this offset date and time within the era.
    content.vb: Public ReadOnly Property YearOfEra As Integer
  overload: NodaTime.OffsetDateTime.YearOfEra*
- uid: NodaTime.OffsetDateTime.Era
  commentId: P:NodaTime.OffsetDateTime.Era
  id: Era
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Era
  nameWithType: OffsetDateTime.Era
  fullName: NodaTime.OffsetDateTime.Era
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the era of this offset date and time.
  example: []
  syntax:
    content: public Era Era { get; }
    parameters: []
    return:
      type: NodaTime.Calendars.Era
      description: The era of this offset date and time.
    content.vb: Public ReadOnly Property Era As Era
  overload: NodaTime.OffsetDateTime.Era*
- uid: NodaTime.OffsetDateTime.DayOfYear
  commentId: P:NodaTime.OffsetDateTime.DayOfYear
  id: DayOfYear
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: DayOfYear
  nameWithType: OffsetDateTime.DayOfYear
  fullName: NodaTime.OffsetDateTime.DayOfYear
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the day of this offset date and time within the year.
  example: []
  syntax:
    content: public int DayOfYear { get; }
    parameters: []
    return:
      type: System.Int32
      description: The day of this offset date and time within the year.
    content.vb: Public ReadOnly Property DayOfYear As Integer
  overload: NodaTime.OffsetDateTime.DayOfYear*
- uid: NodaTime.OffsetDateTime.Hour
  commentId: P:NodaTime.OffsetDateTime.Hour
  id: Hour
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Hour
  nameWithType: OffsetDateTime.Hour
  fullName: NodaTime.OffsetDateTime.Hour
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the hour of day of this offset date and time, in the range 0 to 23 inclusive.
  example: []
  syntax:
    content: public int Hour { get; }
    parameters: []
    return:
      type: System.Int32
      description: The hour of day of this offset date and time, in the range 0 to 23 inclusive.
    content.vb: Public ReadOnly Property Hour As Integer
  overload: NodaTime.OffsetDateTime.Hour*
- uid: NodaTime.OffsetDateTime.ClockHourOfHalfDay
  commentId: P:NodaTime.OffsetDateTime.ClockHourOfHalfDay
  id: ClockHourOfHalfDay
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ClockHourOfHalfDay
  nameWithType: OffsetDateTime.ClockHourOfHalfDay
  fullName: NodaTime.OffsetDateTime.ClockHourOfHalfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the hour of the half-day of this offset date and time, in the range 1 to 12 inclusive.
  example: []
  syntax:
    content: public int ClockHourOfHalfDay { get; }
    parameters: []
    return:
      type: System.Int32
      description: The hour of the half-day of this offset date and time, in the range 1 to 12 inclusive.
    content.vb: Public ReadOnly Property ClockHourOfHalfDay As Integer
  overload: NodaTime.OffsetDateTime.ClockHourOfHalfDay*
- uid: NodaTime.OffsetDateTime.Minute
  commentId: P:NodaTime.OffsetDateTime.Minute
  id: Minute
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Minute
  nameWithType: OffsetDateTime.Minute
  fullName: NodaTime.OffsetDateTime.Minute
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the minute of this offset date and time, in the range 0 to 59 inclusive.
  example: []
  syntax:
    content: public int Minute { get; }
    parameters: []
    return:
      type: System.Int32
      description: The minute of this offset date and time, in the range 0 to 59 inclusive.
    content.vb: Public ReadOnly Property Minute As Integer
  overload: NodaTime.OffsetDateTime.Minute*
- uid: NodaTime.OffsetDateTime.Second
  commentId: P:NodaTime.OffsetDateTime.Second
  id: Second
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: OffsetDateTime.Second
  fullName: NodaTime.OffsetDateTime.Second
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the second of this offset date and time within the minute, in the range 0 to 59 inclusive.
  example: []
  syntax:
    content: public int Second { get; }
    parameters: []
    return:
      type: System.Int32
      description: The second of this offset date and time within the minute, in the range 0 to 59 inclusive.
    content.vb: Public ReadOnly Property Second As Integer
  overload: NodaTime.OffsetDateTime.Second*
- uid: NodaTime.OffsetDateTime.Millisecond
  commentId: P:NodaTime.OffsetDateTime.Millisecond
  id: Millisecond
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Millisecond
  nameWithType: OffsetDateTime.Millisecond
  fullName: NodaTime.OffsetDateTime.Millisecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the millisecond of this offset date and time within the second, in the range 0 to 999 inclusive.
  example: []
  syntax:
    content: public int Millisecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The millisecond of this offset date and time within the second, in the range 0 to 999 inclusive.
    content.vb: Public ReadOnly Property Millisecond As Integer
  overload: NodaTime.OffsetDateTime.Millisecond*
- uid: NodaTime.OffsetDateTime.TickOfSecond
  commentId: P:NodaTime.OffsetDateTime.TickOfSecond
  id: TickOfSecond
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: TickOfSecond
  nameWithType: OffsetDateTime.TickOfSecond
  fullName: NodaTime.OffsetDateTime.TickOfSecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the tick of this offset date and time within the second, in the range 0 to 9,999,999 inclusive.
  example: []
  syntax:
    content: public int TickOfSecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The tick of this offset date and time within the second, in the range 0 to 9,999,999 inclusive.
    content.vb: Public ReadOnly Property TickOfSecond As Integer
  overload: NodaTime.OffsetDateTime.TickOfSecond*
- uid: NodaTime.OffsetDateTime.TickOfDay
  commentId: P:NodaTime.OffsetDateTime.TickOfDay
  id: TickOfDay
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: TickOfDay
  nameWithType: OffsetDateTime.TickOfDay
  fullName: NodaTime.OffsetDateTime.TickOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the tick of this offset date and time within the day, in the range 0 to 863,999,999,999 inclusive.
  example: []
  syntax:
    content: public long TickOfDay { get; }
    parameters: []
    return:
      type: System.Int64
      description: The tick of this offset date and time within the day, in the range 0 to 863,999,999,999 inclusive.
    content.vb: Public ReadOnly Property TickOfDay As Long
  overload: NodaTime.OffsetDateTime.TickOfDay*
- uid: NodaTime.OffsetDateTime.NanosecondOfSecond
  commentId: P:NodaTime.OffsetDateTime.NanosecondOfSecond
  id: NanosecondOfSecond
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: NanosecondOfSecond
  nameWithType: OffsetDateTime.NanosecondOfSecond
  fullName: NodaTime.OffsetDateTime.NanosecondOfSecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the nanosecond of this offset date and time within the second, in the range 0 to 999,999,999 inclusive.
  example: []
  syntax:
    content: public int NanosecondOfSecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The nanosecond of this offset date and time within the second, in the range 0 to 999,999,999 inclusive.
    content.vb: Public ReadOnly Property NanosecondOfSecond As Integer
  overload: NodaTime.OffsetDateTime.NanosecondOfSecond*
- uid: NodaTime.OffsetDateTime.NanosecondOfDay
  commentId: P:NodaTime.OffsetDateTime.NanosecondOfDay
  id: NanosecondOfDay
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: NanosecondOfDay
  nameWithType: OffsetDateTime.NanosecondOfDay
  fullName: NodaTime.OffsetDateTime.NanosecondOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the nanosecond of this offset date and time within the day, in the range 0 to 86,399,999,999,999 inclusive.
  example: []
  syntax:
    content: public long NanosecondOfDay { get; }
    parameters: []
    return:
      type: System.Int64
      description: The nanosecond of this offset date and time within the day, in the range 0 to 86,399,999,999,999 inclusive.
    content.vb: Public ReadOnly Property NanosecondOfDay As Long
  overload: NodaTime.OffsetDateTime.NanosecondOfDay*
- uid: NodaTime.OffsetDateTime.LocalDateTime
  commentId: P:NodaTime.OffsetDateTime.LocalDateTime
  id: LocalDateTime
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime
  nameWithType: OffsetDateTime.LocalDateTime
  fullName: NodaTime.OffsetDateTime.LocalDateTime
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the local date and time represented within this offset date and time.
  example: []
  syntax:
    content: public LocalDateTime LocalDateTime { get; }
    parameters: []
    return:
      type: NodaTime.LocalDateTime
      description: The local date and time represented within this offset date and time.
    content.vb: Public ReadOnly Property LocalDateTime As LocalDateTime
  overload: NodaTime.OffsetDateTime.LocalDateTime*
- uid: NodaTime.OffsetDateTime.Date
  commentId: P:NodaTime.OffsetDateTime.Date
  id: Date
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: OffsetDateTime.Date
  fullName: NodaTime.OffsetDateTime.Date
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the local date represented by this offset date and time.
  remarks: >-
    The returned <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref>

    will have the same calendar system and return the same values for each of the date-based calendar

    properties (Year, MonthOfYear and so on), but will not have any offset information.
  example: []
  syntax:
    content: public LocalDate Date { get; }
    parameters: []
    return:
      type: NodaTime.LocalDate
      description: The local date represented by this offset date and time.
    content.vb: Public ReadOnly Property [Date] As LocalDate
  overload: NodaTime.OffsetDateTime.Date*
- uid: NodaTime.OffsetDateTime.TimeOfDay
  commentId: P:NodaTime.OffsetDateTime.TimeOfDay
  id: TimeOfDay
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: TimeOfDay
  nameWithType: OffsetDateTime.TimeOfDay
  fullName: NodaTime.OffsetDateTime.TimeOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the time portion of this offset date and time.
  remarks: >-
    The returned <xref href="NodaTime.LocalTime" data-throw-if-not-resolved="false"></xref> will

    return the same values for each of the time-based properties (Hour, Minute and so on), but

    will not have any offset information.
  example: []
  syntax:
    content: public LocalTime TimeOfDay { get; }
    parameters: []
    return:
      type: NodaTime.LocalTime
      description: The time portion of this offset date and time.
    content.vb: Public ReadOnly Property TimeOfDay As LocalTime
  overload: NodaTime.OffsetDateTime.TimeOfDay*
- uid: NodaTime.OffsetDateTime.Offset
  commentId: P:NodaTime.OffsetDateTime.Offset
  id: Offset
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: OffsetDateTime.Offset
  fullName: NodaTime.OffsetDateTime.Offset
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the offset from UTC.
  example: []
  syntax:
    content: public Offset Offset { get; }
    parameters: []
    return:
      type: NodaTime.Offset
      description: The offset from UTC.
    content.vb: Public ReadOnly Property Offset As Offset
  overload: NodaTime.OffsetDateTime.Offset*
- uid: NodaTime.OffsetDateTime.ToInstant
  commentId: M:NodaTime.OffsetDateTime.ToInstant
  id: ToInstant
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToInstant()
  nameWithType: OffsetDateTime.ToInstant()
  fullName: NodaTime.OffsetDateTime.ToInstant()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts this offset date and time to an instant in time by subtracting the offset from the local date and time.
  example: []
  syntax:
    content: public Instant ToInstant()
    return:
      type: NodaTime.Instant
      description: The instant represented by this offset date and time
    content.vb: Public Function ToInstant() As Instant
  overload: NodaTime.OffsetDateTime.ToInstant*
- uid: NodaTime.OffsetDateTime.InFixedZone
  commentId: M:NodaTime.OffsetDateTime.InFixedZone
  id: InFixedZone
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: InFixedZone()
  nameWithType: OffsetDateTime.InFixedZone()
  fullName: NodaTime.OffsetDateTime.InFixedZone()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns this value as a <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    This method returns a <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> with the same local date and time as this value, using a

    fixed time zone with the same offset as the offset for this value.

    </p>

    <p>

    Note that because the resulting <code>ZonedDateTime</code> has a fixed time zone, it is generally not useful to

    use this result for arithmetic operations, as the zone will not adjust to account for daylight savings.

    </p>
  example: []
  syntax:
    content: public ZonedDateTime InFixedZone()
    return:
      type: NodaTime.ZonedDateTime
      description: A zoned date/time with the same local time and a fixed time zone using the offset from this value.
    content.vb: Public Function InFixedZone() As ZonedDateTime
  overload: NodaTime.OffsetDateTime.InFixedZone*
- uid: NodaTime.OffsetDateTime.InZone(NodaTime.DateTimeZone)
  commentId: M:NodaTime.OffsetDateTime.InZone(NodaTime.DateTimeZone)
  id: InZone(NodaTime.DateTimeZone)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: InZone(DateTimeZone)
  nameWithType: OffsetDateTime.InZone(DateTimeZone)
  fullName: NodaTime.OffsetDateTime.InZone(NodaTime.DateTimeZone)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns this value in ths specified time zone. This method does not expect

    the offset in the zone to be the same as for the current value; it simply converts

    this value into an <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> and finds the <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref>

    for that instant in the specified zone.
  example: []
  syntax:
    content: public ZonedDateTime InZone(DateTimeZone zone)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone of the new value.
    return:
      type: NodaTime.ZonedDateTime
      description: The instant represented by this value, in the specified time zone.
    content.vb: Public Function InZone(zone As DateTimeZone) As ZonedDateTime
  overload: NodaTime.OffsetDateTime.InZone*
- uid: NodaTime.OffsetDateTime.ToDateTimeOffset
  commentId: M:NodaTime.OffsetDateTime.ToDateTimeOffset
  id: ToDateTimeOffset
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset()
  nameWithType: OffsetDateTime.ToDateTimeOffset()
  fullName: NodaTime.OffsetDateTime.ToDateTimeOffset()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the BCL <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> corresponding to this offset date and time.
  remarks: >-
    <p>

    If the date and time is not on a tick boundary (the unit of granularity of DateTime) the value will be truncated

    towards the start of time.

    </p>

    <p>

    If the offset has a non-zero second component, this is truncated as <code>DateTimeOffset</code> has an offset

    granularity of minutes.

    </p>

    <p>
      <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> uses the Gregorian calendar by definition, so the value is implicitly converted
    to the Gregorian calendar first. The result will be the same instant in time (potentially truncated as described

    above), but the values returned by the Year/Month/Day properties of the <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> may not

    match the Year/Month/Day properties of this value.

    </p>
  example: []
  syntax:
    content: public DateTimeOffset ToDateTimeOffset()
    return:
      type: System.DateTimeOffset
      description: >-
        A DateTimeOffset with the same local date/time and offset as this. The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> part of
            the result always has a "kind" of Unspecified.
    content.vb: Public Function ToDateTimeOffset() As DateTimeOffset
  overload: NodaTime.OffsetDateTime.ToDateTimeOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      The date/time is outside the range of <code>DateTimeOffset</code>,
          or the offset is outside the range of +/-14 hours (the range supported by <code>DateTimeOffset</code>).
- uid: NodaTime.OffsetDateTime.FromDateTimeOffset(System.DateTimeOffset)
  commentId: M:NodaTime.OffsetDateTime.FromDateTimeOffset(System.DateTimeOffset)
  id: FromDateTimeOffset(System.DateTimeOffset)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: FromDateTimeOffset(DateTimeOffset)
  nameWithType: OffsetDateTime.FromDateTimeOffset(DateTimeOffset)
  fullName: NodaTime.OffsetDateTime.FromDateTimeOffset(System.DateTimeOffset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Builds an <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> from a BCL <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> by converting

    the <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> part to a <xref href="NodaTime.OffsetDateTime.LocalDateTime" data-throw-if-not-resolved="false"></xref>, and the offset part to an <xref href="NodaTime.OffsetDateTime.Offset" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static OffsetDateTime FromDateTimeOffset(DateTimeOffset dateTimeOffset)
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: DateTimeOffset to convert
    return:
      type: NodaTime.OffsetDateTime
      description: The converted offset date and time
    content.vb: Public Shared Function FromDateTimeOffset(dateTimeOffset As DateTimeOffset) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.FromDateTimeOffset*
- uid: NodaTime.OffsetDateTime.WithCalendar(NodaTime.CalendarSystem)
  commentId: M:NodaTime.OffsetDateTime.WithCalendar(NodaTime.CalendarSystem)
  id: WithCalendar(NodaTime.CalendarSystem)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: WithCalendar(CalendarSystem)
  nameWithType: OffsetDateTime.WithCalendar(CalendarSystem)
  fullName: NodaTime.OffsetDateTime.WithCalendar(NodaTime.CalendarSystem)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Creates a new OffsetDateTime representing the same physical date, time and offset, but in a different calendar.

    The returned OffsetDateTime is likely to have different date field values to this one.

    For example, January 1st 1970 in the Gregorian calendar was December 19th 1969 in the Julian calendar.
  example: []
  syntax:
    content: public OffsetDateTime WithCalendar(CalendarSystem calendar)
    parameters:
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar system to convert this offset date and time to.
    return:
      type: NodaTime.OffsetDateTime
      description: The converted OffsetDateTime.
    content.vb: Public Function WithCalendar(calendar As CalendarSystem) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.WithCalendar*
- uid: NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  commentId: M:NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  id: With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: With(Func<LocalDate, LocalDate>)
  nameWithType: OffsetDateTime.With(Func<LocalDate, LocalDate>)
  fullName: NodaTime.OffsetDateTime.With(System.Func<NodaTime.LocalDate, NodaTime.LocalDate>)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns this offset date/time, with the given date adjuster applied to it, maintaining the existing time of day and offset.
  remarks: >-
    If the adjuster attempts to construct an

    invalid date (such as by trying to set a day-of-month of 30 in February), any exception thrown by

    that construction attempt will be propagated through this method.
  example: []
  syntax:
    content: public OffsetDateTime With(Func<LocalDate, LocalDate> adjuster)
    parameters:
    - id: adjuster
      type: System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
      description: The adjuster to apply.
    return:
      type: NodaTime.OffsetDateTime
      description: The adjusted offset date/time.
    content.vb: Public Function [With](adjuster As Func(Of LocalDate, LocalDate)) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.With*
  nameWithType.vb: OffsetDateTime.With(Func(Of LocalDate, LocalDate))
  fullName.vb: NodaTime.OffsetDateTime.With(System.Func(Of NodaTime.LocalDate, NodaTime.LocalDate))
  name.vb: With(Func(Of LocalDate, LocalDate))
- uid: NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  commentId: M:NodaTime.OffsetDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  id: With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: With(Func<LocalTime, LocalTime>)
  nameWithType: OffsetDateTime.With(Func<LocalTime, LocalTime>)
  fullName: NodaTime.OffsetDateTime.With(System.Func<NodaTime.LocalTime, NodaTime.LocalTime>)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns this date/time, with the given time adjuster applied to it, maintaining the existing date and offset.
  remarks: >-
    If the adjuster attempts to construct an invalid time, any exception thrown by

    that construction attempt will be propagated through this method.
  example: []
  syntax:
    content: public OffsetDateTime With(Func<LocalTime, LocalTime> adjuster)
    parameters:
    - id: adjuster
      type: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
      description: The adjuster to apply.
    return:
      type: NodaTime.OffsetDateTime
      description: The adjusted offset date/time.
    content.vb: Public Function [With](adjuster As Func(Of LocalTime, LocalTime)) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.With*
  nameWithType.vb: OffsetDateTime.With(Func(Of LocalTime, LocalTime))
  fullName.vb: NodaTime.OffsetDateTime.With(System.Func(Of NodaTime.LocalTime, NodaTime.LocalTime))
  name.vb: With(Func(Of LocalTime, LocalTime))
- uid: NodaTime.OffsetDateTime.WithOffset(NodaTime.Offset)
  commentId: M:NodaTime.OffsetDateTime.WithOffset(NodaTime.Offset)
  id: WithOffset(NodaTime.Offset)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: WithOffset(Offset)
  nameWithType: OffsetDateTime.WithOffset(Offset)
  fullName: NodaTime.OffsetDateTime.WithOffset(NodaTime.Offset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Creates a new OffsetDateTime representing the instant in time in the same calendar,

    but with a different offset. The local date and time is adjusted accordingly.
  example: []
  syntax:
    content: public OffsetDateTime WithOffset(Offset offset)
    parameters:
    - id: offset
      type: NodaTime.Offset
      description: The new offset to use.
    return:
      type: NodaTime.OffsetDateTime
      description: The converted OffsetDateTime.
    content.vb: Public Function WithOffset(offset As Offset) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.WithOffset*
- uid: NodaTime.OffsetDateTime.ToOffsetDate
  commentId: M:NodaTime.OffsetDateTime.ToOffsetDate
  id: ToOffsetDate
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToOffsetDate()
  nameWithType: OffsetDateTime.ToOffsetDate()
  fullName: NodaTime.OffsetDateTime.ToOffsetDate()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Constructs a new <xref href="NodaTime.OffsetDate" data-throw-if-not-resolved="false"></xref> from the date and offset of this value,

    but omitting the time-of-day.
  example: []
  syntax:
    content: public OffsetDate ToOffsetDate()
    return:
      type: NodaTime.OffsetDate
      description: A value representing the date and offset aspects of this value.
    content.vb: Public Function ToOffsetDate() As OffsetDate
  overload: NodaTime.OffsetDateTime.ToOffsetDate*
- uid: NodaTime.OffsetDateTime.ToOffsetTime
  commentId: M:NodaTime.OffsetDateTime.ToOffsetTime
  id: ToOffsetTime
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToOffsetTime()
  nameWithType: OffsetDateTime.ToOffsetTime()
  fullName: NodaTime.OffsetDateTime.ToOffsetTime()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Constructs a new <xref href="NodaTime.OffsetTime" data-throw-if-not-resolved="false"></xref> from the time and offset of this value,

    but omitting the date.
  example: []
  syntax:
    content: public OffsetTime ToOffsetTime()
    return:
      type: NodaTime.OffsetTime
      description: A value representing the time and offset aspects of this value.
    content.vb: Public Function ToOffsetTime() As OffsetTime
  overload: NodaTime.OffsetDateTime.ToOffsetTime*
- uid: NodaTime.OffsetDateTime.GetHashCode
  commentId: M:NodaTime.OffsetDateTime.GetHashCode
  id: GetHashCode
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: OffsetDateTime.GetHashCode()
  fullName: NodaTime.OffsetDateTime.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a hash code for this offset date and time.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this offset date and time.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NodaTime.OffsetDateTime.GetHashCode*
- uid: NodaTime.OffsetDateTime.Equals(System.Object)
  commentId: M:NodaTime.OffsetDateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: OffsetDateTime.Equals(object?)
  fullName: NodaTime.OffsetDateTime.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this date with.
    return:
      type: System.Boolean
      description: True if the given value is another offset date/time equal to this one; false otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NodaTime.OffsetDateTime.Equals*
  nameWithType.vb: OffsetDateTime.Equals(Object)
  fullName.vb: NodaTime.OffsetDateTime.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.OffsetDateTime.Equals(NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.Equals(NodaTime.OffsetDateTime)
  id: Equals(NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Equals(OffsetDateTime)
  nameWithType: OffsetDateTime.Equals(OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.Equals(NodaTime.OffsetDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(OffsetDateTime other)
    parameters:
    - id: other
      type: NodaTime.OffsetDateTime
      description: The value to compare this offset date/time with.
    return:
      type: System.Boolean
      description: True if the given value is another offset date/time equal to this one; false otherwise.
    content.vb: Public Function Equals(other As OffsetDateTime) As Boolean
  overload: NodaTime.OffsetDateTime.Equals*
  implements:
  - System.IEquatable{NodaTime.OffsetDateTime}.Equals(NodaTime.OffsetDateTime)
- uid: NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDateTime@,NodaTime.Offset@)
  commentId: M:NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDateTime@,NodaTime.Offset@)
  id: Deconstruct(NodaTime.LocalDateTime@,NodaTime.Offset@)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Deconstruct(out LocalDateTime, out Offset)
  nameWithType: OffsetDateTime.Deconstruct(out LocalDateTime, out Offset)
  fullName: NodaTime.OffsetDateTime.Deconstruct(out NodaTime.LocalDateTime, out NodaTime.Offset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Deconstruct this <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> into its components.
  example: []
  syntax:
    content: public void Deconstruct(out LocalDateTime localDateTime, out Offset offset)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: The <xref href="NodaTime.OffsetDateTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> component.
    - id: offset
      type: NodaTime.Offset
      description: The <xref href="NodaTime.OffsetDateTime.Offset" data-throw-if-not-resolved="false"></xref> component.
    content.vb: Public Sub Deconstruct(localDateTime As LocalDateTime, offset As Offset)
  overload: NodaTime.OffsetDateTime.Deconstruct*
  nameWithType.vb: OffsetDateTime.Deconstruct(LocalDateTime, Offset)
  fullName.vb: NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDateTime, NodaTime.Offset)
  name.vb: Deconstruct(LocalDateTime, Offset)
- uid: NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@,NodaTime.Offset@)
  commentId: M:NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@,NodaTime.Offset@)
  id: Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@,NodaTime.Offset@)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Deconstruct(out LocalDate, out LocalTime, out Offset)
  nameWithType: OffsetDateTime.Deconstruct(out LocalDate, out LocalTime, out Offset)
  fullName: NodaTime.OffsetDateTime.Deconstruct(out NodaTime.LocalDate, out NodaTime.LocalTime, out NodaTime.Offset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Deconstruct this <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> into its components.
  example: []
  syntax:
    content: public void Deconstruct(out LocalDate localDate, out LocalTime localTime, out Offset offset)
    parameters:
    - id: localDate
      type: NodaTime.LocalDate
      description: The <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> component.
    - id: localTime
      type: NodaTime.LocalTime
      description: The <xref href="NodaTime.LocalTime" data-throw-if-not-resolved="false"></xref> component.
    - id: offset
      type: NodaTime.Offset
      description: The <xref href="NodaTime.OffsetDateTime.Offset" data-throw-if-not-resolved="false"></xref> component.
    content.vb: Public Sub Deconstruct(localDate As LocalDate, localTime As LocalTime, offset As Offset)
  overload: NodaTime.OffsetDateTime.Deconstruct*
  nameWithType.vb: OffsetDateTime.Deconstruct(LocalDate, LocalTime, Offset)
  fullName.vb: NodaTime.OffsetDateTime.Deconstruct(NodaTime.LocalDate, NodaTime.LocalTime, NodaTime.Offset)
  name.vb: Deconstruct(LocalDate, LocalTime, Offset)
- uid: NodaTime.OffsetDateTime.ToString
  commentId: M:NodaTime.OffsetDateTime.ToString
  id: ToString
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: OffsetDateTime.ToString()
  fullName: NodaTime.OffsetDateTime.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        The value of the current instance in the default format pattern ("G"), using the current thread's

        culture to obtain a format provider.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NodaTime.OffsetDateTime.ToString*
- uid: NodaTime.OffsetDateTime.ToString(System.String,System.IFormatProvider)
  commentId: M:NodaTime.OffsetDateTime.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: OffsetDateTime.ToString(string?, IFormatProvider?)
  fullName: NodaTime.OffsetDateTime.ToString(string?, System.IFormatProvider?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Formats the value of the current instance using the specified pattern.
  example: []
  syntax:
    content: public string ToString(string? patternText, IFormatProvider? formatProvider)
    parameters:
    - id: patternText
      type: System.String
      description: >-
        The <xref href="System.String" data-throw-if-not-resolved="false"></xref> specifying the pattern to use,
            or null to use the default format pattern ("G").
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> to use when formatting the value,
            or null to use the current thread's culture to obtain a format provider.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the value of the current instance in the specified format.
    content.vb: Public Function ToString(patternText As String, formatProvider As IFormatProvider) As String
  overload: NodaTime.OffsetDateTime.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: OffsetDateTime.ToString(String, IFormatProvider)
  fullName.vb: NodaTime.OffsetDateTime.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: NodaTime.OffsetDateTime.Add(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.Add(NodaTime.OffsetDateTime,NodaTime.Duration)
  id: Add(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Add(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.Add(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.Add(NodaTime.OffsetDateTime, NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Adds a duration to an offset date and time.
  remarks: This is an alternative way of calling <xref href="NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime%2cNodaTime.Duration)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static OffsetDateTime Add(OffsetDateTime offsetDateTime, Duration duration)
    parameters:
    - id: offsetDateTime
      type: NodaTime.OffsetDateTime
      description: The value to add the duration to.
    - id: duration
      type: NodaTime.Duration
      description: The duration to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new value with the time advanced by the given duration, in the same calendar system and with the same offset.
    content.vb: Public Shared Function Add(offsetDateTime As OffsetDateTime, duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.Add*
- uid: NodaTime.OffsetDateTime.Plus(NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.Plus(NodaTime.Duration)
  id: Plus(NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Plus(Duration)
  nameWithType: OffsetDateTime.Plus(Duration)
  fullName: NodaTime.OffsetDateTime.Plus(NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding a duration to this offset date and time.
  remarks: This is an alternative way of calling <xref href="NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime%2cNodaTime.Duration)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public OffsetDateTime Plus(Duration duration)
    parameters:
    - id: duration
      type: NodaTime.Duration
      description: The duration to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function Plus(duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.Plus*
- uid: NodaTime.OffsetDateTime.PlusHours(System.Int32)
  commentId: M:NodaTime.OffsetDateTime.PlusHours(System.Int32)
  id: PlusHours(System.Int32)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusHours(int)
  nameWithType: OffsetDateTime.PlusHours(int)
  fullName: NodaTime.OffsetDateTime.PlusHours(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding a increment of hours to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusHours(int hours)
    parameters:
    - id: hours
      type: System.Int32
      description: The number of hours to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusHours(hours As Integer) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusHours*
  nameWithType.vb: OffsetDateTime.PlusHours(Integer)
  fullName.vb: NodaTime.OffsetDateTime.PlusHours(Integer)
  name.vb: PlusHours(Integer)
- uid: NodaTime.OffsetDateTime.PlusMinutes(System.Int32)
  commentId: M:NodaTime.OffsetDateTime.PlusMinutes(System.Int32)
  id: PlusMinutes(System.Int32)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusMinutes(int)
  nameWithType: OffsetDateTime.PlusMinutes(int)
  fullName: NodaTime.OffsetDateTime.PlusMinutes(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding an increment of minutes to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusMinutes(int minutes)
    parameters:
    - id: minutes
      type: System.Int32
      description: The number of minutes to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusMinutes(minutes As Integer) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusMinutes*
  nameWithType.vb: OffsetDateTime.PlusMinutes(Integer)
  fullName.vb: NodaTime.OffsetDateTime.PlusMinutes(Integer)
  name.vb: PlusMinutes(Integer)
- uid: NodaTime.OffsetDateTime.PlusSeconds(System.Int64)
  commentId: M:NodaTime.OffsetDateTime.PlusSeconds(System.Int64)
  id: PlusSeconds(System.Int64)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusSeconds(long)
  nameWithType: OffsetDateTime.PlusSeconds(long)
  fullName: NodaTime.OffsetDateTime.PlusSeconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding an increment of seconds to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusSeconds(long seconds)
    parameters:
    - id: seconds
      type: System.Int64
      description: The number of seconds to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusSeconds(seconds As Long) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusSeconds*
  nameWithType.vb: OffsetDateTime.PlusSeconds(Long)
  fullName.vb: NodaTime.OffsetDateTime.PlusSeconds(Long)
  name.vb: PlusSeconds(Long)
- uid: NodaTime.OffsetDateTime.PlusMilliseconds(System.Int64)
  commentId: M:NodaTime.OffsetDateTime.PlusMilliseconds(System.Int64)
  id: PlusMilliseconds(System.Int64)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusMilliseconds(long)
  nameWithType: OffsetDateTime.PlusMilliseconds(long)
  fullName: NodaTime.OffsetDateTime.PlusMilliseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding an increment of milliseconds to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusMilliseconds(long milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int64
      description: The number of milliseconds to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusMilliseconds(milliseconds As Long) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusMilliseconds*
  nameWithType.vb: OffsetDateTime.PlusMilliseconds(Long)
  fullName.vb: NodaTime.OffsetDateTime.PlusMilliseconds(Long)
  name.vb: PlusMilliseconds(Long)
- uid: NodaTime.OffsetDateTime.PlusTicks(System.Int64)
  commentId: M:NodaTime.OffsetDateTime.PlusTicks(System.Int64)
  id: PlusTicks(System.Int64)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusTicks(long)
  nameWithType: OffsetDateTime.PlusTicks(long)
  fullName: NodaTime.OffsetDateTime.PlusTicks(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding an increment of ticks to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusTicks(long ticks)
    parameters:
    - id: ticks
      type: System.Int64
      description: The number of ticks to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusTicks(ticks As Long) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusTicks*
  nameWithType.vb: OffsetDateTime.PlusTicks(Long)
  fullName.vb: NodaTime.OffsetDateTime.PlusTicks(Long)
  name.vb: PlusTicks(Long)
- uid: NodaTime.OffsetDateTime.PlusNanoseconds(System.Int64)
  commentId: M:NodaTime.OffsetDateTime.PlusNanoseconds(System.Int64)
  id: PlusNanoseconds(System.Int64)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: PlusNanoseconds(long)
  nameWithType: OffsetDateTime.PlusNanoseconds(long)
  fullName: NodaTime.OffsetDateTime.PlusNanoseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding an increment of nanoseconds to this offset date and time
  example: []
  syntax:
    content: public OffsetDateTime PlusNanoseconds(long nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Int64
      description: The number of nanoseconds to add
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function PlusNanoseconds(nanoseconds As Long) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.PlusNanoseconds*
  nameWithType.vb: OffsetDateTime.PlusNanoseconds(Long)
  fullName.vb: NodaTime.OffsetDateTime.PlusNanoseconds(Long)
  name.vb: PlusNanoseconds(Long)
- uid: NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  id: op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: operator +(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.operator +(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.operator +(NodaTime.OffsetDateTime, NodaTime.Duration)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> with the time advanced by the given duration.
  remarks: The returned value retains the calendar system and offset of the <code class="paramref">offsetDateTime</code>.
  example: []
  syntax:
    content: public static OffsetDateTime operator +(OffsetDateTime offsetDateTime, Duration duration)
    parameters:
    - id: offsetDateTime
      type: NodaTime.OffsetDateTime
      description: The <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> to add the duration to.
    - id: duration
      type: NodaTime.Duration
      description: The duration to add.
    return:
      type: NodaTime.OffsetDateTime
      description: A new value with the time advanced by the given duration, in the same calendar system and with the same offset.
    content.vb: Public Shared Operator +(offsetDateTime As OffsetDateTime, duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.op_Addition*
  implements:
  - System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  nameWithType.vb: OffsetDateTime.+(OffsetDateTime, Duration)
  fullName.vb: NodaTime.OffsetDateTime.+(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: +(OffsetDateTime, Duration)
- uid: NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.Duration)
  id: Subtract(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Subtract(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.Subtract(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime, NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts a duration from an offset date and time.
  remarks: This is an alternative way of calling <xref href="NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime%2cNodaTime.Duration)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static OffsetDateTime Subtract(OffsetDateTime offsetDateTime, Duration duration)
    parameters:
    - id: offsetDateTime
      type: NodaTime.OffsetDateTime
      description: The value to subtract the duration from.
    - id: duration
      type: NodaTime.Duration
      description: The duration to subtract.
    return:
      type: NodaTime.OffsetDateTime
      description: A new value with the time "rewound" by the given duration, in the same calendar system and with the same offset.
    content.vb: Public Shared Function Subtract(offsetDateTime As OffsetDateTime, duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.Subtract*
- uid: NodaTime.OffsetDateTime.Minus(NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.Minus(NodaTime.Duration)
  id: Minus(NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Minus(Duration)
  nameWithType: OffsetDateTime.Minus(Duration)
  fullName: NodaTime.OffsetDateTime.Minus(NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the result of subtracting a duration from this offset date and time, for a fluent alternative to

    <xref href="NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime%2cNodaTime.Duration)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public OffsetDateTime Minus(Duration duration)
    parameters:
    - id: duration
      type: NodaTime.Duration
      description: The duration to subtract
    return:
      type: NodaTime.OffsetDateTime
      description: A new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the result of the subtraction.
    content.vb: Public Function Minus(duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.Minus*
- uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  id: op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: operator -(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.operator -(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.operator -(NodaTime.OffsetDateTime, NodaTime.Duration)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> with the duration subtracted.
  remarks: The returned value retains the calendar system and offset of the <code class="paramref">offsetDateTime</code>.
  example: []
  syntax:
    content: public static OffsetDateTime operator -(OffsetDateTime offsetDateTime, Duration duration)
    parameters:
    - id: offsetDateTime
      type: NodaTime.OffsetDateTime
      description: The value to subtract the duration from.
    - id: duration
      type: NodaTime.Duration
      description: The duration to subtract.
    return:
      type: NodaTime.OffsetDateTime
      description: A new value with the time "rewound" by the given duration, in the same calendar system and with the same offset.
    content.vb: Public Shared Operator -(offsetDateTime As OffsetDateTime, duration As Duration) As OffsetDateTime
  overload: NodaTime.OffsetDateTime.op_Subtraction*
  implements:
  - System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  nameWithType.vb: OffsetDateTime.-(OffsetDateTime, Duration)
  fullName.vb: NodaTime.OffsetDateTime.-(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: -(OffsetDateTime, Duration)
- uid: NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  id: Subtract(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Subtract(OffsetDateTime, OffsetDateTime)
  nameWithType: OffsetDateTime.Subtract(OffsetDateTime, OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.Subtract(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts one offset date and time from another, returning an elapsed duration.
  remarks: This is an alternative way of calling <xref href="NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime%2cNodaTime.OffsetDateTime)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Duration Subtract(OffsetDateTime end, OffsetDateTime start)
    parameters:
    - id: end
      type: NodaTime.OffsetDateTime
      description: >-
        The offset date and time value to subtract from; if this is later than <code class="paramref">start</code>
            then the result will be positive.
    - id: start
      type: NodaTime.OffsetDateTime
      description: The offset date and time to subtract from <code class="paramref">end</code>.
    return:
      type: NodaTime.Duration
      description: The elapsed duration from <code class="paramref">start</code> to <code class="paramref">end</code>.
    content.vb: Public Shared Function Subtract([end] As OffsetDateTime, start As OffsetDateTime) As Duration
  overload: NodaTime.OffsetDateTime.Subtract*
- uid: NodaTime.OffsetDateTime.Minus(NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.Minus(NodaTime.OffsetDateTime)
  id: Minus(NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: Minus(OffsetDateTime)
  nameWithType: OffsetDateTime.Minus(OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.Minus(NodaTime.OffsetDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the result of subtracting another offset date and time from this one, resulting in the elapsed duration

    between the two instants represented in the values.
  remarks: This is an alternative way of calling <xref href="NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime%2cNodaTime.OffsetDateTime)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Duration Minus(OffsetDateTime other)
    parameters:
    - id: other
      type: NodaTime.OffsetDateTime
      description: The offset date and time to subtract from this one.
    return:
      type: NodaTime.Duration
      description: The elapsed duration from <code class="paramref">other</code> to this value.
    content.vb: Public Function Minus(other As OffsetDateTime) As Duration
  overload: NodaTime.OffsetDateTime.Minus*
- uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  id: op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: operator -(OffsetDateTime, OffsetDateTime)
  nameWithType: OffsetDateTime.operator -(OffsetDateTime, OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.operator -(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Subtracts one <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> from another, resulting in the elapsed time between

    the two values.
  remarks: >-
    This is equivalent to <code>end.ToInstant() - start.ToInstant()</code>; in particular:

    <ul><li>The two values can use different calendar systems</li><li>The two values can have different UTC offsets</li></ul>
  example: []
  syntax:
    content: public static Duration operator -(OffsetDateTime end, OffsetDateTime start)
    parameters:
    - id: end
      type: NodaTime.OffsetDateTime
      description: >-
        The offset date and time value to subtract from; if this is later than <code class="paramref">start</code>
            then the result will be positive.
    - id: start
      type: NodaTime.OffsetDateTime
      description: The offset date and time to subtract from <code class="paramref">end</code>.
    return:
      type: NodaTime.Duration
      description: The elapsed duration from <code class="paramref">start</code> to <code class="paramref">end</code>.
    content.vb: Public Shared Operator -([end] As OffsetDateTime, start As OffsetDateTime) As Duration
  overload: NodaTime.OffsetDateTime.op_Subtraction*
  nameWithType.vb: OffsetDateTime.-(OffsetDateTime, OffsetDateTime)
  fullName.vb: NodaTime.OffsetDateTime.-(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: -(OffsetDateTime, OffsetDateTime)
- uid: NodaTime.OffsetDateTime.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  id: op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: operator ==(OffsetDateTime, OffsetDateTime)
  nameWithType: OffsetDateTime.operator ==(OffsetDateTime, OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.operator ==(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator == (equality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator ==(OffsetDateTime left, OffsetDateTime right)
    parameters:
    - id: left
      type: NodaTime.OffsetDateTime
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.OffsetDateTime
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator =(left As OffsetDateTime, right As OffsetDateTime) As Boolean
  overload: NodaTime.OffsetDateTime.op_Equality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  nameWithType.vb: OffsetDateTime.=(OffsetDateTime, OffsetDateTime)
  fullName.vb: NodaTime.OffsetDateTime.=(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: =(OffsetDateTime, OffsetDateTime)
- uid: NodaTime.OffsetDateTime.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  id: op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: operator !=(OffsetDateTime, OffsetDateTime)
  nameWithType: OffsetDateTime.operator !=(OffsetDateTime, OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.operator !=(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator != (inequality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator !=(OffsetDateTime left, OffsetDateTime right)
    parameters:
    - id: left
      type: NodaTime.OffsetDateTime
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.OffsetDateTime
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are not equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator <>(left As OffsetDateTime, right As OffsetDateTime) As Boolean
  overload: NodaTime.OffsetDateTime.op_Inequality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  nameWithType.vb: OffsetDateTime.<>(OffsetDateTime, OffsetDateTime)
  fullName.vb: NodaTime.OffsetDateTime.<>(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: <>(OffsetDateTime, OffsetDateTime)
- uid: NodaTime.OffsetDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:NodaTime.OffsetDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  id: AddSchema(System.Xml.Schema.XmlSchemaSet)
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: AddSchema(XmlSchemaSet)
  nameWithType: OffsetDateTime.AddSchema(XmlSchemaSet)
  fullName: NodaTime.OffsetDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Adds the XML schema type describing the structure of the <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> XML serialization to the given <code class="paramref">xmlSchemaSet</code>.
  example: []
  syntax:
    content: public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet)
    parameters:
    - id: xmlSchemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The XML schema set provided by <xref href="System.Xml.Serialization.XmlSchemaExporter" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.XmlQualifiedName
      description: The qualified name of the schema type that was added to the <code class="paramref">xmlSchemaSet</code>.
    content.vb: Public Shared Function AddSchema(xmlSchemaSet As XmlSchemaSet) As XmlQualifiedName
  overload: NodaTime.OffsetDateTime.AddSchema*
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.GetSchema()
  nameWithType: OffsetDateTime.IXmlSerializable.GetSchema()
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: This method is reserved and should not be used. When implementing the <code>IXmlSerializable</code> interface, you should return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (<code>Nothing</code> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <xref href="System.Xml.Serialization.XmlSchemaProviderAttribute" data-throw-if-not-resolved="false"></xref> to the class.
  example: []
  syntax:
    content: XmlSchema IXmlSerializable.GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: An <xref href="System.Xml.Schema.XmlSchema" data-throw-if-not-resolved="false"></xref> that describes the XML representation of the object that is produced by the <xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" data-throw-if-not-resolved="false"></xref> method and consumed by the <xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: ''
  overload: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: OffsetDateTime.IXmlSerializable.ReadXml(XmlReader)
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Generates an object from its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the object is deserialized.
    content.vb: ''
  overload: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: NodaTime.OffsetDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: OffsetDateTime.IXmlSerializable.WriteXml(XmlWriter)
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts an object into its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the object is serialized.
    content.vb: ''
  overload: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: NodaTime.OffsetDateTime.Comparer
  commentId: T:NodaTime.OffsetDateTime.Comparer
  parent: NodaTime
  href: NodaTime.OffsetDateTime.html
  name: OffsetDateTime.Comparer
  nameWithType: OffsetDateTime.Comparer
  fullName: NodaTime.OffsetDateTime.Comparer
  spec.csharp:
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: .
  - uid: NodaTime.OffsetDateTime.Comparer
    name: Comparer
    href: NodaTime.OffsetDateTime.Comparer.html
  spec.vb:
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: .
  - uid: NodaTime.OffsetDateTime.Comparer
    name: Comparer
    href: NodaTime.OffsetDateTime.Comparer.html
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.IEquatable{NodaTime.OffsetDateTime}
  commentId: T:System.IEquatable{NodaTime.OffsetDateTime}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<OffsetDateTime>
  nameWithType: IEquatable<OffsetDateTime>
  fullName: System.IEquatable<NodaTime.OffsetDateTime>
  nameWithType.vb: IEquatable(Of OffsetDateTime)
  fullName.vb: System.IEquatable(Of NodaTime.OffsetDateTime)
  name.vb: IEquatable(Of OffsetDateTime)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  commentId: T:System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  parent: System.Numerics
  definition: System.Numerics.IAdditionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<OffsetDateTime, Duration, OffsetDateTime>
  nameWithType: IAdditionOperators<OffsetDateTime, Duration, OffsetDateTime>
  fullName: System.Numerics.IAdditionOperators<NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime>
  nameWithType.vb: IAdditionOperators(Of OffsetDateTime, Duration, OffsetDateTime)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime)
  name.vb: IAdditionOperators(Of OffsetDateTime, Duration, OffsetDateTime)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  commentId: T:System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  parent: System.Numerics
  definition: System.Numerics.ISubtractionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<OffsetDateTime, Duration, OffsetDateTime>
  nameWithType: ISubtractionOperators<OffsetDateTime, Duration, OffsetDateTime>
  fullName: System.Numerics.ISubtractionOperators<NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime>
  nameWithType.vb: ISubtractionOperators(Of OffsetDateTime, Duration, OffsetDateTime)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime)
  name.vb: ISubtractionOperators(Of OffsetDateTime, Duration, OffsetDateTime)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}
  commentId: T:System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IEqualityOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<OffsetDateTime, OffsetDateTime, bool>
  nameWithType: IEqualityOperators<OffsetDateTime, OffsetDateTime, bool>
  fullName: System.Numerics.IEqualityOperators<NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, bool>
  nameWithType.vb: IEqualityOperators(Of OffsetDateTime, OffsetDateTime, Boolean)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, Boolean)
  name.vb: IEqualityOperators(Of OffsetDateTime, OffsetDateTime, Boolean)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
- uid: System.Numerics.IAdditionOperators`3
  commentId: T:System.Numerics.IAdditionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<TSelf, TOther, TResult>
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult)
  name.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Numerics.ISubtractionOperators`3
  commentId: T:System.Numerics.ISubtractionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult)
  name.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IEqualityOperators`3
  commentId: T:System.Numerics.IEqualityOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<TSelf, TOther, TResult>
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult)
  name.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.OffsetDateTime.#ctor*
  commentId: Overload:NodaTime.OffsetDateTime.#ctor
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime__ctor_NodaTime_LocalDateTime_NodaTime_Offset_
  name: OffsetDateTime
  nameWithType: OffsetDateTime.OffsetDateTime
  fullName: NodaTime.OffsetDateTime.OffsetDateTime
  nameWithType.vb: OffsetDateTime.New
  fullName.vb: NodaTime.OffsetDateTime.New
  name.vb: New
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  href: NodaTime.LocalDateTime.html
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.Offset
  commentId: T:NodaTime.Offset
  parent: NodaTime
  href: NodaTime.Offset.html
  name: Offset
  nameWithType: Offset
  fullName: NodaTime.Offset
- uid: NodaTime.OffsetDateTime.Calendar*
  commentId: Overload:NodaTime.OffsetDateTime.Calendar
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Calendar
  name: Calendar
  nameWithType: OffsetDateTime.Calendar
  fullName: NodaTime.OffsetDateTime.Calendar
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  href: NodaTime.CalendarSystem.html
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.OffsetDateTime.Year*
  commentId: Overload:NodaTime.OffsetDateTime.Year
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Year
  name: Year
  nameWithType: OffsetDateTime.Year
  fullName: NodaTime.OffsetDateTime.Year
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.OffsetDateTime.Month*
  commentId: Overload:NodaTime.OffsetDateTime.Month
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Month
  name: Month
  nameWithType: OffsetDateTime.Month
  fullName: NodaTime.OffsetDateTime.Month
- uid: NodaTime.OffsetDateTime.Day*
  commentId: Overload:NodaTime.OffsetDateTime.Day
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Day
  name: Day
  nameWithType: OffsetDateTime.Day
  fullName: NodaTime.OffsetDateTime.Day
- uid: NodaTime.IsoDayOfWeek
  commentId: T:NodaTime.IsoDayOfWeek
  parent: NodaTime
  href: NodaTime.IsoDayOfWeek.html
  name: IsoDayOfWeek
  nameWithType: IsoDayOfWeek
  fullName: NodaTime.IsoDayOfWeek
- uid: NodaTime.OffsetDateTime.DayOfWeek*
  commentId: Overload:NodaTime.OffsetDateTime.DayOfWeek
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_DayOfWeek
  name: DayOfWeek
  nameWithType: OffsetDateTime.DayOfWeek
  fullName: NodaTime.OffsetDateTime.DayOfWeek
- uid: NodaTime.OffsetDateTime.YearOfEra*
  commentId: Overload:NodaTime.OffsetDateTime.YearOfEra
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_YearOfEra
  name: YearOfEra
  nameWithType: OffsetDateTime.YearOfEra
  fullName: NodaTime.OffsetDateTime.YearOfEra
- uid: NodaTime.OffsetDateTime.Era*
  commentId: Overload:NodaTime.OffsetDateTime.Era
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Era
  name: Era
  nameWithType: OffsetDateTime.Era
  fullName: NodaTime.OffsetDateTime.Era
- uid: NodaTime.Calendars.Era
  commentId: T:NodaTime.Calendars.Era
  parent: NodaTime.Calendars
  href: NodaTime.Calendars.Era.html
  name: Era
  nameWithType: Era
  fullName: NodaTime.Calendars.Era
- uid: NodaTime.Calendars
  commentId: N:NodaTime.Calendars
  href: NodaTime.html
  name: NodaTime.Calendars
  nameWithType: NodaTime.Calendars
  fullName: NodaTime.Calendars
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
- uid: NodaTime.OffsetDateTime.DayOfYear*
  commentId: Overload:NodaTime.OffsetDateTime.DayOfYear
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_DayOfYear
  name: DayOfYear
  nameWithType: OffsetDateTime.DayOfYear
  fullName: NodaTime.OffsetDateTime.DayOfYear
- uid: NodaTime.OffsetDateTime.Hour*
  commentId: Overload:NodaTime.OffsetDateTime.Hour
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Hour
  name: Hour
  nameWithType: OffsetDateTime.Hour
  fullName: NodaTime.OffsetDateTime.Hour
- uid: NodaTime.OffsetDateTime.ClockHourOfHalfDay*
  commentId: Overload:NodaTime.OffsetDateTime.ClockHourOfHalfDay
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ClockHourOfHalfDay
  name: ClockHourOfHalfDay
  nameWithType: OffsetDateTime.ClockHourOfHalfDay
  fullName: NodaTime.OffsetDateTime.ClockHourOfHalfDay
- uid: NodaTime.OffsetDateTime.Minute*
  commentId: Overload:NodaTime.OffsetDateTime.Minute
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Minute
  name: Minute
  nameWithType: OffsetDateTime.Minute
  fullName: NodaTime.OffsetDateTime.Minute
- uid: NodaTime.OffsetDateTime.Second*
  commentId: Overload:NodaTime.OffsetDateTime.Second
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Second
  name: Second
  nameWithType: OffsetDateTime.Second
  fullName: NodaTime.OffsetDateTime.Second
- uid: NodaTime.OffsetDateTime.Millisecond*
  commentId: Overload:NodaTime.OffsetDateTime.Millisecond
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Millisecond
  name: Millisecond
  nameWithType: OffsetDateTime.Millisecond
  fullName: NodaTime.OffsetDateTime.Millisecond
- uid: NodaTime.OffsetDateTime.TickOfSecond*
  commentId: Overload:NodaTime.OffsetDateTime.TickOfSecond
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_TickOfSecond
  name: TickOfSecond
  nameWithType: OffsetDateTime.TickOfSecond
  fullName: NodaTime.OffsetDateTime.TickOfSecond
- uid: NodaTime.OffsetDateTime.TickOfDay*
  commentId: Overload:NodaTime.OffsetDateTime.TickOfDay
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_TickOfDay
  name: TickOfDay
  nameWithType: OffsetDateTime.TickOfDay
  fullName: NodaTime.OffsetDateTime.TickOfDay
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NodaTime.OffsetDateTime.NanosecondOfSecond*
  commentId: Overload:NodaTime.OffsetDateTime.NanosecondOfSecond
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_NanosecondOfSecond
  name: NanosecondOfSecond
  nameWithType: OffsetDateTime.NanosecondOfSecond
  fullName: NodaTime.OffsetDateTime.NanosecondOfSecond
- uid: NodaTime.OffsetDateTime.NanosecondOfDay*
  commentId: Overload:NodaTime.OffsetDateTime.NanosecondOfDay
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_NanosecondOfDay
  name: NanosecondOfDay
  nameWithType: OffsetDateTime.NanosecondOfDay
  fullName: NodaTime.OffsetDateTime.NanosecondOfDay
- uid: NodaTime.OffsetDateTime.LocalDateTime*
  commentId: Overload:NodaTime.OffsetDateTime.LocalDateTime
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_LocalDateTime
  name: LocalDateTime
  nameWithType: OffsetDateTime.LocalDateTime
  fullName: NodaTime.OffsetDateTime.LocalDateTime
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  href: NodaTime.LocalDate.html
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.OffsetDateTime.Date*
  commentId: Overload:NodaTime.OffsetDateTime.Date
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Date
  name: Date
  nameWithType: OffsetDateTime.Date
  fullName: NodaTime.OffsetDateTime.Date
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  href: NodaTime.LocalTime.html
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
- uid: NodaTime.OffsetDateTime.TimeOfDay*
  commentId: Overload:NodaTime.OffsetDateTime.TimeOfDay
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_TimeOfDay
  name: TimeOfDay
  nameWithType: OffsetDateTime.TimeOfDay
  fullName: NodaTime.OffsetDateTime.TimeOfDay
- uid: NodaTime.OffsetDateTime.Offset*
  commentId: Overload:NodaTime.OffsetDateTime.Offset
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Offset
  name: Offset
  nameWithType: OffsetDateTime.Offset
  fullName: NodaTime.OffsetDateTime.Offset
- uid: NodaTime.OffsetDateTime.ToInstant*
  commentId: Overload:NodaTime.OffsetDateTime.ToInstant
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ToInstant
  name: ToInstant
  nameWithType: OffsetDateTime.ToInstant
  fullName: NodaTime.OffsetDateTime.ToInstant
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  href: NodaTime.Instant.html
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  href: NodaTime.ZonedDateTime.html
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.OffsetDateTime.InFixedZone*
  commentId: Overload:NodaTime.OffsetDateTime.InFixedZone
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_InFixedZone
  name: InFixedZone
  nameWithType: OffsetDateTime.InFixedZone
  fullName: NodaTime.OffsetDateTime.InFixedZone
- uid: NodaTime.OffsetDateTime.InZone*
  commentId: Overload:NodaTime.OffsetDateTime.InZone
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_InZone_NodaTime_DateTimeZone_
  name: InZone
  nameWithType: OffsetDateTime.InZone
  fullName: NodaTime.OffsetDateTime.InZone
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: NodaTime.OffsetDateTime.ToDateTimeOffset*
  commentId: Overload:NodaTime.OffsetDateTime.ToDateTimeOffset
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ToDateTimeOffset
  name: ToDateTimeOffset
  nameWithType: OffsetDateTime.ToDateTimeOffset
  fullName: NodaTime.OffsetDateTime.ToDateTimeOffset
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  parent: NodaTime
  href: NodaTime.OffsetDateTime.html
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
- uid: NodaTime.OffsetDateTime.LocalDateTime
  commentId: P:NodaTime.OffsetDateTime.LocalDateTime
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_LocalDateTime
  name: LocalDateTime
  nameWithType: OffsetDateTime.LocalDateTime
  fullName: NodaTime.OffsetDateTime.LocalDateTime
- uid: NodaTime.OffsetDateTime.Offset
  commentId: P:NodaTime.OffsetDateTime.Offset
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Offset
  name: Offset
  nameWithType: OffsetDateTime.Offset
  fullName: NodaTime.OffsetDateTime.Offset
- uid: NodaTime.OffsetDateTime.FromDateTimeOffset*
  commentId: Overload:NodaTime.OffsetDateTime.FromDateTimeOffset
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_FromDateTimeOffset_System_DateTimeOffset_
  name: FromDateTimeOffset
  nameWithType: OffsetDateTime.FromDateTimeOffset
  fullName: NodaTime.OffsetDateTime.FromDateTimeOffset
- uid: NodaTime.OffsetDateTime.WithCalendar*
  commentId: Overload:NodaTime.OffsetDateTime.WithCalendar
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_WithCalendar_NodaTime_CalendarSystem_
  name: WithCalendar
  nameWithType: OffsetDateTime.WithCalendar
  fullName: NodaTime.OffsetDateTime.WithCalendar
- uid: NodaTime.OffsetDateTime.With*
  commentId: Overload:NodaTime.OffsetDateTime.With
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_With_System_Func_NodaTime_LocalDate_NodaTime_LocalDate__
  name: With
  nameWithType: OffsetDateTime.With
  fullName: NodaTime.OffsetDateTime.With
- uid: System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
  commentId: T:System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<LocalDate, LocalDate>
  nameWithType: Func<LocalDate, LocalDate>
  fullName: System.Func<NodaTime.LocalDate, NodaTime.LocalDate>
  nameWithType.vb: Func(Of LocalDate, LocalDate)
  fullName.vb: System.Func(Of NodaTime.LocalDate, NodaTime.LocalDate)
  name.vb: Func(Of LocalDate, LocalDate)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  commentId: T:System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<LocalTime, LocalTime>
  nameWithType: Func<LocalTime, LocalTime>
  fullName: System.Func<NodaTime.LocalTime, NodaTime.LocalTime>
  nameWithType.vb: Func(Of LocalTime, LocalTime)
  fullName.vb: System.Func(Of NodaTime.LocalTime, NodaTime.LocalTime)
  name.vb: Func(Of LocalTime, LocalTime)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
- uid: NodaTime.OffsetDateTime.WithOffset*
  commentId: Overload:NodaTime.OffsetDateTime.WithOffset
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_WithOffset_NodaTime_Offset_
  name: WithOffset
  nameWithType: OffsetDateTime.WithOffset
  fullName: NodaTime.OffsetDateTime.WithOffset
- uid: NodaTime.OffsetDate
  commentId: T:NodaTime.OffsetDate
  parent: NodaTime
  href: NodaTime.OffsetDate.html
  name: OffsetDate
  nameWithType: OffsetDate
  fullName: NodaTime.OffsetDate
- uid: NodaTime.OffsetDateTime.ToOffsetDate*
  commentId: Overload:NodaTime.OffsetDateTime.ToOffsetDate
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ToOffsetDate
  name: ToOffsetDate
  nameWithType: OffsetDateTime.ToOffsetDate
  fullName: NodaTime.OffsetDateTime.ToOffsetDate
- uid: NodaTime.OffsetTime
  commentId: T:NodaTime.OffsetTime
  parent: NodaTime
  href: NodaTime.OffsetTime.html
  name: OffsetTime
  nameWithType: OffsetTime
  fullName: NodaTime.OffsetTime
- uid: NodaTime.OffsetDateTime.ToOffsetTime*
  commentId: Overload:NodaTime.OffsetDateTime.ToOffsetTime
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ToOffsetTime
  name: ToOffsetTime
  nameWithType: OffsetDateTime.ToOffsetTime
  fullName: NodaTime.OffsetDateTime.ToOffsetTime
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NodaTime.OffsetDateTime.GetHashCode*
  commentId: Overload:NodaTime.OffsetDateTime.GetHashCode
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_GetHashCode
  name: GetHashCode
  nameWithType: OffsetDateTime.GetHashCode
  fullName: NodaTime.OffsetDateTime.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.OffsetDateTime.Equals*
  commentId: Overload:NodaTime.OffsetDateTime.Equals
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Equals_System_Object_
  name: Equals
  nameWithType: OffsetDateTime.Equals
  fullName: NodaTime.OffsetDateTime.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{NodaTime.OffsetDateTime}.Equals(NodaTime.OffsetDateTime)
  commentId: M:System.IEquatable{NodaTime.OffsetDateTime}.Equals(NodaTime.OffsetDateTime)
  parent: System.IEquatable{NodaTime.OffsetDateTime}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(OffsetDateTime)
  nameWithType: IEquatable<OffsetDateTime>.Equals(OffsetDateTime)
  fullName: System.IEquatable<NodaTime.OffsetDateTime>.Equals(NodaTime.OffsetDateTime)
  nameWithType.vb: IEquatable(Of OffsetDateTime).Equals(OffsetDateTime)
  fullName.vb: System.IEquatable(Of NodaTime.OffsetDateTime).Equals(NodaTime.OffsetDateTime)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.OffsetDateTime}.Equals(NodaTime.OffsetDateTime)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.OffsetDateTime}.Equals(NodaTime.OffsetDateTime)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NodaTime.OffsetDateTime.Deconstruct*
  commentId: Overload:NodaTime.OffsetDateTime.Deconstruct
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Deconstruct_NodaTime_LocalDateTime__NodaTime_Offset__
  name: Deconstruct
  nameWithType: OffsetDateTime.Deconstruct
  fullName: NodaTime.OffsetDateTime.Deconstruct
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: NodaTime.OffsetDateTime.ToString*
  commentId: Overload:NodaTime.OffsetDateTime.ToString
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_ToString
  name: ToString
  nameWithType: OffsetDateTime.ToString
  fullName: NodaTime.OffsetDateTime.ToString
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Addition_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: operator +(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.operator +(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.operator +(NodaTime.OffsetDateTime, NodaTime.Duration)
  nameWithType.vb: OffsetDateTime.+(OffsetDateTime, Duration)
  fullName.vb: NodaTime.OffsetDateTime.+(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: +(OffsetDateTime, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
    name: +
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Addition_NodaTime_OffsetDateTime_NodaTime_Duration_
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: +
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: NodaTime.OffsetDateTime.Add*
  commentId: Overload:NodaTime.OffsetDateTime.Add
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Add_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: Add
  nameWithType: OffsetDateTime.Add
  fullName: NodaTime.OffsetDateTime.Add
- uid: NodaTime.Duration
  commentId: T:NodaTime.Duration
  parent: NodaTime
  href: NodaTime.Duration.html
  name: Duration
  nameWithType: Duration
  fullName: NodaTime.Duration
- uid: NodaTime.OffsetDateTime.Plus*
  commentId: Overload:NodaTime.OffsetDateTime.Plus
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Plus_NodaTime_Duration_
  name: Plus
  nameWithType: OffsetDateTime.Plus
  fullName: NodaTime.OffsetDateTime.Plus
- uid: NodaTime.OffsetDateTime.PlusHours*
  commentId: Overload:NodaTime.OffsetDateTime.PlusHours
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusHours_System_Int32_
  name: PlusHours
  nameWithType: OffsetDateTime.PlusHours
  fullName: NodaTime.OffsetDateTime.PlusHours
- uid: NodaTime.OffsetDateTime.PlusMinutes*
  commentId: Overload:NodaTime.OffsetDateTime.PlusMinutes
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusMinutes_System_Int32_
  name: PlusMinutes
  nameWithType: OffsetDateTime.PlusMinutes
  fullName: NodaTime.OffsetDateTime.PlusMinutes
- uid: NodaTime.OffsetDateTime.PlusSeconds*
  commentId: Overload:NodaTime.OffsetDateTime.PlusSeconds
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusSeconds_System_Int64_
  name: PlusSeconds
  nameWithType: OffsetDateTime.PlusSeconds
  fullName: NodaTime.OffsetDateTime.PlusSeconds
- uid: NodaTime.OffsetDateTime.PlusMilliseconds*
  commentId: Overload:NodaTime.OffsetDateTime.PlusMilliseconds
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusMilliseconds_System_Int64_
  name: PlusMilliseconds
  nameWithType: OffsetDateTime.PlusMilliseconds
  fullName: NodaTime.OffsetDateTime.PlusMilliseconds
- uid: NodaTime.OffsetDateTime.PlusTicks*
  commentId: Overload:NodaTime.OffsetDateTime.PlusTicks
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusTicks_System_Int64_
  name: PlusTicks
  nameWithType: OffsetDateTime.PlusTicks
  fullName: NodaTime.OffsetDateTime.PlusTicks
- uid: NodaTime.OffsetDateTime.PlusNanoseconds*
  commentId: Overload:NodaTime.OffsetDateTime.PlusNanoseconds
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_PlusNanoseconds_System_Int64_
  name: PlusNanoseconds
  nameWithType: OffsetDateTime.PlusNanoseconds
  fullName: NodaTime.OffsetDateTime.PlusNanoseconds
- uid: NodaTime.OffsetDateTime.op_Addition*
  commentId: Overload:NodaTime.OffsetDateTime.op_Addition
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Addition_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: operator +
  nameWithType: OffsetDateTime.operator +
  fullName: NodaTime.OffsetDateTime.operator +
  nameWithType.vb: OffsetDateTime.+
  fullName.vb: NodaTime.OffsetDateTime.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Addition*
    name: +
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Addition_NodaTime_OffsetDateTime_NodaTime_Duration_
- uid: System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  definition: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(OffsetDateTime, Duration)
  nameWithType: IAdditionOperators<OffsetDateTime, Duration, OffsetDateTime>.operator +(OffsetDateTime, Duration)
  fullName: System.Numerics.IAdditionOperators<NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime>.operator +(NodaTime.OffsetDateTime, NodaTime.Duration)
  nameWithType.vb: IAdditionOperators(Of OffsetDateTime, Duration, OffsetDateTime).+(OffsetDateTime, Duration)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime).+(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: +(OffsetDateTime, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Addition(NodaTime.OffsetDateTime,NodaTime.Duration)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: +
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  commentId: M:System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(TSelf, TOther)
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  name.vb: +(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: +
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: operator -(OffsetDateTime, Duration)
  nameWithType: OffsetDateTime.operator -(OffsetDateTime, Duration)
  fullName: NodaTime.OffsetDateTime.operator -(NodaTime.OffsetDateTime, NodaTime.Duration)
  nameWithType.vb: OffsetDateTime.-(OffsetDateTime, Duration)
  fullName.vb: NodaTime.OffsetDateTime.-(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: -(OffsetDateTime, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
    name: '-'
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_Duration_
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: NodaTime.OffsetDateTime.Subtract*
  commentId: Overload:NodaTime.OffsetDateTime.Subtract
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Subtract_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: Subtract
  nameWithType: OffsetDateTime.Subtract
  fullName: NodaTime.OffsetDateTime.Subtract
- uid: NodaTime.OffsetDateTime.Minus*
  commentId: Overload:NodaTime.OffsetDateTime.Minus
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_Minus_NodaTime_Duration_
  name: Minus
  nameWithType: OffsetDateTime.Minus
  fullName: NodaTime.OffsetDateTime.Minus
- uid: NodaTime.OffsetDateTime.op_Subtraction*
  commentId: Overload:NodaTime.OffsetDateTime.op_Subtraction
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_Duration_
  name: operator -
  nameWithType: OffsetDateTime.operator -
  fullName: NodaTime.OffsetDateTime.operator -
  nameWithType.vb: OffsetDateTime.-
  fullName.vb: NodaTime.OffsetDateTime.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Subtraction*
    name: '-'
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_Duration_
- uid: System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  commentId: M:System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
  parent: System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}
  definition: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(OffsetDateTime, Duration)
  nameWithType: ISubtractionOperators<OffsetDateTime, Duration, OffsetDateTime>.operator -(OffsetDateTime, Duration)
  fullName: System.Numerics.ISubtractionOperators<NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime>.operator -(NodaTime.OffsetDateTime, NodaTime.Duration)
  nameWithType.vb: ISubtractionOperators(Of OffsetDateTime, Duration, OffsetDateTime).-(OffsetDateTime, Duration)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.OffsetDateTime, NodaTime.Duration, NodaTime.OffsetDateTime).-(NodaTime.OffsetDateTime, NodaTime.Duration)
  name.vb: -(OffsetDateTime, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators{NodaTime.OffsetDateTime,NodaTime.Duration,NodaTime.OffsetDateTime}.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.Duration)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  commentId: M:System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(TSelf, TOther)
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  name.vb: -(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
  name: operator -(OffsetDateTime, OffsetDateTime)
  nameWithType: OffsetDateTime.operator -(OffsetDateTime, OffsetDateTime)
  fullName: NodaTime.OffsetDateTime.operator -(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  nameWithType.vb: OffsetDateTime.-(OffsetDateTime, OffsetDateTime)
  fullName.vb: NodaTime.OffsetDateTime.-(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: -(OffsetDateTime, OffsetDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Subtraction(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
    name: '-'
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Subtraction_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: NodaTime.OffsetDateTime.op_Equality*
  commentId: Overload:NodaTime.OffsetDateTime.op_Equality
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Equality_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
  name: operator ==
  nameWithType: OffsetDateTime.operator ==
  fullName: NodaTime.OffsetDateTime.operator ==
  nameWithType.vb: OffsetDateTime.=
  fullName.vb: NodaTime.OffsetDateTime.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Equality*
    name: ==
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Equality_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
- uid: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(OffsetDateTime, OffsetDateTime)
  nameWithType: IEqualityOperators<OffsetDateTime, OffsetDateTime, bool>.operator ==(OffsetDateTime, OffsetDateTime)
  fullName: System.Numerics.IEqualityOperators<NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, bool>.operator ==(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  nameWithType.vb: IEqualityOperators(Of OffsetDateTime, OffsetDateTime, Boolean).=(OffsetDateTime, OffsetDateTime)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, Boolean).=(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: =(OffsetDateTime, OffsetDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Equality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
  spec.vb:
  - name: =
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  name.vb: =(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: =
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.OffsetDateTime.op_Inequality*
  commentId: Overload:NodaTime.OffsetDateTime.op_Inequality
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Inequality_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
  name: operator !=
  nameWithType: OffsetDateTime.operator !=
  fullName: NodaTime.OffsetDateTime.operator !=
  nameWithType.vb: OffsetDateTime.<>
  fullName.vb: NodaTime.OffsetDateTime.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.OffsetDateTime.op_Inequality*
    name: '!='
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_op_Inequality_NodaTime_OffsetDateTime_NodaTime_OffsetDateTime_
- uid: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
  parent: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(OffsetDateTime, OffsetDateTime)
  nameWithType: IEqualityOperators<OffsetDateTime, OffsetDateTime, bool>.operator !=(OffsetDateTime, OffsetDateTime)
  fullName: System.Numerics.IEqualityOperators<NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, bool>.operator !=(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  nameWithType.vb: IEqualityOperators(Of OffsetDateTime, OffsetDateTime, Boolean).<>(OffsetDateTime, OffsetDateTime)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.OffsetDateTime, NodaTime.OffsetDateTime, Boolean).<>(NodaTime.OffsetDateTime, NodaTime.OffsetDateTime)
  name.vb: <>(OffsetDateTime, OffsetDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.OffsetDateTime,NodaTime.OffsetDateTime,System.Boolean}.op_Inequality(NodaTime.OffsetDateTime,NodaTime.OffsetDateTime)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.OffsetDateTime
    name: OffsetDateTime
    href: NodaTime.OffsetDateTime.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  name.vb: <>(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: System.Xml.Serialization.XmlSchemaExporter
  commentId: T:System.Xml.Serialization.XmlSchemaExporter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaexporter
  name: XmlSchemaExporter
  nameWithType: XmlSchemaExporter
  fullName: System.Xml.Serialization.XmlSchemaExporter
- uid: NodaTime.OffsetDateTime.AddSchema*
  commentId: Overload:NodaTime.OffsetDateTime.AddSchema
  href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_AddSchema_System_Xml_Schema_XmlSchemaSet_
  name: AddSchema
  nameWithType: OffsetDateTime.AddSchema
  fullName: NodaTime.OffsetDateTime.AddSchema
- uid: System.Xml.Schema.XmlSchemaSet
  commentId: T:System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschemaset
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  commentId: T:System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlqualifiedname
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
- uid: System.Xml.Serialization.XmlSchemaProviderAttribute
  commentId: T:System.Xml.Serialization.XmlSchemaProviderAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaproviderattribute
  name: XmlSchemaProviderAttribute
  nameWithType: XmlSchemaProviderAttribute
  fullName: System.Xml.Serialization.XmlSchemaProviderAttribute
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschema
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
  commentId: Overload:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.GetSchema
  nameWithType: OffsetDateTime.IXmlSerializable.GetSchema
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.GetSchema
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
    name: GetSchema
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_System_Xml_Serialization_IXmlSerializable_GetSchema
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
  commentId: Overload:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.ReadXml
  nameWithType: OffsetDateTime.IXmlSerializable.ReadXml
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.ReadXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
    name: ReadXml
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
  commentId: Overload:NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.WriteXml
  nameWithType: OffsetDateTime.IXmlSerializable.WriteXml
  fullName: NodaTime.OffsetDateTime.System.Xml.Serialization.IXmlSerializable.WriteXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.OffsetDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
    name: WriteXml
    href: NodaTime.OffsetDateTime.html#NodaTime_OffsetDateTime_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_
shouldSkipMarkup: true
