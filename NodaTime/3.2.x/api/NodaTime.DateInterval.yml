### YamlMime:ManagedReference
items:
- uid: NodaTime.DateInterval
  commentId: T:NodaTime.DateInterval
  id: DateInterval
  parent: NodaTime
  children:
  - NodaTime.DateInterval.#ctor(NodaTime.LocalDate,NodaTime.LocalDate)
  - NodaTime.DateInterval.Calendar
  - NodaTime.DateInterval.Contains(NodaTime.DateInterval)
  - NodaTime.DateInterval.Contains(NodaTime.LocalDate)
  - NodaTime.DateInterval.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalDate@)
  - NodaTime.DateInterval.End
  - NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  - NodaTime.DateInterval.Equals(System.Object)
  - NodaTime.DateInterval.GetEnumerator
  - NodaTime.DateInterval.GetHashCode
  - NodaTime.DateInterval.Intersection(NodaTime.DateInterval)
  - NodaTime.DateInterval.Length
  - NodaTime.DateInterval.Start
  - NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator
  - NodaTime.DateInterval.ToString
  - NodaTime.DateInterval.Union(NodaTime.DateInterval)
  - NodaTime.DateInterval.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  - NodaTime.DateInterval.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  langs:
  - csharp
  - vb
  name: DateInterval
  nameWithType: DateInterval
  fullName: NodaTime.DateInterval
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: An interval between two dates.
  remarks: >-
    <p>

    Equality is defined in a component-wise fashion: two date intervals are considered equal if their start dates are

    equal to each other and their end dates are equal to each other. Ordering between date intervals is not defined.

    </p>

    <p>

    The two dates must be in the same calendar, and the end date must not be earlier than the start date.

    </p>

    <p>

    The end date is deemed to be part of the range, as this matches many real life uses of

    date ranges. For example, if someone says "I'm going to be on holiday from Monday to Friday," they

    usually mean that Friday is part of their holiday.

    </p>
  example: []
  syntax:
    content: 'public sealed class DateInterval : IEquatable<DateInterval?>, IEnumerable<LocalDate>, IEnumerable, IEqualityOperators<DateInterval, DateInterval, bool>'
    content.vb: Public NotInheritable Class DateInterval Implements IEquatable(Of DateInterval), IEnumerable(Of LocalDate), IEnumerable, IEqualityOperators(Of DateInterval, DateInterval, Boolean)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NodaTime.DateInterval}
  - System.Collections.Generic.IEnumerable{NodaTime.LocalDate}
  - System.Collections.IEnumerable
  - System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.DateInterval.Start
  commentId: P:NodaTime.DateInterval.Start
  id: Start
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: DateInterval.Start
  fullName: NodaTime.DateInterval.Start
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the start date of the interval.
  example: []
  syntax:
    content: public LocalDate Start { get; }
    parameters: []
    return:
      type: NodaTime.LocalDate
      description: The start date of the interval.
    content.vb: Public ReadOnly Property Start As LocalDate
  overload: NodaTime.DateInterval.Start*
- uid: NodaTime.DateInterval.End
  commentId: P:NodaTime.DateInterval.End
  id: End
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: End
  nameWithType: DateInterval.End
  fullName: NodaTime.DateInterval.End
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the end date of the interval.
  example: []
  syntax:
    content: public LocalDate End { get; }
    parameters: []
    return:
      type: NodaTime.LocalDate
      description: The end date of the interval.
    content.vb: Public ReadOnly Property [End] As LocalDate
  overload: NodaTime.DateInterval.End*
- uid: NodaTime.DateInterval.#ctor(NodaTime.LocalDate,NodaTime.LocalDate)
  commentId: M:NodaTime.DateInterval.#ctor(NodaTime.LocalDate,NodaTime.LocalDate)
  id: '#ctor(NodaTime.LocalDate,NodaTime.LocalDate)'
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: DateInterval(LocalDate, LocalDate)
  nameWithType: DateInterval.DateInterval(LocalDate, LocalDate)
  fullName: NodaTime.DateInterval.DateInterval(NodaTime.LocalDate, NodaTime.LocalDate)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Constructs a date interval from a start date and an end date, both of which are included

    in the interval.
  example: []
  syntax:
    content: public DateInterval(LocalDate start, LocalDate end)
    parameters:
    - id: start
      type: NodaTime.LocalDate
      description: Start date of the interval
    - id: end
      type: NodaTime.LocalDate
      description: End date of the interval
    content.vb: Public Sub New(start As LocalDate, [end] As LocalDate)
  overload: NodaTime.DateInterval.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">end</code> is earlier than <code class="paramref">start</code>

      or the two dates are in different calendars.
  nameWithType.vb: DateInterval.New(LocalDate, LocalDate)
  fullName.vb: NodaTime.DateInterval.New(NodaTime.LocalDate, NodaTime.LocalDate)
  name.vb: New(LocalDate, LocalDate)
- uid: NodaTime.DateInterval.GetHashCode
  commentId: M:NodaTime.DateInterval.GetHashCode
  id: GetHashCode
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DateInterval.GetHashCode()
  fullName: NodaTime.DateInterval.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the hash code for this interval, consistent with <xref href="NodaTime.DateInterval.Equals(NodaTime.DateInterval)" data-throw-if-not-resolved="false"></xref>.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this interval.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NodaTime.DateInterval.GetHashCode*
- uid: NodaTime.DateInterval.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  id: op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: operator ==(DateInterval?, DateInterval?)
  nameWithType: DateInterval.operator ==(DateInterval?, DateInterval?)
  fullName: NodaTime.DateInterval.operator ==(NodaTime.DateInterval?, NodaTime.DateInterval?)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator ==(DateInterval? lhs, DateInterval? rhs)
    parameters:
    - id: lhs
      type: NodaTime.DateInterval
      description: The first value to compare
    - id: rhs
      type: NodaTime.DateInterval
      description: The second value to compare
    return:
      type: System.Boolean
      description: True if the two date intervals have the same properties; false otherwise.
    content.vb: Public Shared Operator =(lhs As DateInterval, rhs As DateInterval) As Boolean
  overload: NodaTime.DateInterval.op_Equality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  nameWithType.vb: DateInterval.=(DateInterval, DateInterval)
  fullName.vb: NodaTime.DateInterval.=(NodaTime.DateInterval, NodaTime.DateInterval)
  name.vb: =(DateInterval, DateInterval)
- uid: NodaTime.DateInterval.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  id: op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: operator !=(DateInterval?, DateInterval?)
  nameWithType: DateInterval.operator !=(DateInterval?, DateInterval?)
  fullName: NodaTime.DateInterval.operator !=(NodaTime.DateInterval?, NodaTime.DateInterval?)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> values for inequality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator !=(DateInterval? lhs, DateInterval? rhs)
    parameters:
    - id: lhs
      type: NodaTime.DateInterval
      description: The first value to compare
    - id: rhs
      type: NodaTime.DateInterval
      description: The second value to compare
    return:
      type: System.Boolean
      description: False if the two date intervals have the same start and end date; true otherwise.
    content.vb: Public Shared Operator <>(lhs As DateInterval, rhs As DateInterval) As Boolean
  overload: NodaTime.DateInterval.op_Inequality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  nameWithType.vb: DateInterval.<>(DateInterval, DateInterval)
  fullName.vb: NodaTime.DateInterval.<>(NodaTime.DateInterval, NodaTime.DateInterval)
  name.vb: <>(DateInterval, DateInterval)
- uid: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  id: Equals(NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Equals(DateInterval?)
  nameWithType: DateInterval.Equals(DateInterval?)
  fullName: NodaTime.DateInterval.Equals(NodaTime.DateInterval?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares the given date interval for equality with this one.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(DateInterval? other)
    parameters:
    - id: other
      type: NodaTime.DateInterval
      description: The date interval to compare this one with.
    return:
      type: System.Boolean
      description: True if this date interval has the same same start and end date as the one specified.
    content.vb: Public Function Equals(other As DateInterval) As Boolean
  overload: NodaTime.DateInterval.Equals*
  implements:
  - System.IEquatable{NodaTime.DateInterval}.Equals(NodaTime.DateInterval)
  nameWithType.vb: DateInterval.Equals(DateInterval)
  fullName.vb: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  name.vb: Equals(DateInterval)
- uid: NodaTime.DateInterval.Equals(System.Object)
  commentId: M:NodaTime.DateInterval.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: DateInterval.Equals(object?)
  fullName: NodaTime.DateInterval.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares the given object for equality with this one, as per <xref href="NodaTime.DateInterval.Equals(NodaTime.DateInterval)" data-throw-if-not-resolved="false"></xref>.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The value to compare this one with.
    return:
      type: System.Boolean
      description: true if the other object is a date interval equal to this one, consistent with <xref href="NodaTime.DateInterval.Equals(NodaTime.DateInterval)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NodaTime.DateInterval.Equals*
  nameWithType.vb: DateInterval.Equals(Object)
  fullName.vb: NodaTime.DateInterval.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.DateInterval.Contains(NodaTime.LocalDate)
  commentId: M:NodaTime.DateInterval.Contains(NodaTime.LocalDate)
  id: Contains(NodaTime.LocalDate)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Contains(LocalDate)
  nameWithType: DateInterval.Contains(LocalDate)
  fullName: NodaTime.DateInterval.Contains(NodaTime.LocalDate)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Checks whether the given date is within this date interval. This requires

    that the date is not earlier than the start date, and not later than the end

    date.
  example: []
  syntax:
    content: public bool Contains(LocalDate date)
    parameters:
    - id: date
      type: NodaTime.LocalDate
      description: The date to check for containment within this interval.
    return:
      type: System.Boolean
      description: <code>true</code> if <code class="paramref">date</code> is within this interval; <code>false</code> otherwise.
    content.vb: Public Function Contains([date] As LocalDate) As Boolean
  overload: NodaTime.DateInterval.Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">date</code> is not in the same

      calendar as the start and end date of this interval.
- uid: NodaTime.DateInterval.Contains(NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.Contains(NodaTime.DateInterval)
  id: Contains(NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Contains(DateInterval)
  nameWithType: DateInterval.Contains(DateInterval)
  fullName: NodaTime.DateInterval.Contains(NodaTime.DateInterval)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Checks whether the given interval is within this interval. This requires that the start date of the specified

    interval is not earlier than the start date of this interval, and the end date of the specified interval is not

    later than the end date of this interval.
  remarks: An interval contains another interval with same start and end dates, or itself.
  example: []
  syntax:
    content: public bool Contains(DateInterval interval)
    parameters:
    - id: interval
      type: NodaTime.DateInterval
      description: The interval to check for containment within this interval.
    return:
      type: System.Boolean
      description: <code>true</code> if <code class="paramref">interval</code> is within this interval; <code>false</code> otherwise.
    content.vb: Public Function Contains(interval As DateInterval) As Boolean
  overload: NodaTime.DateInterval.Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">interval</code> uses a different

      calendar to this date interval.
- uid: NodaTime.DateInterval.Length
  commentId: P:NodaTime.DateInterval.Length
  id: Length
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: DateInterval.Length
  fullName: NodaTime.DateInterval.Length
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the length of this date interval in days. This will always be at least 1.
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
      description: The length of this date interval in days.
    content.vb: Public ReadOnly Property Length As Integer
  overload: NodaTime.DateInterval.Length*
- uid: NodaTime.DateInterval.Calendar
  commentId: P:NodaTime.DateInterval.Calendar
  id: Calendar
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: DateInterval.Calendar
  fullName: NodaTime.DateInterval.Calendar
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the calendar system of the dates in this interval.
  example: []
  syntax:
    content: public CalendarSystem Calendar { get; }
    parameters: []
    return:
      type: NodaTime.CalendarSystem
      description: The calendar system of the dates in this interval.
    content.vb: Public ReadOnly Property Calendar As CalendarSystem
  overload: NodaTime.DateInterval.Calendar*
- uid: NodaTime.DateInterval.ToString
  commentId: M:NodaTime.DateInterval.ToString
  id: ToString
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DateInterval.ToString()
  fullName: NodaTime.DateInterval.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a string representation of this interval.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        A string representation of this interval, as <code>[start, end]</code>,

        where "start" and "end" are the dates formatted using an ISO-8601 compatible pattern.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NodaTime.DateInterval.ToString*
- uid: NodaTime.DateInterval.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalDate@)
  commentId: M:NodaTime.DateInterval.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalDate@)
  id: Deconstruct(NodaTime.LocalDate@,NodaTime.LocalDate@)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Deconstruct(out LocalDate, out LocalDate)
  nameWithType: DateInterval.Deconstruct(out LocalDate, out LocalDate)
  fullName: NodaTime.DateInterval.Deconstruct(out NodaTime.LocalDate, out NodaTime.LocalDate)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Deconstruct this date interval into its components.
  example: []
  syntax:
    content: public void Deconstruct(out LocalDate start, out LocalDate end)
    parameters:
    - id: start
      type: NodaTime.LocalDate
      description: The <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> representing the start of the interval.
    - id: end
      type: NodaTime.LocalDate
      description: The <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> representing the end of the interval.
    content.vb: Public Sub Deconstruct(start As LocalDate, [end] As LocalDate)
  overload: NodaTime.DateInterval.Deconstruct*
  nameWithType.vb: DateInterval.Deconstruct(LocalDate, LocalDate)
  fullName.vb: NodaTime.DateInterval.Deconstruct(NodaTime.LocalDate, NodaTime.LocalDate)
  name.vb: Deconstruct(LocalDate, LocalDate)
- uid: NodaTime.DateInterval.Intersection(NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.Intersection(NodaTime.DateInterval)
  id: Intersection(NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Intersection(DateInterval)
  nameWithType: DateInterval.Intersection(DateInterval)
  fullName: NodaTime.DateInterval.Intersection(NodaTime.DateInterval)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the intersection between the given interval and this interval.
  example: []
  syntax:
    content: public DateInterval? Intersection(DateInterval interval)
    parameters:
    - id: interval
      type: NodaTime.DateInterval
      description: The specified interval to intersect with this one.
    return:
      type: NodaTime.DateInterval
      description: >-
        A <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> corresponding to the intersection between the given interval and the current

        instance. If there is no intersection, a null reference is returned.
    content.vb: Public Function Intersection(interval As DateInterval) As DateInterval
  overload: NodaTime.DateInterval.Intersection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">interval</code> uses a different

      calendar to this date interval.
- uid: NodaTime.DateInterval.Union(NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.Union(NodaTime.DateInterval)
  id: Union(NodaTime.DateInterval)
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: Union(DateInterval)
  nameWithType: DateInterval.Union(DateInterval)
  fullName: NodaTime.DateInterval.Union(NodaTime.DateInterval)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the union between the given interval and this interval, as long as they're overlapping or contiguous.
  example: []
  syntax:
    content: public DateInterval? Union(DateInterval interval)
    parameters:
    - id: interval
      type: NodaTime.DateInterval
      description: The specified interval from which to generate the union interval.
    return:
      type: NodaTime.DateInterval
      description: >-
        A <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> corresponding to the union between the given interval and the current

        instance, in the case the intervals overlap or are contiguous; a null reference otherwise.
    content.vb: Public Function Union(interval As DateInterval) As DateInterval
  overload: NodaTime.DateInterval.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">interval</code> uses a different calendar to this date interval.
- uid: NodaTime.DateInterval.GetEnumerator
  commentId: M:NodaTime.DateInterval.GetEnumerator
  id: GetEnumerator
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: DateInterval.GetEnumerator()
  fullName: NodaTime.DateInterval.GetEnumerator()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns an enumerator for the dates in the interval, including both <xref href="NodaTime.DateInterval.Start" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.DateInterval.End" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerator<LocalDate> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{NodaTime.LocalDate}
      description: An enumerator for the interval.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of LocalDate)
  overload: NodaTime.DateInterval.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{NodaTime.LocalDate}.GetEnumerator
- uid: NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator
  commentId: M:NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: NodaTime.DateInterval
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: DateInterval.IEnumerable.GetEnumerator()
  fullName: NodaTime.DateInterval.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns an enumerator that iterates through a collection.
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the collection.
    content.vb: ''
  overload: NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{NodaTime.DateInterval}
  commentId: T:System.IEquatable{NodaTime.DateInterval}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<DateInterval>
  nameWithType: IEquatable<DateInterval>
  fullName: System.IEquatable<NodaTime.DateInterval>
  nameWithType.vb: IEquatable(Of DateInterval)
  fullName.vb: System.IEquatable(Of NodaTime.DateInterval)
  name.vb: IEquatable(Of DateInterval)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{NodaTime.LocalDate}
  commentId: T:System.Collections.Generic.IEnumerable{NodaTime.LocalDate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<LocalDate>
  nameWithType: IEnumerable<LocalDate>
  fullName: System.Collections.Generic.IEnumerable<NodaTime.LocalDate>
  nameWithType.vb: IEnumerable(Of LocalDate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NodaTime.LocalDate)
  name.vb: IEnumerable(Of LocalDate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}
  commentId: T:System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IEqualityOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<DateInterval, DateInterval, bool>
  nameWithType: IEqualityOperators<DateInterval, DateInterval, bool>
  fullName: System.Numerics.IEqualityOperators<NodaTime.DateInterval, NodaTime.DateInterval, bool>
  nameWithType.vb: IEqualityOperators(Of DateInterval, DateInterval, Boolean)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.DateInterval, NodaTime.DateInterval, Boolean)
  name.vb: IEqualityOperators(Of DateInterval, DateInterval, Boolean)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Numerics.IEqualityOperators`3
  commentId: T:System.Numerics.IEqualityOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<TSelf, TOther, TResult>
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult)
  name.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: NodaTime.DateInterval.Start*
  commentId: Overload:NodaTime.DateInterval.Start
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Start
  name: Start
  nameWithType: DateInterval.Start
  fullName: NodaTime.DateInterval.Start
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  href: NodaTime.LocalDate.html
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.DateInterval.End*
  commentId: Overload:NodaTime.DateInterval.End
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_End
  name: End
  nameWithType: DateInterval.End
  fullName: NodaTime.DateInterval.End
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NodaTime.DateInterval.#ctor*
  commentId: Overload:NodaTime.DateInterval.#ctor
  href: NodaTime.DateInterval.html#NodaTime_DateInterval__ctor_NodaTime_LocalDate_NodaTime_LocalDate_
  name: DateInterval
  nameWithType: DateInterval.DateInterval
  fullName: NodaTime.DateInterval.DateInterval
  nameWithType.vb: DateInterval.New
  fullName.vb: NodaTime.DateInterval.New
  name.vb: New
- uid: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  commentId: M:NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Equals_NodaTime_DateInterval_
  name: Equals(DateInterval)
  nameWithType: DateInterval.Equals(DateInterval)
  fullName: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
  spec.csharp:
  - uid: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
    name: Equals
    href: NodaTime.DateInterval.html#NodaTime_DateInterval_Equals_NodaTime_DateInterval_
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateInterval.Equals(NodaTime.DateInterval)
    name: Equals
    href: NodaTime.DateInterval.html#NodaTime_DateInterval_Equals_NodaTime_DateInterval_
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NodaTime.DateInterval.GetHashCode*
  commentId: Overload:NodaTime.DateInterval.GetHashCode
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_GetHashCode
  name: GetHashCode
  nameWithType: DateInterval.GetHashCode
  fullName: NodaTime.DateInterval.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.DateInterval
  commentId: T:NodaTime.DateInterval
  parent: NodaTime
  href: NodaTime.DateInterval.html
  name: DateInterval
  nameWithType: DateInterval
  fullName: NodaTime.DateInterval
- uid: NodaTime.DateInterval.op_Equality*
  commentId: Overload:NodaTime.DateInterval.op_Equality
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_op_Equality_NodaTime_DateInterval_NodaTime_DateInterval_
  name: operator ==
  nameWithType: DateInterval.operator ==
  fullName: NodaTime.DateInterval.operator ==
  nameWithType.vb: DateInterval.=
  fullName.vb: NodaTime.DateInterval.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.DateInterval.op_Equality*
    name: ==
    href: NodaTime.DateInterval.html#NodaTime_DateInterval_op_Equality_NodaTime_DateInterval_NodaTime_DateInterval_
- uid: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
  parent: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(DateInterval, DateInterval)
  nameWithType: IEqualityOperators<DateInterval, DateInterval, bool>.operator ==(DateInterval, DateInterval)
  fullName: System.Numerics.IEqualityOperators<NodaTime.DateInterval, NodaTime.DateInterval, bool>.operator ==(NodaTime.DateInterval, NodaTime.DateInterval)
  nameWithType.vb: IEqualityOperators(Of DateInterval, DateInterval, Boolean).=(DateInterval, DateInterval)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.DateInterval, NodaTime.DateInterval, Boolean).=(NodaTime.DateInterval, NodaTime.DateInterval)
  name.vb: =(DateInterval, DateInterval)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Equality(NodaTime.DateInterval,NodaTime.DateInterval)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
  spec.vb:
  - name: =
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  name.vb: =(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: =
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.DateInterval.op_Inequality*
  commentId: Overload:NodaTime.DateInterval.op_Inequality
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_op_Inequality_NodaTime_DateInterval_NodaTime_DateInterval_
  name: operator !=
  nameWithType: DateInterval.operator !=
  fullName: NodaTime.DateInterval.operator !=
  nameWithType.vb: DateInterval.<>
  fullName.vb: NodaTime.DateInterval.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.DateInterval.op_Inequality*
    name: '!='
    href: NodaTime.DateInterval.html#NodaTime_DateInterval_op_Inequality_NodaTime_DateInterval_NodaTime_DateInterval_
- uid: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
  parent: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(DateInterval, DateInterval)
  nameWithType: IEqualityOperators<DateInterval, DateInterval, bool>.operator !=(DateInterval, DateInterval)
  fullName: System.Numerics.IEqualityOperators<NodaTime.DateInterval, NodaTime.DateInterval, bool>.operator !=(NodaTime.DateInterval, NodaTime.DateInterval)
  nameWithType.vb: IEqualityOperators(Of DateInterval, DateInterval, Boolean).<>(DateInterval, DateInterval)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.DateInterval, NodaTime.DateInterval, Boolean).<>(NodaTime.DateInterval, NodaTime.DateInterval)
  name.vb: <>(DateInterval, DateInterval)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.DateInterval,NodaTime.DateInterval,System.Boolean}.op_Inequality(NodaTime.DateInterval,NodaTime.DateInterval)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: ','
  - name: " "
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  name.vb: <>(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.DateInterval.Equals*
  commentId: Overload:NodaTime.DateInterval.Equals
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Equals_NodaTime_DateInterval_
  name: Equals
  nameWithType: DateInterval.Equals
  fullName: NodaTime.DateInterval.Equals
- uid: System.IEquatable{NodaTime.DateInterval}.Equals(NodaTime.DateInterval)
  commentId: M:System.IEquatable{NodaTime.DateInterval}.Equals(NodaTime.DateInterval)
  parent: System.IEquatable{NodaTime.DateInterval}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(DateInterval)
  nameWithType: IEquatable<DateInterval>.Equals(DateInterval)
  fullName: System.IEquatable<NodaTime.DateInterval>.Equals(NodaTime.DateInterval)
  nameWithType.vb: IEquatable(Of DateInterval).Equals(DateInterval)
  fullName.vb: System.IEquatable(Of NodaTime.DateInterval).Equals(NodaTime.DateInterval)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.DateInterval}.Equals(NodaTime.DateInterval)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.DateInterval}.Equals(NodaTime.DateInterval)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.DateInterval
    name: DateInterval
    href: NodaTime.DateInterval.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.DateInterval.Contains*
  commentId: Overload:NodaTime.DateInterval.Contains
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Contains_NodaTime_LocalDate_
  name: Contains
  nameWithType: DateInterval.Contains
  fullName: NodaTime.DateInterval.Contains
- uid: NodaTime.DateInterval.Length*
  commentId: Overload:NodaTime.DateInterval.Length
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Length
  name: Length
  nameWithType: DateInterval.Length
  fullName: NodaTime.DateInterval.Length
- uid: NodaTime.DateInterval.Calendar*
  commentId: Overload:NodaTime.DateInterval.Calendar
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Calendar
  name: Calendar
  nameWithType: DateInterval.Calendar
  fullName: NodaTime.DateInterval.Calendar
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  href: NodaTime.CalendarSystem.html
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime.DateInterval.ToString*
  commentId: Overload:NodaTime.DateInterval.ToString
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_ToString
  name: ToString
  nameWithType: DateInterval.ToString
  fullName: NodaTime.DateInterval.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.DateInterval.Deconstruct*
  commentId: Overload:NodaTime.DateInterval.Deconstruct
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Deconstruct_NodaTime_LocalDate__NodaTime_LocalDate__
  name: Deconstruct
  nameWithType: DateInterval.Deconstruct
  fullName: NodaTime.DateInterval.Deconstruct
- uid: NodaTime.DateInterval.Intersection*
  commentId: Overload:NodaTime.DateInterval.Intersection
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Intersection_NodaTime_DateInterval_
  name: Intersection
  nameWithType: DateInterval.Intersection
  fullName: NodaTime.DateInterval.Intersection
- uid: NodaTime.DateInterval.Union*
  commentId: Overload:NodaTime.DateInterval.Union
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Union_NodaTime_DateInterval_
  name: Union
  nameWithType: DateInterval.Union
  fullName: NodaTime.DateInterval.Union
- uid: NodaTime.DateInterval.Start
  commentId: P:NodaTime.DateInterval.Start
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_Start
  name: Start
  nameWithType: DateInterval.Start
  fullName: NodaTime.DateInterval.Start
- uid: NodaTime.DateInterval.End
  commentId: P:NodaTime.DateInterval.End
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_End
  name: End
  nameWithType: DateInterval.End
  fullName: NodaTime.DateInterval.End
- uid: NodaTime.DateInterval.GetEnumerator*
  commentId: Overload:NodaTime.DateInterval.GetEnumerator
  href: NodaTime.DateInterval.html#NodaTime_DateInterval_GetEnumerator
  name: GetEnumerator
  nameWithType: DateInterval.GetEnumerator
  fullName: NodaTime.DateInterval.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{NodaTime.LocalDate}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{NodaTime.LocalDate}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{NodaTime.LocalDate}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<LocalDate>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<NodaTime.LocalDate>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of LocalDate).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of NodaTime.LocalDate).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{NodaTime.LocalDate}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{NodaTime.LocalDate}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{NodaTime.LocalDate}
  commentId: T:System.Collections.Generic.IEnumerator{NodaTime.LocalDate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<LocalDate>
  nameWithType: IEnumerator<LocalDate>
  fullName: System.Collections.Generic.IEnumerator<NodaTime.LocalDate>
  nameWithType.vb: IEnumerator(Of LocalDate)
  fullName.vb: System.Collections.Generic.IEnumerator(Of NodaTime.LocalDate)
  name.vb: IEnumerator(Of LocalDate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable.GetEnumerator
  nameWithType: DateInterval.IEnumerable.GetEnumerator
  fullName: NodaTime.DateInterval.System.Collections.IEnumerable.GetEnumerator
  spec.csharp:
  - uid: System.Collections.IEnumerable*
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: .
  - uid: NodaTime.DateInterval.System#Collections#IEnumerable#GetEnumerator*
    name: GetEnumerator
    href: NodaTime.DateInterval.html#NodaTime_DateInterval_System_Collections_IEnumerable_GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
shouldSkipMarkup: true
