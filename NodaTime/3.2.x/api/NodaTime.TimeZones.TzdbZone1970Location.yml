### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.TzdbZone1970Location
  commentId: T:NodaTime.TimeZones.TzdbZone1970Location
  id: TzdbZone1970Location
  parent: NodaTime.TimeZones
  children:
  - NodaTime.TimeZones.TzdbZone1970Location.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country},System.String,System.String)
  - NodaTime.TimeZones.TzdbZone1970Location.Comment
  - NodaTime.TimeZones.TzdbZone1970Location.Countries
  - NodaTime.TimeZones.TzdbZone1970Location.Latitude
  - NodaTime.TimeZones.TzdbZone1970Location.Longitude
  - NodaTime.TimeZones.TzdbZone1970Location.ZoneId
  langs:
  - csharp
  - vb
  name: TzdbZone1970Location
  nameWithType: TzdbZone1970Location
  fullName: NodaTime.TimeZones.TzdbZone1970Location
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    A location entry generated from the "zone1970.tab" file in a TZDB release. This can be used to provide

    users with a choice of time zone, although it is not internationalized. This is equivalent to

    <xref href="NodaTime.TimeZones.TzdbZoneLocation" data-throw-if-not-resolved="false"></xref>, except that multiple countries may be represented.
  example: []
  syntax:
    content: public sealed class TzdbZone1970Location
    content.vb: Public NotInheritable Class TzdbZone1970Location
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.TimeZones.TzdbZone1970Location.Latitude
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Latitude
  id: Latitude
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: TzdbZone1970Location.Latitude
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Latitude
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the latitude in degrees; positive for North, negative for South.
  remarks: The value will be in the range [-90, 90].
  example: []
  syntax:
    content: public double Latitude { get; }
    parameters: []
    return:
      type: System.Double
      description: The latitude in degrees; positive for North, negative for South.
    content.vb: Public ReadOnly Property Latitude As Double
  overload: NodaTime.TimeZones.TzdbZone1970Location.Latitude*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Longitude
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Longitude
  id: Longitude
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: TzdbZone1970Location.Longitude
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Longitude
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the longitude in degrees; positive for East, negative for West.
  remarks: The value will be in the range [-180, 180].
  example: []
  syntax:
    content: public double Longitude { get; }
    parameters: []
    return:
      type: System.Double
      description: The longitude in degrees; positive for East, negative for West.
    content.vb: Public ReadOnly Property Longitude As Double
  overload: NodaTime.TimeZones.TzdbZone1970Location.Longitude*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Countries
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Countries
  id: Countries
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: Countries
  nameWithType: TzdbZone1970Location.Countries
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Countries
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the list of countries associated with this location.
  remarks: >-
    The list is immutable, and will always contain at least one entry. The list is

    in the order specified in "zone1970.tab", so the first entry is always the

    country containing the position indicated by the latitude and longitude, and

    is the most populous country in the list. No entry in this list is ever null.
  example: []
  syntax:
    content: public IList<TzdbZone1970Location.Country> Countries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{NodaTime.TimeZones.TzdbZone1970Location.Country}
      description: The list of countries associated with this location
    content.vb: Public ReadOnly Property Countries As IList(Of TzdbZone1970Location.Country)
  overload: NodaTime.TimeZones.TzdbZone1970Location.Countries*
- uid: NodaTime.TimeZones.TzdbZone1970Location.ZoneId
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.ZoneId
  id: ZoneId
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: ZoneId
  nameWithType: TzdbZone1970Location.ZoneId
  fullName: NodaTime.TimeZones.TzdbZone1970Location.ZoneId
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: The ID of the time zone for this location.
  remarks: If this mapping was fetched from a <xref href="NodaTime.TimeZones.TzdbDateTimeZoneSource" data-throw-if-not-resolved="false"></xref>, it will always be a valid ID within that source.
  example: []
  syntax:
    content: public string ZoneId { get; }
    parameters: []
    return:
      type: System.String
      description: The ID of the time zone for this location.
    content.vb: Public ReadOnly Property ZoneId As String
  overload: NodaTime.TimeZones.TzdbZone1970Location.ZoneId*
- uid: NodaTime.TimeZones.TzdbZone1970Location.Comment
  commentId: P:NodaTime.TimeZones.TzdbZone1970Location.Comment
  id: Comment
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: Comment
  nameWithType: TzdbZone1970Location.Comment
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Comment
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Gets the comment (in English) for the mapping, if any.
  remarks: >-
    This is usually used to differentiate between locations in the same country.

    This will return an empty string if no comment was provided in the original data.
  example: []
  syntax:
    content: public string Comment { get; }
    parameters: []
    return:
      type: System.String
      description: The comment (in English) for the mapping, if any.
    content.vb: Public ReadOnly Property Comment As String
  overload: NodaTime.TimeZones.TzdbZone1970Location.Comment*
- uid: NodaTime.TimeZones.TzdbZone1970Location.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country},System.String,System.String)
  commentId: M:NodaTime.TimeZones.TzdbZone1970Location.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country},System.String,System.String)
  id: '#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country},System.String,System.String)'
  parent: NodaTime.TimeZones.TzdbZone1970Location
  langs:
  - csharp
  - vb
  name: TzdbZone1970Location(int, int, IEnumerable<Country>, string, string)
  nameWithType: TzdbZone1970Location.TzdbZone1970Location(int, int, IEnumerable<TzdbZone1970Location.Country>, string, string)
  fullName: NodaTime.TimeZones.TzdbZone1970Location.TzdbZone1970Location(int, int, System.Collections.Generic.IEnumerable<NodaTime.TimeZones.TzdbZone1970Location.Country>, string, string)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Creates a new location.
  remarks: >-
    This constructor is only public for the sake of testability. Non-test code should
        usually obtain locations from a <xref href="NodaTime.TimeZones.TzdbDateTimeZoneSource" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TzdbZone1970Location(int latitudeSeconds, int longitudeSeconds, IEnumerable<TzdbZone1970Location.Country> countries, string zoneId, string comment)
    parameters:
    - id: latitudeSeconds
      type: System.Int32
      description: Latitude of the location, in seconds.
    - id: longitudeSeconds
      type: System.Int32
      description: Longitude of the location, in seconds.
    - id: countries
      type: System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country}
      description: >-
        Countries associated with this location. Must not be null, must have at least
            one entry, and all entries must be non-null.
    - id: zoneId
      type: System.String
      description: Time zone identifier of the location. Must not be null.
    - id: comment
      type: System.String
      description: Optional comment. Must not be null, but may be empty.
    content.vb: Public Sub New(latitudeSeconds As Integer, longitudeSeconds As Integer, countries As IEnumerable(Of TzdbZone1970Location.Country), zoneId As String, comment As String)
  overload: NodaTime.TimeZones.TzdbZone1970Location.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The latitude or longitude is invalid.
  nameWithType.vb: TzdbZone1970Location.New(Integer, Integer, IEnumerable(Of TzdbZone1970Location.Country), String, String)
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.New(Integer, Integer, System.Collections.Generic.IEnumerable(Of NodaTime.TimeZones.TzdbZone1970Location.Country), String, String)
  name.vb: New(Integer, Integer, IEnumerable(Of Country), String, String)
references:
- uid: NodaTime.TimeZones.TzdbZoneLocation
  commentId: T:NodaTime.TimeZones.TzdbZoneLocation
  href: NodaTime.TimeZones.TzdbZoneLocation.html
  name: TzdbZoneLocation
  nameWithType: TzdbZoneLocation
  fullName: NodaTime.TimeZones.TzdbZoneLocation
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.TimeZones.TzdbZone1970Location.Latitude*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Latitude
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location_Latitude
  name: Latitude
  nameWithType: TzdbZone1970Location.Latitude
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Latitude
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: NodaTime.TimeZones.TzdbZone1970Location.Longitude*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Longitude
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location_Longitude
  name: Longitude
  nameWithType: TzdbZone1970Location.Longitude
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Longitude
- uid: NodaTime.TimeZones.TzdbZone1970Location.Countries*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Countries
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location_Countries
  name: Countries
  nameWithType: TzdbZone1970Location.Countries
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Countries
- uid: System.Collections.Generic.IList{NodaTime.TimeZones.TzdbZone1970Location.Country}
  commentId: T:System.Collections.Generic.IList{NodaTime.TimeZones.TzdbZone1970Location.Country}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TzdbZone1970Location.Country>
  nameWithType: IList<TzdbZone1970Location.Country>
  fullName: System.Collections.Generic.IList<NodaTime.TimeZones.TzdbZone1970Location.Country>
  nameWithType.vb: IList(Of TzdbZone1970Location.Country)
  fullName.vb: System.Collections.Generic.IList(Of NodaTime.TimeZones.TzdbZone1970Location.Country)
  name.vb: IList(Of TzdbZone1970Location.Country)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.TzdbDateTimeZoneSource
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.TzdbDateTimeZoneSource.html
  name: TzdbDateTimeZoneSource
  nameWithType: TzdbDateTimeZoneSource
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource
- uid: NodaTime.TimeZones.TzdbZone1970Location.ZoneId*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.ZoneId
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location_ZoneId
  name: ZoneId
  nameWithType: TzdbZone1970Location.ZoneId
  fullName: NodaTime.TimeZones.TzdbZone1970Location.ZoneId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.TimeZones.TzdbZone1970Location.Comment*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.Comment
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location_Comment
  name: Comment
  nameWithType: TzdbZone1970Location.Comment
  fullName: NodaTime.TimeZones.TzdbZone1970Location.Comment
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime.TimeZones.TzdbZone1970Location.#ctor*
  commentId: Overload:NodaTime.TimeZones.TzdbZone1970Location.#ctor
  href: NodaTime.TimeZones.TzdbZone1970Location.html#NodaTime_TimeZones_TzdbZone1970Location__ctor_System_Int32_System_Int32_System_Collections_Generic_IEnumerable_NodaTime_TimeZones_TzdbZone1970Location_Country__System_String_System_String_
  name: TzdbZone1970Location
  nameWithType: TzdbZone1970Location.TzdbZone1970Location
  fullName: NodaTime.TimeZones.TzdbZone1970Location.TzdbZone1970Location
  nameWithType.vb: TzdbZone1970Location.New
  fullName.vb: NodaTime.TimeZones.TzdbZone1970Location.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  commentId: T:System.Collections.Generic.IEnumerable{NodaTime.TimeZones.TzdbZone1970Location.Country}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TzdbZone1970Location.Country>
  nameWithType: IEnumerable<TzdbZone1970Location.Country>
  fullName: System.Collections.Generic.IEnumerable<NodaTime.TimeZones.TzdbZone1970Location.Country>
  nameWithType.vb: IEnumerable(Of TzdbZone1970Location.Country)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NodaTime.TimeZones.TzdbZone1970Location.Country)
  name.vb: IEnumerable(Of TzdbZone1970Location.Country)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.TimeZones.TzdbZone1970Location
    name: TzdbZone1970Location
    href: NodaTime.TimeZones.TzdbZone1970Location.html
  - name: .
  - uid: NodaTime.TimeZones.TzdbZone1970Location.Country
    name: Country
    href: NodaTime.TimeZones.TzdbZone1970Location.Country.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
shouldSkipMarkup: true
