### YamlMime:ManagedReference
items:
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  id: LocalDateTime
  parent: NodaTime
  children:
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  - NodaTime.LocalDateTime.Add(NodaTime.LocalDateTime,NodaTime.Period)
  - NodaTime.LocalDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  - NodaTime.LocalDateTime.Calendar
  - NodaTime.LocalDateTime.ClockHourOfHalfDay
  - NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.Date
  - NodaTime.LocalDateTime.Day
  - NodaTime.LocalDateTime.DayOfWeek
  - NodaTime.LocalDateTime.DayOfYear
  - NodaTime.LocalDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@)
  - NodaTime.LocalDateTime.Equals(NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.Equals(System.Object)
  - NodaTime.LocalDateTime.Era
  - NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  - NodaTime.LocalDateTime.FromDateTime(System.DateTime,NodaTime.CalendarSystem)
  - NodaTime.LocalDateTime.GetHashCode
  - NodaTime.LocalDateTime.Hour
  - NodaTime.LocalDateTime.InUtc
  - NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  - NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  - NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  - NodaTime.LocalDateTime.Max(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.MaxIsoValue
  - NodaTime.LocalDateTime.Millisecond
  - NodaTime.LocalDateTime.Min(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.MinIsoValue
  - NodaTime.LocalDateTime.Minus(NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.Minus(NodaTime.Period)
  - NodaTime.LocalDateTime.Minute
  - NodaTime.LocalDateTime.Month
  - NodaTime.LocalDateTime.NanosecondOfDay
  - NodaTime.LocalDateTime.NanosecondOfSecond
  - NodaTime.LocalDateTime.Next(NodaTime.IsoDayOfWeek)
  - NodaTime.LocalDateTime.Plus(NodaTime.Period)
  - NodaTime.LocalDateTime.PlusDays(System.Int32)
  - NodaTime.LocalDateTime.PlusHours(System.Int64)
  - NodaTime.LocalDateTime.PlusMilliseconds(System.Int64)
  - NodaTime.LocalDateTime.PlusMinutes(System.Int64)
  - NodaTime.LocalDateTime.PlusMonths(System.Int32)
  - NodaTime.LocalDateTime.PlusNanoseconds(System.Int64)
  - NodaTime.LocalDateTime.PlusSeconds(System.Int64)
  - NodaTime.LocalDateTime.PlusTicks(System.Int64)
  - NodaTime.LocalDateTime.PlusWeeks(System.Int32)
  - NodaTime.LocalDateTime.PlusYears(System.Int32)
  - NodaTime.LocalDateTime.Previous(NodaTime.IsoDayOfWeek)
  - NodaTime.LocalDateTime.Second
  - NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.Period)
  - NodaTime.LocalDateTime.System#IComparable#CompareTo(System.Object)
  - NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  - NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - NodaTime.LocalDateTime.TickOfDay
  - NodaTime.LocalDateTime.TickOfSecond
  - NodaTime.LocalDateTime.TimeOfDay
  - NodaTime.LocalDateTime.ToDateTimeUnspecified
  - NodaTime.LocalDateTime.ToString
  - NodaTime.LocalDateTime.ToString(System.String,System.IFormatProvider)
  - NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  - NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  - NodaTime.LocalDateTime.WithCalendar(NodaTime.CalendarSystem)
  - NodaTime.LocalDateTime.WithOffset(NodaTime.Offset)
  - NodaTime.LocalDateTime.Year
  - NodaTime.LocalDateTime.YearOfEra
  - NodaTime.LocalDateTime.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  - NodaTime.LocalDateTime.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  - NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  langs:
  - csharp
  - vb
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
  type: Struct
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A date and time in a particular calendar system. A LocalDateTime value does not represent an

    instant on the global time line, because it has no associated time zone: "November 12th 2009 7pm, ISO calendar"

    occurred at different instants for different people around the world.
  remarks: >-
    <p>

    This type defaults to using the ISO calendar system unless a different calendar system is

    specified.

    </p>

    <p>

    Values can freely be compared for equality: a value in a different calendar system is not equal to

    a value in a different calendar system. However, ordering comparisons (either via the <xref href="NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref> method

    or via operators) fail with <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>; attempting to compare values in different calendars

    almost always indicates a bug in the calling code.

    </p>

    <p>The default value of this type is 0001-01-01T00:00:00 (midnight on January 1st, 1 C.E.) in the ISO calendar.</p>
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(LocalDateTimeTypeConverter))]

      public readonly struct LocalDateTime : IEquatable<LocalDateTime>, IComparable<LocalDateTime>, IComparable, IFormattable, IXmlSerializable, IAdditionOperators<LocalDateTime, Period, LocalDateTime>, ISubtractionOperators<LocalDateTime, LocalDateTime, Period>, ISubtractionOperators<LocalDateTime, Period, LocalDateTime>, IComparisonOperators<LocalDateTime, LocalDateTime, bool>, IEqualityOperators<LocalDateTime, LocalDateTime, bool>
    content.vb: >-
      <TypeConverter(GetType(LocalDateTimeTypeConverter))>

      Public Structure LocalDateTime Implements IEquatable(Of LocalDateTime), IComparable(Of LocalDateTime), IComparable, IFormattable, IXmlSerializable, IAdditionOperators(Of LocalDateTime, Period, LocalDateTime), ISubtractionOperators(Of LocalDateTime, LocalDateTime, Period), ISubtractionOperators(Of LocalDateTime, Period, LocalDateTime), IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean), IEqualityOperators(Of LocalDateTime, LocalDateTime, Boolean)
  implements:
  - System.IEquatable{NodaTime.LocalDateTime}
  - System.IComparable{NodaTime.LocalDateTime}
  - System.IComparable
  - System.IFormattable
  - System.Xml.Serialization.IXmlSerializable
  - System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  - System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}
  - System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  - System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  - System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.LocalDateTime.MaxIsoValue
  commentId: P:NodaTime.LocalDateTime.MaxIsoValue
  id: MaxIsoValue
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: MaxIsoValue
  nameWithType: LocalDateTime.MaxIsoValue
  fullName: NodaTime.LocalDateTime.MaxIsoValue
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    The maximum (latest) date and time representable in the ISO calendar system.

    This is a nanosecond before midnight at the end of <xref href="NodaTime.LocalDate.MaxIsoValue" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static LocalDateTime MaxIsoValue { get; }
    parameters: []
    return:
      type: NodaTime.LocalDateTime
    content.vb: Public Shared ReadOnly Property MaxIsoValue As LocalDateTime
  overload: NodaTime.LocalDateTime.MaxIsoValue*
- uid: NodaTime.LocalDateTime.MinIsoValue
  commentId: P:NodaTime.LocalDateTime.MinIsoValue
  id: MinIsoValue
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: MinIsoValue
  nameWithType: LocalDateTime.MinIsoValue
  fullName: NodaTime.LocalDateTime.MinIsoValue
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    The minimum (earliest) date and time representable in the ISO calendar system.

    This is midnight at the start of <xref href="NodaTime.LocalDate.MinIsoValue" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static LocalDateTime MinIsoValue { get; }
    parameters: []
    return:
      type: NodaTime.LocalDateTime
    content.vb: Public Shared ReadOnly Property MinIsoValue As LocalDateTime
  overload: NodaTime.LocalDateTime.MinIsoValue*
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct using the ISO calendar system.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year",
            so a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer, Integer)
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int, CalendarSystem)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int, CalendarSystem)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int, NodaTime.CalendarSystem)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute, CalendarSystem calendar)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year", so, for
            the ISO calendar, a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, calendar As CalendarSystem)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, CalendarSystem)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, NodaTime.CalendarSystem)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, CalendarSystem)
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int, int)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int, int)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int, int)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct using the ISO calendar system.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute, int second)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year",
            so a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    - id: second
      type: System.Int32
      description: The second.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, Integer)
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int, int, CalendarSystem)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int, int, CalendarSystem)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int, int, NodaTime.CalendarSystem)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute, int second, CalendarSystem calendar)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year", so, for
            the ISO calendar, a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    - id: second
      type: System.Int32
      description: The second.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, calendar As CalendarSystem)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, CalendarSystem)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, NodaTime.CalendarSystem)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, Integer, CalendarSystem)
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int, int, int)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int, int, int)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int, int, int)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct using the ISO calendar system.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year",
            so a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    - id: second
      type: System.Int32
      description: The second.
    - id: millisecond
      type: System.Int32
      description: The millisecond.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  commentId: M:NodaTime.LocalDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,NodaTime.CalendarSystem)'
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: LocalDateTime(int, int, int, int, int, int, int, CalendarSystem)
  nameWithType: LocalDateTime.LocalDateTime(int, int, int, int, int, int, int, CalendarSystem)
  fullName: NodaTime.LocalDateTime.LocalDateTime(int, int, int, int, int, int, int, NodaTime.CalendarSystem)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Initializes a new instance of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public LocalDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, CalendarSystem calendar)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year", so, for
            the ISO calendar, a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: day
      type: System.Int32
      description: The day of month.
    - id: hour
      type: System.Int32
      description: The hour.
    - id: minute
      type: System.Int32
      description: The minute.
    - id: second
      type: System.Int32
      description: The second.
    - id: millisecond
      type: System.Int32
      description: The millisecond.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar.
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, calendar As CalendarSystem)
  overload: NodaTime.LocalDateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid date/time.
  nameWithType.vb: LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, CalendarSystem)
  fullName.vb: NodaTime.LocalDateTime.New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, NodaTime.CalendarSystem)
  name.vb: New(Integer, Integer, Integer, Integer, Integer, Integer, Integer, CalendarSystem)
- uid: NodaTime.LocalDateTime.Calendar
  commentId: P:NodaTime.LocalDateTime.Calendar
  id: Calendar
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: LocalDateTime.Calendar
  fullName: NodaTime.LocalDateTime.Calendar
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the calendar system associated with this local date and time.
  example: []
  syntax:
    content: public CalendarSystem Calendar { get; }
    parameters: []
    return:
      type: NodaTime.CalendarSystem
      description: The calendar system associated with this local date and time.
    content.vb: Public ReadOnly Property Calendar As CalendarSystem
  overload: NodaTime.LocalDateTime.Calendar*
- uid: NodaTime.LocalDateTime.Year
  commentId: P:NodaTime.LocalDateTime.Year
  id: Year
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: LocalDateTime.Year
  fullName: NodaTime.LocalDateTime.Year
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this local date and time.
  remarks: >-
    This returns the "absolute year", so, for the ISO calendar,
        a value of 0 means 1 BC, for example.
  example: []
  syntax:
    content: public int Year { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this local date and time.
    content.vb: Public ReadOnly Property Year As Integer
  overload: NodaTime.LocalDateTime.Year*
- uid: NodaTime.LocalDateTime.YearOfEra
  commentId: P:NodaTime.LocalDateTime.YearOfEra
  id: YearOfEra
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: YearOfEra
  nameWithType: LocalDateTime.YearOfEra
  fullName: NodaTime.LocalDateTime.YearOfEra
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this local date and time within its era.
  example: []
  syntax:
    content: public int YearOfEra { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this local date and time within its era.
    content.vb: Public ReadOnly Property YearOfEra As Integer
  overload: NodaTime.LocalDateTime.YearOfEra*
- uid: NodaTime.LocalDateTime.Era
  commentId: P:NodaTime.LocalDateTime.Era
  id: Era
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Era
  nameWithType: LocalDateTime.Era
  fullName: NodaTime.LocalDateTime.Era
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the era of this local date and time.
  example: []
  syntax:
    content: public Era Era { get; }
    parameters: []
    return:
      type: NodaTime.Calendars.Era
      description: The era of this local date and time.
    content.vb: Public ReadOnly Property Era As Era
  overload: NodaTime.LocalDateTime.Era*
- uid: NodaTime.LocalDateTime.Month
  commentId: P:NodaTime.LocalDateTime.Month
  id: Month
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: LocalDateTime.Month
  fullName: NodaTime.LocalDateTime.Month
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the month of this local date and time within the year.
  example: []
  syntax:
    content: public int Month { get; }
    parameters: []
    return:
      type: System.Int32
      description: The month of this local date and time within the year.
    content.vb: Public ReadOnly Property Month As Integer
  overload: NodaTime.LocalDateTime.Month*
- uid: NodaTime.LocalDateTime.DayOfYear
  commentId: P:NodaTime.LocalDateTime.DayOfYear
  id: DayOfYear
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: DayOfYear
  nameWithType: LocalDateTime.DayOfYear
  fullName: NodaTime.LocalDateTime.DayOfYear
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the day of this local date and time within the year.
  example: []
  syntax:
    content: public int DayOfYear { get; }
    parameters: []
    return:
      type: System.Int32
      description: The day of this local date and time within the year.
    content.vb: Public ReadOnly Property DayOfYear As Integer
  overload: NodaTime.LocalDateTime.DayOfYear*
- uid: NodaTime.LocalDateTime.Day
  commentId: P:NodaTime.LocalDateTime.Day
  id: Day
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: LocalDateTime.Day
  fullName: NodaTime.LocalDateTime.Day
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the day of this local date and time within the month.
  example: []
  syntax:
    content: public int Day { get; }
    parameters: []
    return:
      type: System.Int32
      description: The day of this local date and time within the month.
    content.vb: Public ReadOnly Property Day As Integer
  overload: NodaTime.LocalDateTime.Day*
- uid: NodaTime.LocalDateTime.DayOfWeek
  commentId: P:NodaTime.LocalDateTime.DayOfWeek
  id: DayOfWeek
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: DayOfWeek
  nameWithType: LocalDateTime.DayOfWeek
  fullName: NodaTime.LocalDateTime.DayOfWeek
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the week day of this local date and time expressed as an <xref href="NodaTime.IsoDayOfWeek" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public IsoDayOfWeek DayOfWeek { get; }
    parameters: []
    return:
      type: NodaTime.IsoDayOfWeek
      description: The week day of this local date and time expressed as an <code>IsoDayOfWeek</code>.
    content.vb: Public ReadOnly Property DayOfWeek As IsoDayOfWeek
  overload: NodaTime.LocalDateTime.DayOfWeek*
- uid: NodaTime.LocalDateTime.Hour
  commentId: P:NodaTime.LocalDateTime.Hour
  id: Hour
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Hour
  nameWithType: LocalDateTime.Hour
  fullName: NodaTime.LocalDateTime.Hour
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the hour of day of this local date and time, in the range 0 to 23 inclusive.
  example: []
  syntax:
    content: public int Hour { get; }
    parameters: []
    return:
      type: System.Int32
      description: The hour of day of this local date and time, in the range 0 to 23 inclusive.
    content.vb: Public ReadOnly Property Hour As Integer
  overload: NodaTime.LocalDateTime.Hour*
- uid: NodaTime.LocalDateTime.ClockHourOfHalfDay
  commentId: P:NodaTime.LocalDateTime.ClockHourOfHalfDay
  id: ClockHourOfHalfDay
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: ClockHourOfHalfDay
  nameWithType: LocalDateTime.ClockHourOfHalfDay
  fullName: NodaTime.LocalDateTime.ClockHourOfHalfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the hour of the half-day of this local date and time, in the range 1 to 12 inclusive.
  example: []
  syntax:
    content: public int ClockHourOfHalfDay { get; }
    parameters: []
    return:
      type: System.Int32
      description: The hour of the half-day of this local date and time, in the range 1 to 12 inclusive.
    content.vb: Public ReadOnly Property ClockHourOfHalfDay As Integer
  overload: NodaTime.LocalDateTime.ClockHourOfHalfDay*
- uid: NodaTime.LocalDateTime.Minute
  commentId: P:NodaTime.LocalDateTime.Minute
  id: Minute
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Minute
  nameWithType: LocalDateTime.Minute
  fullName: NodaTime.LocalDateTime.Minute
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the minute of this local date and time, in the range 0 to 59 inclusive.
  example: []
  syntax:
    content: public int Minute { get; }
    parameters: []
    return:
      type: System.Int32
      description: The minute of this local date and time, in the range 0 to 59 inclusive.
    content.vb: Public ReadOnly Property Minute As Integer
  overload: NodaTime.LocalDateTime.Minute*
- uid: NodaTime.LocalDateTime.Second
  commentId: P:NodaTime.LocalDateTime.Second
  id: Second
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: LocalDateTime.Second
  fullName: NodaTime.LocalDateTime.Second
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the second of this local date and time within the minute, in the range 0 to 59 inclusive.
  example: []
  syntax:
    content: public int Second { get; }
    parameters: []
    return:
      type: System.Int32
      description: The second of this local date and time within the minute, in the range 0 to 59 inclusive.
    content.vb: Public ReadOnly Property Second As Integer
  overload: NodaTime.LocalDateTime.Second*
- uid: NodaTime.LocalDateTime.Millisecond
  commentId: P:NodaTime.LocalDateTime.Millisecond
  id: Millisecond
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Millisecond
  nameWithType: LocalDateTime.Millisecond
  fullName: NodaTime.LocalDateTime.Millisecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the millisecond of this local date and time within the second, in the range 0 to 999 inclusive.
  example: []
  syntax:
    content: public int Millisecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The millisecond of this local date and time within the second, in the range 0 to 999 inclusive.
    content.vb: Public ReadOnly Property Millisecond As Integer
  overload: NodaTime.LocalDateTime.Millisecond*
- uid: NodaTime.LocalDateTime.TickOfSecond
  commentId: P:NodaTime.LocalDateTime.TickOfSecond
  id: TickOfSecond
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: TickOfSecond
  nameWithType: LocalDateTime.TickOfSecond
  fullName: NodaTime.LocalDateTime.TickOfSecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the tick of this local time within the second, in the range 0 to 9,999,999 inclusive.
  example: []
  syntax:
    content: public int TickOfSecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The tick of this local time within the second, in the range 0 to 9,999,999 inclusive.
    content.vb: Public ReadOnly Property TickOfSecond As Integer
  overload: NodaTime.LocalDateTime.TickOfSecond*
- uid: NodaTime.LocalDateTime.TickOfDay
  commentId: P:NodaTime.LocalDateTime.TickOfDay
  id: TickOfDay
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: TickOfDay
  nameWithType: LocalDateTime.TickOfDay
  fullName: NodaTime.LocalDateTime.TickOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the tick of this local date and time within the day, in the range 0 to 863,999,999,999 inclusive.
  example: []
  syntax:
    content: public long TickOfDay { get; }
    parameters: []
    return:
      type: System.Int64
      description: The tick of this local date and time within the day, in the range 0 to 863,999,999,999 inclusive.
    content.vb: Public ReadOnly Property TickOfDay As Long
  overload: NodaTime.LocalDateTime.TickOfDay*
- uid: NodaTime.LocalDateTime.NanosecondOfSecond
  commentId: P:NodaTime.LocalDateTime.NanosecondOfSecond
  id: NanosecondOfSecond
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: NanosecondOfSecond
  nameWithType: LocalDateTime.NanosecondOfSecond
  fullName: NodaTime.LocalDateTime.NanosecondOfSecond
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the nanosecond of this local time within the second, in the range 0 to 999,999,999 inclusive.
  example: []
  syntax:
    content: public int NanosecondOfSecond { get; }
    parameters: []
    return:
      type: System.Int32
      description: The nanosecond of this local time within the second, in the range 0 to 999,999,999 inclusive.
    content.vb: Public ReadOnly Property NanosecondOfSecond As Integer
  overload: NodaTime.LocalDateTime.NanosecondOfSecond*
- uid: NodaTime.LocalDateTime.NanosecondOfDay
  commentId: P:NodaTime.LocalDateTime.NanosecondOfDay
  id: NanosecondOfDay
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: NanosecondOfDay
  nameWithType: LocalDateTime.NanosecondOfDay
  fullName: NodaTime.LocalDateTime.NanosecondOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the nanosecond of this local date and time within the day, in the range 0 to 86,399,999,999,999 inclusive.
  example: []
  syntax:
    content: public long NanosecondOfDay { get; }
    parameters: []
    return:
      type: System.Int64
      description: The nanosecond of this local date and time within the day, in the range 0 to 86,399,999,999,999 inclusive.
    content.vb: Public ReadOnly Property NanosecondOfDay As Long
  overload: NodaTime.LocalDateTime.NanosecondOfDay*
- uid: NodaTime.LocalDateTime.TimeOfDay
  commentId: P:NodaTime.LocalDateTime.TimeOfDay
  id: TimeOfDay
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: TimeOfDay
  nameWithType: LocalDateTime.TimeOfDay
  fullName: NodaTime.LocalDateTime.TimeOfDay
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the time portion of this local date and time as a <xref href="NodaTime.LocalTime" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public LocalTime TimeOfDay { get; }
    parameters: []
    return:
      type: NodaTime.LocalTime
      description: The time portion of this local date and time as a <code>LocalTime</code>.
    content.vb: Public ReadOnly Property TimeOfDay As LocalTime
  overload: NodaTime.LocalDateTime.TimeOfDay*
- uid: NodaTime.LocalDateTime.Date
  commentId: P:NodaTime.LocalDateTime.Date
  id: Date
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: LocalDateTime.Date
  fullName: NodaTime.LocalDateTime.Date
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the date portion of this local date and time as a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in the same calendar system as this value.
  example: []
  syntax:
    content: public LocalDate Date { get; }
    parameters: []
    return:
      type: NodaTime.LocalDate
      description: The date portion of this local date and time as a <code>LocalDate</code> in the same calendar system as this value.
    content.vb: Public ReadOnly Property [Date] As LocalDate
  overload: NodaTime.LocalDateTime.Date*
- uid: NodaTime.LocalDateTime.ToDateTimeUnspecified
  commentId: M:NodaTime.LocalDateTime.ToDateTimeUnspecified
  id: ToDateTimeUnspecified
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: ToDateTimeUnspecified()
  nameWithType: LocalDateTime.ToDateTimeUnspecified()
  fullName: NodaTime.LocalDateTime.ToDateTimeUnspecified()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Constructs a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> from this value which has a <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref>

    of <xref href="System.DateTimeKind.Unspecified" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>
      <xref href="System.DateTimeKind.Unspecified" data-throw-if-not-resolved="false"></xref> is slightly odd - it can be treated as UTC if you use <xref href="System.DateTime.ToLocalTime" data-throw-if-not-resolved="false"></xref>
    or as system local time if you use <xref href="System.DateTime.ToUniversalTime" data-throw-if-not-resolved="false"></xref>, but it's the only kind which allows

    you to construct a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> with an arbitrary offset, which makes it as close to

    the Noda Time non-system-specific "local" concept as exists in .NET.

    </p>

    <p>

    If the date and time is not on a tick boundary (the unit of granularity of DateTime) the value will be truncated

    towards the start of time.

    </p>

    <p>
      <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> uses the Gregorian calendar by definition, so the value is implicitly converted
    to the Gregorian calendar first. The result will be on the same physical day,

    but the values returned by the Year/Month/Day properties of the <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> may not

    match the Year/Month/Day properties of this value.

    </p>
  example: []
  syntax:
    content: public DateTime ToDateTimeUnspecified()
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value for the same date and time as this value.
    content.vb: Public Function ToDateTimeUnspecified() As Date
  overload: NodaTime.LocalDateTime.ToDateTimeUnspecified*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The date/time is outside the range of <code>DateTime</code>.
- uid: NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  commentId: M:NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: FromDateTime(DateTime)
  nameWithType: LocalDateTime.FromDateTime(DateTime)
  fullName: NodaTime.LocalDateTime.FromDateTime(System.DateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Converts a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> of any kind to a LocalDateTime in the ISO calendar. This does not perform

    any time zone conversions, so a DateTime with a <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref> of <xref href="System.DateTimeKind.Utc" data-throw-if-not-resolved="false"></xref>

    will still have the same day/hour/minute etc - it won't be converted into the local system time.
  example: []
  syntax:
    content: public static LocalDateTime FromDateTime(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Value to convert into a Noda Time local date and time
    return:
      type: NodaTime.LocalDateTime
      description: A new <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> with the same values as the specified <code>DateTime</code>.
    content.vb: Public Shared Function FromDateTime(dateTime As Date) As LocalDateTime
  overload: NodaTime.LocalDateTime.FromDateTime*
  nameWithType.vb: LocalDateTime.FromDateTime(Date)
  fullName.vb: NodaTime.LocalDateTime.FromDateTime(Date)
  name.vb: FromDateTime(Date)
- uid: NodaTime.LocalDateTime.FromDateTime(System.DateTime,NodaTime.CalendarSystem)
  commentId: M:NodaTime.LocalDateTime.FromDateTime(System.DateTime,NodaTime.CalendarSystem)
  id: FromDateTime(System.DateTime,NodaTime.CalendarSystem)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: FromDateTime(DateTime, CalendarSystem)
  nameWithType: LocalDateTime.FromDateTime(DateTime, CalendarSystem)
  fullName: NodaTime.LocalDateTime.FromDateTime(System.DateTime, NodaTime.CalendarSystem)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Converts a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> of any kind to a LocalDateTime in the specified calendar. This does not perform

    any time zone conversions, so a DateTime with a <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref> of <xref href="System.DateTimeKind.Utc" data-throw-if-not-resolved="false"></xref>

    will still have the same day/hour/minute etc - it won't be converted into the local system time.
  example: []
  syntax:
    content: public static LocalDateTime FromDateTime(DateTime dateTime, CalendarSystem calendar)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Value to convert into a Noda Time local date and time
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar system to convert into
    return:
      type: NodaTime.LocalDateTime
      description: A new <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> with the same values as the specified <code>DateTime</code>.
    content.vb: Public Shared Function FromDateTime(dateTime As Date, calendar As CalendarSystem) As LocalDateTime
  overload: NodaTime.LocalDateTime.FromDateTime*
  nameWithType.vb: LocalDateTime.FromDateTime(Date, CalendarSystem)
  fullName.vb: NodaTime.LocalDateTime.FromDateTime(Date, NodaTime.CalendarSystem)
  name.vb: FromDateTime(Date, CalendarSystem)
- uid: NodaTime.LocalDateTime.Equals(NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.Equals(NodaTime.LocalDateTime)
  id: Equals(NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Equals(LocalDateTime)
  nameWithType: LocalDateTime.Equals(LocalDateTime)
  fullName: NodaTime.LocalDateTime.Equals(NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Indicates whether the current object is equal to another object of the same type.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(LocalDateTime other)
    parameters:
    - id: other
      type: NodaTime.LocalDateTime
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: true if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, false.
    content.vb: Public Function Equals(other As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.Equals*
  implements:
  - System.IEquatable{NodaTime.LocalDateTime}.Equals(NodaTime.LocalDateTime)
- uid: NodaTime.LocalDateTime.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator ==(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator ==(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator ==(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator == (equality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator ==(LocalDateTime left, LocalDateTime right)
    parameters:
    - id: left
      type: NodaTime.LocalDateTime
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.LocalDateTime
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator =(left As LocalDateTime, right As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_Equality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.=(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: =(LocalDateTime, LocalDateTime)
- uid: NodaTime.LocalDateTime.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator !=(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator !=(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator !=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator != (inequality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator !=(LocalDateTime left, LocalDateTime right)
    parameters:
    - id: left
      type: NodaTime.LocalDateTime
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.LocalDateTime
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are not equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator <>(left As LocalDateTime, right As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_Inequality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.<>(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.<>(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <>(LocalDateTime, LocalDateTime)
- uid: NodaTime.LocalDateTime.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator <(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator <(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator <(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two LocalDateTime values to see if the left one is strictly earlier than the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.LocalDateTime
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is strictly earlier than <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator <(lhs As LocalDateTime, rhs As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_LessThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.<(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.<(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <(LocalDateTime, LocalDateTime)
- uid: NodaTime.LocalDateTime.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator <=(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator <=(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator <=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two LocalDateTime values to see if the left one is earlier than or equal to the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <=(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.LocalDateTime
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is earlier than or equal to <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator <=(lhs As LocalDateTime, rhs As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_LessThanOrEqual*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.<=(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.<=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <=(LocalDateTime, LocalDateTime)
- uid: NodaTime.LocalDateTime.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator >(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator >(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator >(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two LocalDateTime values to see if the left one is strictly later than the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.LocalDateTime
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is strictly later than <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator >(lhs As LocalDateTime, rhs As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_GreaterThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.>(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.>(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: '>(LocalDateTime, LocalDateTime)'
- uid: NodaTime.LocalDateTime.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator >=(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator >=(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator >=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two LocalDateTime values to see if the left one is later than or equal to the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >=(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.LocalDateTime
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is later than or equal to <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator >=(lhs As LocalDateTime, rhs As LocalDateTime) As Boolean
  overload: NodaTime.LocalDateTime.op_GreaterThanOrEqual*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.>=(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.>=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: '>=(LocalDateTime, LocalDateTime)'
- uid: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  id: CompareTo(NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(LocalDateTime)
  nameWithType: LocalDateTime.CompareTo(LocalDateTime)
  fullName: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Indicates whether this date/time is earlier, later or the same as another one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public int CompareTo(LocalDateTime other)
    parameters:
    - id: other
      type: NodaTime.LocalDateTime
      description: The other local date/time to compare with this value.
    return:
      type: System.Int32
      description: >-
        A value less than zero if this date/time is earlier than <code class="paramref">other</code>;
            zero if this date/time is the same as <code class="paramref">other</code>; a value greater than zero if this date/time is
            later than <code class="paramref">other</code>.
    content.vb: Public Function CompareTo(other As LocalDateTime) As Integer
  overload: NodaTime.LocalDateTime.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">other</code> is not the
          same as the calendar system of this value.
  implements:
  - System.IComparable{NodaTime.LocalDateTime}.CompareTo(NodaTime.LocalDateTime)
- uid: NodaTime.LocalDateTime.System#IComparable#CompareTo(System.Object)
  commentId: M:NodaTime.LocalDateTime.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(object?)
  nameWithType: LocalDateTime.IComparable.CompareTo(object?)
  fullName: NodaTime.LocalDateTime.System.IComparable.CompareTo(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implementation of <xref href="System.IComparable.CompareTo(System.Object)" data-throw-if-not-resolved="false"></xref> to compare two LocalDateTimes.

    See the type documentation for a description of ordering semantics.
  remarks: This uses explicit interface implementation to avoid it being called accidentally. The generic implementation should usually be preferred.
  example: []
  syntax:
    content: int IComparable.CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this value with.
    return:
      type: System.Int32
      description: >-
        The result of comparing this LocalDateTime with another one; see <xref href="NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref> for general details.
            If <code class="paramref">obj</code> is null, this method returns a value greater than 0.
    content.vb: ''
  overload: NodaTime.LocalDateTime.System#IComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">obj</code> is non-null but does not refer to an instance of <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref>,

      or refers to a date/time in a different calendar system.
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.LocalDateTime.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  id: op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator +(LocalDateTime, Period)
  nameWithType: LocalDateTime.operator +(LocalDateTime, Period)
  fullName: NodaTime.LocalDateTime.operator +(NodaTime.LocalDateTime, NodaTime.Period)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Adds a period to a local date/time.

    Fields are added in descending order of significance (years first, then months, and so on).

    This is a convenience operator over the <xref href="NodaTime.LocalDateTime.Plus(NodaTime.Period)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public static LocalDateTime operator +(LocalDateTime localDateTime, Period period)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: Initial local date and time
    - id: period
      type: NodaTime.Period
      description: Period to add
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Shared Operator +(localDateTime As LocalDateTime, period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.op_Addition*
  implements:
  - System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  nameWithType.vb: LocalDateTime.+(LocalDateTime, Period)
  fullName.vb: NodaTime.LocalDateTime.+(NodaTime.LocalDateTime, NodaTime.Period)
  name.vb: +(LocalDateTime, Period)
- uid: NodaTime.LocalDateTime.Add(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Add(NodaTime.LocalDateTime,NodaTime.Period)
  id: Add(NodaTime.LocalDateTime,NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Add(LocalDateTime, Period)
  nameWithType: LocalDateTime.Add(LocalDateTime, Period)
  fullName: NodaTime.LocalDateTime.Add(NodaTime.LocalDateTime, NodaTime.Period)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Add the specified period to the date and time.

    Fields are added in descending order of significance (years first, then months, and so on).

    Friendly alternative to <code>operator+()</code>.
  example: []
  syntax:
    content: public static LocalDateTime Add(LocalDateTime localDateTime, Period period)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: Initial local date and time
    - id: period
      type: NodaTime.Period
      description: Period to add
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Shared Function Add(localDateTime As LocalDateTime, period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.Add*
- uid: NodaTime.LocalDateTime.Plus(NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Plus(NodaTime.Period)
  id: Plus(NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Plus(Period)
  nameWithType: LocalDateTime.Plus(Period)
  fullName: NodaTime.LocalDateTime.Plus(NodaTime.Period)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Adds a period to this local date/time.

    Fields are added in descending order of significance (years first, then months, and so on).
  example: []
  syntax:
    content: public LocalDateTime Plus(Period period)
    parameters:
    - id: period
      type: NodaTime.Period
      description: Period to add
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Function Plus(period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.Plus*
- uid: NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  id: op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator -(LocalDateTime, Period)
  nameWithType: LocalDateTime.operator -(LocalDateTime, Period)
  fullName: NodaTime.LocalDateTime.operator -(NodaTime.LocalDateTime, NodaTime.Period)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Subtracts a period from a local date/time.

    Fields are subtracted in descending order of significance (years first, then months, and so on).

    This is a convenience operator over the <xref href="NodaTime.LocalDateTime.Minus(NodaTime.Period)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public static LocalDateTime operator -(LocalDateTime localDateTime, Period period)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: Initial local date and time
    - id: period
      type: NodaTime.Period
      description: Period to subtract
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Shared Operator -(localDateTime As LocalDateTime, period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.op_Subtraction*
  implements:
  - System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  nameWithType.vb: LocalDateTime.-(LocalDateTime, Period)
  fullName.vb: NodaTime.LocalDateTime.-(NodaTime.LocalDateTime, NodaTime.Period)
  name.vb: -(LocalDateTime, Period)
- uid: NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.Period)
  id: Subtract(NodaTime.LocalDateTime,NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Subtract(LocalDateTime, Period)
  nameWithType: LocalDateTime.Subtract(LocalDateTime, Period)
  fullName: NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime, NodaTime.Period)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts the specified period from the date and time. Friendly alternative to <code>operator-()</code>.
  example: []
  syntax:
    content: public static LocalDateTime Subtract(LocalDateTime localDateTime, Period period)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: Initial local date and time
    - id: period
      type: NodaTime.Period
      description: Period to subtract
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Shared Function Subtract(localDateTime As LocalDateTime, period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.Subtract*
- uid: NodaTime.LocalDateTime.Minus(NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Minus(NodaTime.Period)
  id: Minus(NodaTime.Period)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Minus(Period)
  nameWithType: LocalDateTime.Minus(Period)
  fullName: NodaTime.LocalDateTime.Minus(NodaTime.Period)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Subtracts a period from a local date/time.

    Fields are subtracted in descending order of significance (years first, then months, and so on).
  example: []
  syntax:
    content: public LocalDateTime Minus(Period period)
    parameters:
    - id: period
      type: NodaTime.Period
      description: Period to subtract
    return:
      type: NodaTime.LocalDateTime
      description: The resulting local date and time
    content.vb: Public Function Minus(period As Period) As LocalDateTime
  overload: NodaTime.LocalDateTime.Minus*
- uid: NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: operator -(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.operator -(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.operator -(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts one date/time from another, returning the result as a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This is simply a convenience operator for calling <xref href="NodaTime.Period.Between(NodaTime.LocalDateTime%2cNodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref>.

    The calendar systems of the two date/times must be the same.
  example: []
  syntax:
    content: public static Period operator -(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: The date/time to subtract from
    - id: rhs
      type: NodaTime.LocalDateTime
      description: The date/time to subtract
    return:
      type: NodaTime.Period
      description: The result of subtracting one date/time from another.
    content.vb: Public Shared Operator -(lhs As LocalDateTime, rhs As LocalDateTime) As Period
  overload: NodaTime.LocalDateTime.op_Subtraction*
  implements:
  - System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  nameWithType.vb: LocalDateTime.-(LocalDateTime, LocalDateTime)
  fullName.vb: NodaTime.LocalDateTime.-(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: -(LocalDateTime, LocalDateTime)
- uid: NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: Subtract(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Subtract(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.Subtract(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.Subtract(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts one date/time from another, returning the result as a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This is simply a convenience method for calling <xref href="NodaTime.Period.Between(NodaTime.LocalDateTime%2cNodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref>.

    The calendar systems of the two date/times must be the same.
  example: []
  syntax:
    content: public static Period Subtract(LocalDateTime lhs, LocalDateTime rhs)
    parameters:
    - id: lhs
      type: NodaTime.LocalDateTime
      description: The date/time to subtract from
    - id: rhs
      type: NodaTime.LocalDateTime
      description: The date/time to subtract
    return:
      type: NodaTime.Period
      description: The result of subtracting one date/time from another.
    content.vb: Public Shared Function Subtract(lhs As LocalDateTime, rhs As LocalDateTime) As Period
  overload: NodaTime.LocalDateTime.Subtract*
- uid: NodaTime.LocalDateTime.Minus(NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.Minus(NodaTime.LocalDateTime)
  id: Minus(NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Minus(LocalDateTime)
  nameWithType: LocalDateTime.Minus(LocalDateTime)
  fullName: NodaTime.LocalDateTime.Minus(NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Subtracts the specified date/time from this date/time, returning the result as a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>.

    Fluent alternative to <code>operator-()</code>.
  remarks: The specified date/time must be in the same calendar system as this.
  example: []
  syntax:
    content: public Period Minus(LocalDateTime localDateTime)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: The date/time to subtract from this
    return:
      type: NodaTime.Period
      description: The difference between the specified date/time and this one
    content.vb: Public Function Minus(localDateTime As LocalDateTime) As Period
  overload: NodaTime.LocalDateTime.Minus*
- uid: NodaTime.LocalDateTime.Equals(System.Object)
  commentId: M:NodaTime.LocalDateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: LocalDateTime.Equals(object?)
  fullName: NodaTime.LocalDateTime.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Determines whether the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to this instance.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to this instance;

        otherwise, <code>false</code>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NodaTime.LocalDateTime.Equals*
  nameWithType.vb: LocalDateTime.Equals(Object)
  fullName.vb: NodaTime.LocalDateTime.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.LocalDateTime.GetHashCode
  commentId: M:NodaTime.LocalDateTime.GetHashCode
  id: GetHashCode
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LocalDateTime.GetHashCode()
  fullName: NodaTime.LocalDateTime.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a hash code for this instance.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        A hash code for this instance, suitable for use in hashing algorithms and data

        structures like a hash table.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NodaTime.LocalDateTime.GetHashCode*
- uid: NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  commentId: M:NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  id: With(System.Func{NodaTime.LocalDate,NodaTime.LocalDate})
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: With(Func<LocalDate, LocalDate>)
  nameWithType: LocalDateTime.With(Func<LocalDate, LocalDate>)
  fullName: NodaTime.LocalDateTime.With(System.Func<NodaTime.LocalDate, NodaTime.LocalDate>)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns this date/time, with the given date adjuster applied to it, maintaining the existing time of day.
  remarks: >-
    If the adjuster attempts to construct an

    invalid date (such as by trying to set a day-of-month of 30 in February), any exception thrown by

    that construction attempt will be propagated through this method.
  example: []
  syntax:
    content: public LocalDateTime With(Func<LocalDate, LocalDate> adjuster)
    parameters:
    - id: adjuster
      type: System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
      description: The adjuster to apply.
    return:
      type: NodaTime.LocalDateTime
      description: The adjusted date/time.
    content.vb: Public Function [With](adjuster As Func(Of LocalDate, LocalDate)) As LocalDateTime
  overload: NodaTime.LocalDateTime.With*
  nameWithType.vb: LocalDateTime.With(Func(Of LocalDate, LocalDate))
  fullName.vb: NodaTime.LocalDateTime.With(System.Func(Of NodaTime.LocalDate, NodaTime.LocalDate))
  name.vb: With(Func(Of LocalDate, LocalDate))
- uid: NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  commentId: M:NodaTime.LocalDateTime.With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  id: With(System.Func{NodaTime.LocalTime,NodaTime.LocalTime})
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: With(Func<LocalTime, LocalTime>)
  nameWithType: LocalDateTime.With(Func<LocalTime, LocalTime>)
  fullName: NodaTime.LocalDateTime.With(System.Func<NodaTime.LocalTime, NodaTime.LocalTime>)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns this date/time, with the given time adjuster applied to it, maintaining the existing date.
  remarks: >-
    If the adjuster attempts to construct an invalid time, any exception thrown by

    that construction attempt will be propagated through this method.
  example: []
  syntax:
    content: public LocalDateTime With(Func<LocalTime, LocalTime> adjuster)
    parameters:
    - id: adjuster
      type: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
      description: The adjuster to apply.
    return:
      type: NodaTime.LocalDateTime
      description: The adjusted date/time.
    content.vb: Public Function [With](adjuster As Func(Of LocalTime, LocalTime)) As LocalDateTime
  overload: NodaTime.LocalDateTime.With*
  nameWithType.vb: LocalDateTime.With(Func(Of LocalTime, LocalTime))
  fullName.vb: NodaTime.LocalDateTime.With(System.Func(Of NodaTime.LocalTime, NodaTime.LocalTime))
  name.vb: With(Func(Of LocalTime, LocalTime))
- uid: NodaTime.LocalDateTime.WithCalendar(NodaTime.CalendarSystem)
  commentId: M:NodaTime.LocalDateTime.WithCalendar(NodaTime.CalendarSystem)
  id: WithCalendar(NodaTime.CalendarSystem)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: WithCalendar(CalendarSystem)
  nameWithType: LocalDateTime.WithCalendar(CalendarSystem)
  fullName: NodaTime.LocalDateTime.WithCalendar(NodaTime.CalendarSystem)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Creates a new LocalDateTime representing the same physical date and time, but in a different calendar.

    The returned LocalDateTime is likely to have different date field values to this one.

    For example, January 1st 1970 in the Gregorian calendar was December 19th 1969 in the Julian calendar.
  example: []
  syntax:
    content: public LocalDateTime WithCalendar(CalendarSystem calendar)
    parameters:
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar system to convert this local date to.
    return:
      type: NodaTime.LocalDateTime
      description: The converted LocalDateTime.
    content.vb: Public Function WithCalendar(calendar As CalendarSystem) As LocalDateTime
  overload: NodaTime.LocalDateTime.WithCalendar*
- uid: NodaTime.LocalDateTime.PlusYears(System.Int32)
  commentId: M:NodaTime.LocalDateTime.PlusYears(System.Int32)
  id: PlusYears(System.Int32)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusYears(int)
  nameWithType: LocalDateTime.PlusYears(int)
  fullName: NodaTime.LocalDateTime.PlusYears(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of years added.
  remarks: >-
    If the resulting date is invalid, lower fields (typically the day of month) are reduced to find a valid value.

    For example, adding one year to February 29th 2012 will return February 28th 2013; subtracting one year from

    February 29th 2012 will return February 28th 2011.
  example: []
  syntax:
    content: public LocalDateTime PlusYears(int years)
    parameters:
    - id: years
      type: System.Int32
      description: The number of years to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of years.
    content.vb: Public Function PlusYears(years As Integer) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusYears*
  nameWithType.vb: LocalDateTime.PlusYears(Integer)
  fullName.vb: NodaTime.LocalDateTime.PlusYears(Integer)
  name.vb: PlusYears(Integer)
- uid: NodaTime.LocalDateTime.PlusMonths(System.Int32)
  commentId: M:NodaTime.LocalDateTime.PlusMonths(System.Int32)
  id: PlusMonths(System.Int32)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusMonths(int)
  nameWithType: LocalDateTime.PlusMonths(int)
  fullName: NodaTime.LocalDateTime.PlusMonths(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of months added.
  remarks: >-
    <p>

    This method does not try to maintain the year of the current value, so adding four months to a value in

    October will result in a value in the following February.

    </p>

    <p>

    If the resulting date is invalid, the day of month is reduced to find a valid value.

    For example, adding one month to January 30th 2011 will return February 28th 2011; subtracting one month from

    March 30th 2011 will return February 28th 2011.

    </p>
  example: []
  syntax:
    content: public LocalDateTime PlusMonths(int months)
    parameters:
    - id: months
      type: System.Int32
      description: The number of months to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of months.
    content.vb: Public Function PlusMonths(months As Integer) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusMonths*
  nameWithType.vb: LocalDateTime.PlusMonths(Integer)
  fullName.vb: NodaTime.LocalDateTime.PlusMonths(Integer)
  name.vb: PlusMonths(Integer)
- uid: NodaTime.LocalDateTime.PlusDays(System.Int32)
  commentId: M:NodaTime.LocalDateTime.PlusDays(System.Int32)
  id: PlusDays(System.Int32)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusDays(int)
  nameWithType: LocalDateTime.PlusDays(int)
  fullName: NodaTime.LocalDateTime.PlusDays(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of days added.
  remarks: >-
    <p>

    This method does not try to maintain the month or year of the current value, so adding 3 days to a value on January 30th

    will result in a value on February 2nd.

    </p>
  example: []
  syntax:
    content: public LocalDateTime PlusDays(int days)
    parameters:
    - id: days
      type: System.Int32
      description: The number of days to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of days.
    content.vb: Public Function PlusDays(days As Integer) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusDays*
  nameWithType.vb: LocalDateTime.PlusDays(Integer)
  fullName.vb: NodaTime.LocalDateTime.PlusDays(Integer)
  name.vb: PlusDays(Integer)
- uid: NodaTime.LocalDateTime.PlusWeeks(System.Int32)
  commentId: M:NodaTime.LocalDateTime.PlusWeeks(System.Int32)
  id: PlusWeeks(System.Int32)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusWeeks(int)
  nameWithType: LocalDateTime.PlusWeeks(int)
  fullName: NodaTime.LocalDateTime.PlusWeeks(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of weeks added.
  example: []
  syntax:
    content: public LocalDateTime PlusWeeks(int weeks)
    parameters:
    - id: weeks
      type: System.Int32
      description: The number of weeks to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of weeks.
    content.vb: Public Function PlusWeeks(weeks As Integer) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusWeeks*
  nameWithType.vb: LocalDateTime.PlusWeeks(Integer)
  fullName.vb: NodaTime.LocalDateTime.PlusWeeks(Integer)
  name.vb: PlusWeeks(Integer)
- uid: NodaTime.LocalDateTime.PlusHours(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusHours(System.Int64)
  id: PlusHours(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusHours(long)
  nameWithType: LocalDateTime.PlusHours(long)
  fullName: NodaTime.LocalDateTime.PlusHours(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of hours added.
  example: []
  syntax:
    content: public LocalDateTime PlusHours(long hours)
    parameters:
    - id: hours
      type: System.Int64
      description: The number of hours to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of hours.
    content.vb: Public Function PlusHours(hours As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusHours*
  nameWithType.vb: LocalDateTime.PlusHours(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusHours(Long)
  name.vb: PlusHours(Long)
- uid: NodaTime.LocalDateTime.PlusMinutes(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusMinutes(System.Int64)
  id: PlusMinutes(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusMinutes(long)
  nameWithType: LocalDateTime.PlusMinutes(long)
  fullName: NodaTime.LocalDateTime.PlusMinutes(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of minutes added.
  example: []
  syntax:
    content: public LocalDateTime PlusMinutes(long minutes)
    parameters:
    - id: minutes
      type: System.Int64
      description: The number of minutes to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of minutes.
    content.vb: Public Function PlusMinutes(minutes As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusMinutes*
  nameWithType.vb: LocalDateTime.PlusMinutes(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusMinutes(Long)
  name.vb: PlusMinutes(Long)
- uid: NodaTime.LocalDateTime.PlusSeconds(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusSeconds(System.Int64)
  id: PlusSeconds(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusSeconds(long)
  nameWithType: LocalDateTime.PlusSeconds(long)
  fullName: NodaTime.LocalDateTime.PlusSeconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of seconds added.
  example: []
  syntax:
    content: public LocalDateTime PlusSeconds(long seconds)
    parameters:
    - id: seconds
      type: System.Int64
      description: The number of seconds to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of seconds.
    content.vb: Public Function PlusSeconds(seconds As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusSeconds*
  nameWithType.vb: LocalDateTime.PlusSeconds(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusSeconds(Long)
  name.vb: PlusSeconds(Long)
- uid: NodaTime.LocalDateTime.PlusMilliseconds(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusMilliseconds(System.Int64)
  id: PlusMilliseconds(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusMilliseconds(long)
  nameWithType: LocalDateTime.PlusMilliseconds(long)
  fullName: NodaTime.LocalDateTime.PlusMilliseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of milliseconds added.
  example: []
  syntax:
    content: public LocalDateTime PlusMilliseconds(long milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int64
      description: The number of milliseconds to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of milliseconds.
    content.vb: Public Function PlusMilliseconds(milliseconds As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusMilliseconds*
  nameWithType.vb: LocalDateTime.PlusMilliseconds(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusMilliseconds(Long)
  name.vb: PlusMilliseconds(Long)
- uid: NodaTime.LocalDateTime.PlusTicks(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusTicks(System.Int64)
  id: PlusTicks(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusTicks(long)
  nameWithType: LocalDateTime.PlusTicks(long)
  fullName: NodaTime.LocalDateTime.PlusTicks(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of ticks added.
  example: []
  syntax:
    content: public LocalDateTime PlusTicks(long ticks)
    parameters:
    - id: ticks
      type: System.Int64
      description: The number of ticks to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of ticks.
    content.vb: Public Function PlusTicks(ticks As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusTicks*
  nameWithType.vb: LocalDateTime.PlusTicks(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusTicks(Long)
  name.vb: PlusTicks(Long)
- uid: NodaTime.LocalDateTime.PlusNanoseconds(System.Int64)
  commentId: M:NodaTime.LocalDateTime.PlusNanoseconds(System.Int64)
  id: PlusNanoseconds(System.Int64)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: PlusNanoseconds(long)
  nameWithType: LocalDateTime.PlusNanoseconds(long)
  fullName: NodaTime.LocalDateTime.PlusNanoseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new LocalDateTime representing the current value with the given number of nanoseconds added.
  example: []
  syntax:
    content: public LocalDateTime PlusNanoseconds(long nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Int64
      description: The number of nanoseconds to add
    return:
      type: NodaTime.LocalDateTime
      description: The current value plus the given number of nanoseconds.
    content.vb: Public Function PlusNanoseconds(nanoseconds As Long) As LocalDateTime
  overload: NodaTime.LocalDateTime.PlusNanoseconds*
  nameWithType.vb: LocalDateTime.PlusNanoseconds(Long)
  fullName.vb: NodaTime.LocalDateTime.PlusNanoseconds(Long)
  name.vb: PlusNanoseconds(Long)
- uid: NodaTime.LocalDateTime.Next(NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.LocalDateTime.Next(NodaTime.IsoDayOfWeek)
  id: Next(NodaTime.IsoDayOfWeek)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Next(IsoDayOfWeek)
  nameWithType: LocalDateTime.Next(IsoDayOfWeek)
  fullName: NodaTime.LocalDateTime.Next(NodaTime.IsoDayOfWeek)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the next <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> falling on the specified <xref href="NodaTime.IsoDayOfWeek" data-throw-if-not-resolved="false"></xref>,

    at the same time of day as this value.

    This is a strict "next" - if this value on already falls on the target

    day of the week, the returned value will be a week later.
  example: []
  syntax:
    content: public LocalDateTime Next(IsoDayOfWeek targetDayOfWeek)
    parameters:
    - id: targetDayOfWeek
      type: NodaTime.IsoDayOfWeek
      description: The ISO day of the week to return the next date of.
    return:
      type: NodaTime.LocalDateTime
      description: The next <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> falling on the specified day of the week.
    content.vb: Public Function [Next](targetDayOfWeek As IsoDayOfWeek) As LocalDateTime
  overload: NodaTime.LocalDateTime.Next*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying calendar doesn't use ISO days of the week.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code class="paramref">targetDayOfWeek</code> is not a valid day of the

      week (Monday to Sunday).
- uid: NodaTime.LocalDateTime.Previous(NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.LocalDateTime.Previous(NodaTime.IsoDayOfWeek)
  id: Previous(NodaTime.IsoDayOfWeek)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Previous(IsoDayOfWeek)
  nameWithType: LocalDateTime.Previous(IsoDayOfWeek)
  fullName: NodaTime.LocalDateTime.Previous(NodaTime.IsoDayOfWeek)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the previous <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> falling on the specified <xref href="NodaTime.IsoDayOfWeek" data-throw-if-not-resolved="false"></xref>,

    at the same time of day as this value.

    This is a strict "previous" - if this value on already falls on the target

    day of the week, the returned value will be a week earlier.
  example: []
  syntax:
    content: public LocalDateTime Previous(IsoDayOfWeek targetDayOfWeek)
    parameters:
    - id: targetDayOfWeek
      type: NodaTime.IsoDayOfWeek
      description: The ISO day of the week to return the previous date of.
    return:
      type: NodaTime.LocalDateTime
      description: The previous <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> falling on the specified day of the week.
    content.vb: Public Function Previous(targetDayOfWeek As IsoDayOfWeek) As LocalDateTime
  overload: NodaTime.LocalDateTime.Previous*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying calendar doesn't use ISO days of the week.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code class="paramref">targetDayOfWeek</code> is not a valid day of the

      week (Monday to Sunday).
- uid: NodaTime.LocalDateTime.WithOffset(NodaTime.Offset)
  commentId: M:NodaTime.LocalDateTime.WithOffset(NodaTime.Offset)
  id: WithOffset(NodaTime.Offset)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: WithOffset(Offset)
  nameWithType: LocalDateTime.WithOffset(Offset)
  fullName: NodaTime.LocalDateTime.WithOffset(NodaTime.Offset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns an <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> for this local date/time with the given offset.
  remarks: This method is purely a convenient alternative to calling the <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> constructor directly.
  example: []
  syntax:
    content: public OffsetDateTime WithOffset(Offset offset)
    parameters:
    - id: offset
      type: NodaTime.Offset
      description: The offset to apply.
    return:
      type: NodaTime.OffsetDateTime
      description: The result of this local date/time offset by the given amount.
    content.vb: Public Function WithOffset(offset As Offset) As OffsetDateTime
  overload: NodaTime.LocalDateTime.WithOffset*
- uid: NodaTime.LocalDateTime.InUtc
  commentId: M:NodaTime.LocalDateTime.InUtc
  id: InUtc
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: InUtc()
  nameWithType: LocalDateTime.InUtc()
  fullName: NodaTime.LocalDateTime.InUtc()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the mapping of this local date/time within <xref href="NodaTime.DateTimeZone.Utc" data-throw-if-not-resolved="false"></xref>.
  remarks: As UTC is a fixed time zone, there is no chance that this local date/time is ambiguous or skipped.
  example: []
  syntax:
    content: public ZonedDateTime InUtc()
    return:
      type: NodaTime.ZonedDateTime
      description: The result of mapping this local date/time in UTC.
    content.vb: Public Function InUtc() As ZonedDateTime
  overload: NodaTime.LocalDateTime.InUtc*
- uid: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  commentId: M:NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  id: InZoneStrictly(NodaTime.DateTimeZone)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: InZoneStrictly(DateTimeZone)
  nameWithType: LocalDateTime.InZoneStrictly(DateTimeZone)
  fullName: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the mapping of this local date/time within the given <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref>,

    with "strict" rules applied such that an exception is thrown if either the mapping is

    ambiguous or the time is skipped.
  remarks: >-
    See <xref href="NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone%2cNodaTime.TimeZones.ZoneLocalMappingResolver)" data-throw-if-not-resolved="false"></xref> for alternative ways to map a local time to a

    specific instant.

    This is solely a convenience method for calling <xref href="NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ZonedDateTime InZoneStrictly(DateTimeZone zone)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which to map this local date/time.
    return:
      type: NodaTime.ZonedDateTime
      description: The result of mapping this local date/time in the given time zone.
    content.vb: Public Function InZoneStrictly(zone As DateTimeZone) As ZonedDateTime
  overload: NodaTime.LocalDateTime.InZoneStrictly*
  exceptions:
  - type: NodaTime.SkippedTimeException
    commentId: T:NodaTime.SkippedTimeException
    description: This local date/time is skipped in the given time zone.
  - type: NodaTime.AmbiguousTimeException
    commentId: T:NodaTime.AmbiguousTimeException
    description: This local date/time is ambiguous in the given time zone.
- uid: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  commentId: M:NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  id: InZoneLeniently(NodaTime.DateTimeZone)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: InZoneLeniently(DateTimeZone)
  nameWithType: LocalDateTime.InZoneLeniently(DateTimeZone)
  fullName: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the mapping of this local date/time within the given <xref href="NodaTime.DateTimeZone" data-throw-if-not-resolved="false"></xref>,

    with "lenient" rules applied such that ambiguous values map to the earlier of the alternatives, and

    "skipped" values are shifted forward by the duration of the "gap".
  remarks: >-
    See <xref href="NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone%2cNodaTime.TimeZones.ZoneLocalMappingResolver)" data-throw-if-not-resolved="false"></xref> for alternative ways to map a local time to a

    specific instant.

    This is solely a convenience method for calling <xref href="NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)" data-throw-if-not-resolved="false"></xref>.

    <p>Note: The behavior of this method was changed in version 2.0 to fit the most commonly seen real-world

    usage pattern.  Previous versions returned the later instance of ambiguous values, and returned the start of

    the zone interval after the gap for skipped value.  The previous functionality can still be used if desired,

    by using <xref href="NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone%2cNodaTime.TimeZones.ZoneLocalMappingResolver)" data-throw-if-not-resolved="false"></xref> and passing a resolver that combines the

    <xref href="NodaTime.TimeZones.Resolvers.ReturnLater" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.TimeZones.Resolvers.ReturnStartOfIntervalAfter" data-throw-if-not-resolved="false"></xref> resolvers.</p>
  example: []
  syntax:
    content: public ZonedDateTime InZoneLeniently(DateTimeZone zone)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which to map this local date/time.
    return:
      type: NodaTime.ZonedDateTime
      description: The result of mapping this local date/time in the given time zone.
    content.vb: Public Function InZoneLeniently(zone As DateTimeZone) As ZonedDateTime
  overload: NodaTime.LocalDateTime.InZoneLeniently*
- uid: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  commentId: M:NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  id: InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: InZone(DateTimeZone, ZoneLocalMappingResolver)
  nameWithType: LocalDateTime.InZone(DateTimeZone, ZoneLocalMappingResolver)
  fullName: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone, NodaTime.TimeZones.ZoneLocalMappingResolver)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Resolves this local date and time into a <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> in the given time zone, following

    the given <xref href="NodaTime.TimeZones.ZoneLocalMappingResolver" data-throw-if-not-resolved="false"></xref> to handle ambiguity and skipped times.
  remarks: >-
    See <xref href="NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)" data-throw-if-not-resolved="false"></xref> for alternative ways to map a local time

    to a specific instant.

    This is a convenience method for calling <xref href="NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime%2cNodaTime.TimeZones.ZoneLocalMappingResolver)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ZonedDateTime InZone(DateTimeZone zone, ZoneLocalMappingResolver resolver)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone to map this local date and time into
    - id: resolver
      type: NodaTime.TimeZones.ZoneLocalMappingResolver
      description: The resolver to apply to the mapping.
    return:
      type: NodaTime.ZonedDateTime
      description: The result of resolving the mapping.
    content.vb: Public Function InZone(zone As DateTimeZone, resolver As ZoneLocalMappingResolver) As ZonedDateTime
  overload: NodaTime.LocalDateTime.InZone*
- uid: NodaTime.LocalDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@)
  commentId: M:NodaTime.LocalDateTime.Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@)
  id: Deconstruct(NodaTime.LocalDate@,NodaTime.LocalTime@)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Deconstruct(out LocalDate, out LocalTime)
  nameWithType: LocalDateTime.Deconstruct(out LocalDate, out LocalTime)
  fullName: NodaTime.LocalDateTime.Deconstruct(out NodaTime.LocalDate, out NodaTime.LocalTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Deconstruct this <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> into its components.
  example: []
  syntax:
    content: public void Deconstruct(out LocalDate date, out LocalTime time)
    parameters:
    - id: date
      type: NodaTime.LocalDate
      description: The date portion of the value.
    - id: time
      type: NodaTime.LocalTime
      description: The time portion of the value.
    content.vb: Public Sub Deconstruct([date] As LocalDate, time As LocalTime)
  overload: NodaTime.LocalDateTime.Deconstruct*
  nameWithType.vb: LocalDateTime.Deconstruct(LocalDate, LocalTime)
  fullName.vb: NodaTime.LocalDateTime.Deconstruct(NodaTime.LocalDate, NodaTime.LocalTime)
  name.vb: Deconstruct(LocalDate, LocalTime)
- uid: NodaTime.LocalDateTime.Max(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.Max(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: Max(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Max(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.Max(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.Max(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the later date/time of the given two.
  example: []
  syntax:
    content: public static LocalDateTime Max(LocalDateTime x, LocalDateTime y)
    parameters:
    - id: x
      type: NodaTime.LocalDateTime
      description: The first date/time to compare.
    - id: y
      type: NodaTime.LocalDateTime
      description: The second date/time to compare.
    return:
      type: NodaTime.LocalDateTime
      description: The later date/time of <code class="paramref">x</code> or <code class="paramref">y</code>.
    content.vb: Public Shared Function Max(x As LocalDateTime, y As LocalDateTime) As LocalDateTime
  overload: NodaTime.LocalDateTime.Max*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The two date/times have different calendar systems.
- uid: NodaTime.LocalDateTime.Min(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.Min(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  id: Min(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: Min(LocalDateTime, LocalDateTime)
  nameWithType: LocalDateTime.Min(LocalDateTime, LocalDateTime)
  fullName: NodaTime.LocalDateTime.Min(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the earlier date/time of the given two.
  example: []
  syntax:
    content: public static LocalDateTime Min(LocalDateTime x, LocalDateTime y)
    parameters:
    - id: x
      type: NodaTime.LocalDateTime
      description: The first date/time to compare.
    - id: y
      type: NodaTime.LocalDateTime
      description: The second date/time to compare.
    return:
      type: NodaTime.LocalDateTime
      description: The earlier date/time of <code class="paramref">x</code> or <code class="paramref">y</code>.
    content.vb: Public Shared Function Min(x As LocalDateTime, y As LocalDateTime) As LocalDateTime
  overload: NodaTime.LocalDateTime.Min*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The two date/times have different calendar systems.
- uid: NodaTime.LocalDateTime.ToString
  commentId: M:NodaTime.LocalDateTime.ToString
  id: ToString
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocalDateTime.ToString()
  fullName: NodaTime.LocalDateTime.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        The value of the current instance in the default format pattern ("G"), using the current thread's

        culture to obtain a format provider.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NodaTime.LocalDateTime.ToString*
- uid: NodaTime.LocalDateTime.ToString(System.String,System.IFormatProvider)
  commentId: M:NodaTime.LocalDateTime.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: LocalDateTime.ToString(string?, IFormatProvider?)
  fullName: NodaTime.LocalDateTime.ToString(string?, System.IFormatProvider?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Formats the value of the current instance using the specified pattern.
  example: []
  syntax:
    content: public string ToString(string? patternText, IFormatProvider? formatProvider)
    parameters:
    - id: patternText
      type: System.String
      description: >-
        The <xref href="System.String" data-throw-if-not-resolved="false"></xref> specifying the pattern to use,
            or null to use the default format pattern ("G").
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> to use when formatting the value,
            or null to use the current thread's culture to obtain a format provider.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the value of the current instance in the specified format.
    content.vb: Public Function ToString(patternText As String, formatProvider As IFormatProvider) As String
  overload: NodaTime.LocalDateTime.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: LocalDateTime.ToString(String, IFormatProvider)
  fullName.vb: NodaTime.LocalDateTime.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: NodaTime.LocalDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:NodaTime.LocalDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  id: AddSchema(System.Xml.Schema.XmlSchemaSet)
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: AddSchema(XmlSchemaSet)
  nameWithType: LocalDateTime.AddSchema(XmlSchemaSet)
  fullName: NodaTime.LocalDateTime.AddSchema(System.Xml.Schema.XmlSchemaSet)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Adds the XML schema type describing the structure of the <xref href="NodaTime.LocalDateTime" data-throw-if-not-resolved="false"></xref> XML serialization to the given <code class="paramref">xmlSchemaSet</code>.

    the <code class="paramref">xmlSchemaSet</code>.
  example: []
  syntax:
    content: public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet)
    parameters:
    - id: xmlSchemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The XML schema set provided by <xref href="System.Xml.Serialization.XmlSchemaExporter" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.XmlQualifiedName
      description: The qualified name of the schema type that was added to the <code class="paramref">xmlSchemaSet</code>.
    content.vb: Public Shared Function AddSchema(xmlSchemaSet As XmlSchemaSet) As XmlQualifiedName
  overload: NodaTime.LocalDateTime.AddSchema*
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.GetSchema()
  nameWithType: LocalDateTime.IXmlSerializable.GetSchema()
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: This method is reserved and should not be used. When implementing the <code>IXmlSerializable</code> interface, you should return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (<code>Nothing</code> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <xref href="System.Xml.Serialization.XmlSchemaProviderAttribute" data-throw-if-not-resolved="false"></xref> to the class.
  example: []
  syntax:
    content: XmlSchema IXmlSerializable.GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: An <xref href="System.Xml.Schema.XmlSchema" data-throw-if-not-resolved="false"></xref> that describes the XML representation of the object that is produced by the <xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" data-throw-if-not-resolved="false"></xref> method and consumed by the <xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: ''
  overload: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: LocalDateTime.IXmlSerializable.ReadXml(XmlReader)
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Generates an object from its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the object is deserialized.
    content.vb: ''
  overload: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: NodaTime.LocalDateTime
  langs:
  - csharp
  - vb
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: LocalDateTime.IXmlSerializable.WriteXml(XmlWriter)
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts an object into its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the object is serialized.
    content.vb: ''
  overload: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  commentId: M:NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_CompareTo_NodaTime_LocalDateTime_
  name: CompareTo(LocalDateTime)
  nameWithType: LocalDateTime.CompareTo(LocalDateTime)
  fullName: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
    name: CompareTo
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_CompareTo_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.CompareTo(NodaTime.LocalDateTime)
    name: CompareTo
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_CompareTo_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.IEquatable{NodaTime.LocalDateTime}
  commentId: T:System.IEquatable{NodaTime.LocalDateTime}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<LocalDateTime>
  nameWithType: IEquatable<LocalDateTime>
  fullName: System.IEquatable<NodaTime.LocalDateTime>
  nameWithType.vb: IEquatable(Of LocalDateTime)
  fullName.vb: System.IEquatable(Of NodaTime.LocalDateTime)
  name.vb: IEquatable(Of LocalDateTime)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.IComparable{NodaTime.LocalDateTime}
  commentId: T:System.IComparable{NodaTime.LocalDateTime}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<LocalDateTime>
  nameWithType: IComparable<LocalDateTime>
  fullName: System.IComparable<NodaTime.LocalDateTime>
  nameWithType.vb: IComparable(Of LocalDateTime)
  fullName.vb: System.IComparable(Of NodaTime.LocalDateTime)
  name.vb: IComparable(Of LocalDateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  commentId: T:System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  parent: System.Numerics
  definition: System.Numerics.IAdditionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<LocalDateTime, Period, LocalDateTime>
  nameWithType: IAdditionOperators<LocalDateTime, Period, LocalDateTime>
  fullName: System.Numerics.IAdditionOperators<NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime>
  nameWithType.vb: IAdditionOperators(Of LocalDateTime, Period, LocalDateTime)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime)
  name.vb: IAdditionOperators(Of LocalDateTime, Period, LocalDateTime)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}
  commentId: T:System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}
  parent: System.Numerics
  definition: System.Numerics.ISubtractionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<LocalDateTime, LocalDateTime, Period>
  nameWithType: ISubtractionOperators<LocalDateTime, LocalDateTime, Period>
  fullName: System.Numerics.ISubtractionOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, NodaTime.Period>
  nameWithType.vb: ISubtractionOperators(Of LocalDateTime, LocalDateTime, Period)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, NodaTime.Period)
  name.vb: ISubtractionOperators(Of LocalDateTime, LocalDateTime, Period)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  commentId: T:System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  parent: System.Numerics
  definition: System.Numerics.ISubtractionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<LocalDateTime, Period, LocalDateTime>
  nameWithType: ISubtractionOperators<LocalDateTime, Period, LocalDateTime>
  fullName: System.Numerics.ISubtractionOperators<NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime>
  nameWithType.vb: ISubtractionOperators(Of LocalDateTime, Period, LocalDateTime)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime)
  name.vb: ISubtractionOperators(Of LocalDateTime, Period, LocalDateTime)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  commentId: T:System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IComparisonOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<LocalDateTime, LocalDateTime, bool>
  nameWithType: IComparisonOperators<LocalDateTime, LocalDateTime, bool>
  fullName: System.Numerics.IComparisonOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>
  nameWithType.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean)
  name.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  commentId: T:System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IEqualityOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<LocalDateTime, LocalDateTime, bool>
  nameWithType: IEqualityOperators<LocalDateTime, LocalDateTime, bool>
  fullName: System.Numerics.IEqualityOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>
  nameWithType.vb: IEqualityOperators(Of LocalDateTime, LocalDateTime, Boolean)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean)
  name.vb: IEqualityOperators(Of LocalDateTime, LocalDateTime, Boolean)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
- uid: System.Numerics.IAdditionOperators`3
  commentId: T:System.Numerics.IAdditionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<TSelf, TOther, TResult>
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult)
  name.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Numerics.ISubtractionOperators`3
  commentId: T:System.Numerics.ISubtractionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult)
  name.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IComparisonOperators`3
  commentId: T:System.Numerics.IComparisonOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<TSelf, TOther, TResult>
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult)
  name.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IEqualityOperators`3
  commentId: T:System.Numerics.IEqualityOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<TSelf, TOther, TResult>
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult)
  name.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.LocalDate.MaxIsoValue
  commentId: P:NodaTime.LocalDate.MaxIsoValue
  href: NodaTime.LocalDate.html#NodaTime_LocalDate_MaxIsoValue
  name: MaxIsoValue
  nameWithType: LocalDate.MaxIsoValue
  fullName: NodaTime.LocalDate.MaxIsoValue
- uid: NodaTime.LocalDateTime.MaxIsoValue*
  commentId: Overload:NodaTime.LocalDateTime.MaxIsoValue
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_MaxIsoValue
  name: MaxIsoValue
  nameWithType: LocalDateTime.MaxIsoValue
  fullName: NodaTime.LocalDateTime.MaxIsoValue
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  href: NodaTime.LocalDateTime.html
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.LocalDate.MinIsoValue
  commentId: P:NodaTime.LocalDate.MinIsoValue
  href: NodaTime.LocalDate.html#NodaTime_LocalDate_MinIsoValue
  name: MinIsoValue
  nameWithType: LocalDate.MinIsoValue
  fullName: NodaTime.LocalDate.MinIsoValue
- uid: NodaTime.LocalDateTime.MinIsoValue*
  commentId: Overload:NodaTime.LocalDateTime.MinIsoValue
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_MinIsoValue
  name: MinIsoValue
  nameWithType: LocalDateTime.MinIsoValue
  fullName: NodaTime.LocalDateTime.MinIsoValue
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime.LocalDateTime.#ctor*
  commentId: Overload:NodaTime.LocalDateTime.#ctor
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: LocalDateTime
  nameWithType: LocalDateTime.LocalDateTime
  fullName: NodaTime.LocalDateTime.LocalDateTime
  nameWithType.vb: LocalDateTime.New
  fullName.vb: NodaTime.LocalDateTime.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  href: NodaTime.CalendarSystem.html
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.LocalDateTime.Calendar*
  commentId: Overload:NodaTime.LocalDateTime.Calendar
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Calendar
  name: Calendar
  nameWithType: LocalDateTime.Calendar
  fullName: NodaTime.LocalDateTime.Calendar
- uid: NodaTime.LocalDateTime.Year*
  commentId: Overload:NodaTime.LocalDateTime.Year
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Year
  name: Year
  nameWithType: LocalDateTime.Year
  fullName: NodaTime.LocalDateTime.Year
- uid: NodaTime.LocalDateTime.YearOfEra*
  commentId: Overload:NodaTime.LocalDateTime.YearOfEra
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_YearOfEra
  name: YearOfEra
  nameWithType: LocalDateTime.YearOfEra
  fullName: NodaTime.LocalDateTime.YearOfEra
- uid: NodaTime.LocalDateTime.Era*
  commentId: Overload:NodaTime.LocalDateTime.Era
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Era
  name: Era
  nameWithType: LocalDateTime.Era
  fullName: NodaTime.LocalDateTime.Era
- uid: NodaTime.Calendars.Era
  commentId: T:NodaTime.Calendars.Era
  parent: NodaTime.Calendars
  href: NodaTime.Calendars.Era.html
  name: Era
  nameWithType: Era
  fullName: NodaTime.Calendars.Era
- uid: NodaTime.Calendars
  commentId: N:NodaTime.Calendars
  href: NodaTime.html
  name: NodaTime.Calendars
  nameWithType: NodaTime.Calendars
  fullName: NodaTime.Calendars
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
- uid: NodaTime.LocalDateTime.Month*
  commentId: Overload:NodaTime.LocalDateTime.Month
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Month
  name: Month
  nameWithType: LocalDateTime.Month
  fullName: NodaTime.LocalDateTime.Month
- uid: NodaTime.LocalDateTime.DayOfYear*
  commentId: Overload:NodaTime.LocalDateTime.DayOfYear
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_DayOfYear
  name: DayOfYear
  nameWithType: LocalDateTime.DayOfYear
  fullName: NodaTime.LocalDateTime.DayOfYear
- uid: NodaTime.LocalDateTime.Day*
  commentId: Overload:NodaTime.LocalDateTime.Day
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Day
  name: Day
  nameWithType: LocalDateTime.Day
  fullName: NodaTime.LocalDateTime.Day
- uid: NodaTime.IsoDayOfWeek
  commentId: T:NodaTime.IsoDayOfWeek
  parent: NodaTime
  href: NodaTime.IsoDayOfWeek.html
  name: IsoDayOfWeek
  nameWithType: IsoDayOfWeek
  fullName: NodaTime.IsoDayOfWeek
- uid: NodaTime.LocalDateTime.DayOfWeek*
  commentId: Overload:NodaTime.LocalDateTime.DayOfWeek
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_DayOfWeek
  name: DayOfWeek
  nameWithType: LocalDateTime.DayOfWeek
  fullName: NodaTime.LocalDateTime.DayOfWeek
- uid: NodaTime.LocalDateTime.Hour*
  commentId: Overload:NodaTime.LocalDateTime.Hour
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Hour
  name: Hour
  nameWithType: LocalDateTime.Hour
  fullName: NodaTime.LocalDateTime.Hour
- uid: NodaTime.LocalDateTime.ClockHourOfHalfDay*
  commentId: Overload:NodaTime.LocalDateTime.ClockHourOfHalfDay
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_ClockHourOfHalfDay
  name: ClockHourOfHalfDay
  nameWithType: LocalDateTime.ClockHourOfHalfDay
  fullName: NodaTime.LocalDateTime.ClockHourOfHalfDay
- uid: NodaTime.LocalDateTime.Minute*
  commentId: Overload:NodaTime.LocalDateTime.Minute
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Minute
  name: Minute
  nameWithType: LocalDateTime.Minute
  fullName: NodaTime.LocalDateTime.Minute
- uid: NodaTime.LocalDateTime.Second*
  commentId: Overload:NodaTime.LocalDateTime.Second
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Second
  name: Second
  nameWithType: LocalDateTime.Second
  fullName: NodaTime.LocalDateTime.Second
- uid: NodaTime.LocalDateTime.Millisecond*
  commentId: Overload:NodaTime.LocalDateTime.Millisecond
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Millisecond
  name: Millisecond
  nameWithType: LocalDateTime.Millisecond
  fullName: NodaTime.LocalDateTime.Millisecond
- uid: NodaTime.LocalDateTime.TickOfSecond*
  commentId: Overload:NodaTime.LocalDateTime.TickOfSecond
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_TickOfSecond
  name: TickOfSecond
  nameWithType: LocalDateTime.TickOfSecond
  fullName: NodaTime.LocalDateTime.TickOfSecond
- uid: NodaTime.LocalDateTime.TickOfDay*
  commentId: Overload:NodaTime.LocalDateTime.TickOfDay
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_TickOfDay
  name: TickOfDay
  nameWithType: LocalDateTime.TickOfDay
  fullName: NodaTime.LocalDateTime.TickOfDay
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NodaTime.LocalDateTime.NanosecondOfSecond*
  commentId: Overload:NodaTime.LocalDateTime.NanosecondOfSecond
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_NanosecondOfSecond
  name: NanosecondOfSecond
  nameWithType: LocalDateTime.NanosecondOfSecond
  fullName: NodaTime.LocalDateTime.NanosecondOfSecond
- uid: NodaTime.LocalDateTime.NanosecondOfDay*
  commentId: Overload:NodaTime.LocalDateTime.NanosecondOfDay
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_NanosecondOfDay
  name: NanosecondOfDay
  nameWithType: LocalDateTime.NanosecondOfDay
  fullName: NodaTime.LocalDateTime.NanosecondOfDay
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  href: NodaTime.LocalTime.html
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
- uid: NodaTime.LocalDateTime.TimeOfDay*
  commentId: Overload:NodaTime.LocalDateTime.TimeOfDay
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_TimeOfDay
  name: TimeOfDay
  nameWithType: LocalDateTime.TimeOfDay
  fullName: NodaTime.LocalDateTime.TimeOfDay
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  href: NodaTime.LocalDate.html
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.LocalDateTime.Date*
  commentId: Overload:NodaTime.LocalDateTime.Date
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Date
  name: Date
  nameWithType: LocalDateTime.Date
  fullName: NodaTime.LocalDateTime.Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.DateTime.Kind
  commentId: P:System.DateTime.Kind
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.kind
  name: Kind
  nameWithType: DateTime.Kind
  fullName: System.DateTime.Kind
  nameWithType.vb: Date.Kind
  fullName.vb: Date.Kind
- uid: System.DateTimeKind.Unspecified
  commentId: F:System.DateTimeKind.Unspecified
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimekind#system-datetimekind-unspecified
  name: Unspecified
  nameWithType: DateTimeKind.Unspecified
  fullName: System.DateTimeKind.Unspecified
- uid: System.DateTime.ToLocalTime
  commentId: M:System.DateTime.ToLocalTime
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.tolocaltime
  name: ToLocalTime()
  nameWithType: DateTime.ToLocalTime()
  fullName: System.DateTime.ToLocalTime()
  nameWithType.vb: Date.ToLocalTime()
  fullName.vb: Date.ToLocalTime()
  spec.csharp:
  - uid: System.DateTime.ToLocalTime
    name: ToLocalTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.tolocaltime
  - name: (
  - name: )
  spec.vb:
  - uid: System.DateTime.ToLocalTime
    name: ToLocalTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.tolocaltime
  - name: (
  - name: )
- uid: System.DateTime.ToUniversalTime
  commentId: M:System.DateTime.ToUniversalTime
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.touniversaltime
  name: ToUniversalTime()
  nameWithType: DateTime.ToUniversalTime()
  fullName: System.DateTime.ToUniversalTime()
  nameWithType.vb: Date.ToUniversalTime()
  fullName.vb: Date.ToUniversalTime()
  spec.csharp:
  - uid: System.DateTime.ToUniversalTime
    name: ToUniversalTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.touniversaltime
  - name: (
  - name: )
  spec.vb:
  - uid: System.DateTime.ToUniversalTime
    name: ToUniversalTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime.touniversaltime
  - name: (
  - name: )
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: NodaTime.LocalDateTime.ToDateTimeUnspecified*
  commentId: Overload:NodaTime.LocalDateTime.ToDateTimeUnspecified
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_ToDateTimeUnspecified
  name: ToDateTimeUnspecified
  nameWithType: LocalDateTime.ToDateTimeUnspecified
  fullName: NodaTime.LocalDateTime.ToDateTimeUnspecified
- uid: System.DateTimeKind.Utc
  commentId: F:System.DateTimeKind.Utc
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimekind#system-datetimekind-utc
  name: Utc
  nameWithType: DateTimeKind.Utc
  fullName: System.DateTimeKind.Utc
- uid: NodaTime.LocalDateTime.FromDateTime*
  commentId: Overload:NodaTime.LocalDateTime.FromDateTime
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_FromDateTime_System_DateTime_
  name: FromDateTime
  nameWithType: LocalDateTime.FromDateTime
  fullName: NodaTime.LocalDateTime.FromDateTime
- uid: NodaTime.LocalDateTime.Equals*
  commentId: Overload:NodaTime.LocalDateTime.Equals
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Equals_NodaTime_LocalDateTime_
  name: Equals
  nameWithType: LocalDateTime.Equals
  fullName: NodaTime.LocalDateTime.Equals
- uid: System.IEquatable{NodaTime.LocalDateTime}.Equals(NodaTime.LocalDateTime)
  commentId: M:System.IEquatable{NodaTime.LocalDateTime}.Equals(NodaTime.LocalDateTime)
  parent: System.IEquatable{NodaTime.LocalDateTime}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(LocalDateTime)
  nameWithType: IEquatable<LocalDateTime>.Equals(LocalDateTime)
  fullName: System.IEquatable<NodaTime.LocalDateTime>.Equals(NodaTime.LocalDateTime)
  nameWithType.vb: IEquatable(Of LocalDateTime).Equals(LocalDateTime)
  fullName.vb: System.IEquatable(Of NodaTime.LocalDateTime).Equals(NodaTime.LocalDateTime)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.LocalDateTime}.Equals(NodaTime.LocalDateTime)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.LocalDateTime}.Equals(NodaTime.LocalDateTime)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NodaTime.LocalDateTime.op_Equality*
  commentId: Overload:NodaTime.LocalDateTime.op_Equality
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Equality_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator ==
  nameWithType: LocalDateTime.operator ==
  fullName: NodaTime.LocalDateTime.operator ==
  nameWithType.vb: LocalDateTime.=
  fullName.vb: NodaTime.LocalDateTime.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_Equality*
    name: ==
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Equality_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(LocalDateTime, LocalDateTime)
  nameWithType: IEqualityOperators<LocalDateTime, LocalDateTime, bool>.operator ==(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IEqualityOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator ==(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IEqualityOperators(Of LocalDateTime, LocalDateTime, Boolean).=(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: =(LocalDateTime, LocalDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Equality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: =
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  name.vb: =(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: =
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.op_Inequality*
  commentId: Overload:NodaTime.LocalDateTime.op_Inequality
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Inequality_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator !=
  nameWithType: LocalDateTime.operator !=
  fullName: NodaTime.LocalDateTime.operator !=
  nameWithType.vb: LocalDateTime.<>
  fullName.vb: NodaTime.LocalDateTime.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_Inequality*
    name: '!='
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Inequality_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(LocalDateTime, LocalDateTime)
  nameWithType: IEqualityOperators<LocalDateTime, LocalDateTime, bool>.operator !=(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IEqualityOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator !=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IEqualityOperators(Of LocalDateTime, LocalDateTime, Boolean).<>(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).<>(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <>(LocalDateTime, LocalDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_Inequality(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  name.vb: <>(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.op_LessThan*
  commentId: Overload:NodaTime.LocalDateTime.op_LessThan
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_LessThan_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator <
  nameWithType: LocalDateTime.operator <
  fullName: NodaTime.LocalDateTime.operator <
  nameWithType.vb: LocalDateTime.<
  fullName.vb: NodaTime.LocalDateTime.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_LessThan*
    name: <
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_LessThan_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(LocalDateTime, LocalDateTime)
  nameWithType: IComparisonOperators<LocalDateTime, LocalDateTime, bool>.operator <(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IComparisonOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator <(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean).<(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).<(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <(LocalDateTime, LocalDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: <
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  name.vb: <(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.op_LessThanOrEqual*
  commentId: Overload:NodaTime.LocalDateTime.op_LessThanOrEqual
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_LessThanOrEqual_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator <=
  nameWithType: LocalDateTime.operator <=
  fullName: NodaTime.LocalDateTime.operator <=
  nameWithType.vb: LocalDateTime.<=
  fullName.vb: NodaTime.LocalDateTime.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_LessThanOrEqual*
    name: <=
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_LessThanOrEqual_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(LocalDateTime, LocalDateTime)
  nameWithType: IComparisonOperators<LocalDateTime, LocalDateTime, bool>.operator <=(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IComparisonOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator <=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean).<=(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).<=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: <=(LocalDateTime, LocalDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_LessThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  name.vb: <=(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.op_GreaterThan*
  commentId: Overload:NodaTime.LocalDateTime.op_GreaterThan
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_GreaterThan_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator >
  nameWithType: LocalDateTime.operator >
  fullName: NodaTime.LocalDateTime.operator >
  nameWithType.vb: LocalDateTime.>
  fullName.vb: NodaTime.LocalDateTime.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_GreaterThan*
    name: '>'
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_GreaterThan_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(LocalDateTime, LocalDateTime)
  nameWithType: IComparisonOperators<LocalDateTime, LocalDateTime, bool>.operator >(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IComparisonOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator >(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean).>(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).>(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: '>(LocalDateTime, LocalDateTime)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThan(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  name.vb: '>(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.op_GreaterThanOrEqual*
  commentId: Overload:NodaTime.LocalDateTime.op_GreaterThanOrEqual
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_GreaterThanOrEqual_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: operator >=
  nameWithType: LocalDateTime.operator >=
  fullName: NodaTime.LocalDateTime.operator >=
  nameWithType.vb: LocalDateTime.>=
  fullName.vb: NodaTime.LocalDateTime.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_GreaterThanOrEqual*
    name: '>='
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_GreaterThanOrEqual_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
- uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(LocalDateTime, LocalDateTime)
  nameWithType: IComparisonOperators<LocalDateTime, LocalDateTime, bool>.operator >=(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.IComparisonOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, bool>.operator >=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: IComparisonOperators(Of LocalDateTime, LocalDateTime, Boolean).>=(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, Boolean).>=(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: '>=(LocalDateTime, LocalDateTime)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,System.Boolean}.op_GreaterThanOrEqual(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  name.vb: '>=(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.CompareTo*
  commentId: Overload:NodaTime.LocalDateTime.CompareTo
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_CompareTo_NodaTime_LocalDateTime_
  name: CompareTo
  nameWithType: LocalDateTime.CompareTo
  fullName: NodaTime.LocalDateTime.CompareTo
- uid: System.IComparable{NodaTime.LocalDateTime}.CompareTo(NodaTime.LocalDateTime)
  commentId: M:System.IComparable{NodaTime.LocalDateTime}.CompareTo(NodaTime.LocalDateTime)
  parent: System.IComparable{NodaTime.LocalDateTime}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(LocalDateTime)
  nameWithType: IComparable<LocalDateTime>.CompareTo(LocalDateTime)
  fullName: System.IComparable<NodaTime.LocalDateTime>.CompareTo(NodaTime.LocalDateTime)
  nameWithType.vb: IComparable(Of LocalDateTime).CompareTo(LocalDateTime)
  fullName.vb: System.IComparable(Of NodaTime.LocalDateTime).CompareTo(NodaTime.LocalDateTime)
  spec.csharp:
  - uid: System.IComparable{NodaTime.LocalDateTime}.CompareTo(NodaTime.LocalDateTime)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: System.IComparable{NodaTime.LocalDateTime}.CompareTo(NodaTime.LocalDateTime)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.LocalDateTime.System#IComparable#CompareTo*
  commentId: Overload:NodaTime.LocalDateTime.System#IComparable#CompareTo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable.CompareTo
  nameWithType: LocalDateTime.IComparable.CompareTo
  fullName: NodaTime.LocalDateTime.System.IComparable.CompareTo
  spec.csharp:
  - uid: System.IComparable*
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable
  - name: .
  - uid: NodaTime.LocalDateTime.System#IComparable#CompareTo*
    name: CompareTo
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_System_IComparable_CompareTo_System_Object_
- uid: NodaTime.LocalDateTime.Plus(NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Plus(NodaTime.Period)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Plus_NodaTime_Period_
  name: Plus(Period)
  nameWithType: LocalDateTime.Plus(Period)
  fullName: NodaTime.LocalDateTime.Plus(NodaTime.Period)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.Plus(NodaTime.Period)
    name: Plus
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Plus_NodaTime_Period_
  - name: (
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.Plus(NodaTime.Period)
    name: Plus
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Plus_NodaTime_Period_
  - name: (
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
- uid: NodaTime.LocalDateTime.op_Addition*
  commentId: Overload:NodaTime.LocalDateTime.op_Addition
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Addition_NodaTime_LocalDateTime_NodaTime_Period_
  name: operator +
  nameWithType: LocalDateTime.operator +
  fullName: NodaTime.LocalDateTime.operator +
  nameWithType.vb: LocalDateTime.+
  fullName.vb: NodaTime.LocalDateTime.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_Addition*
    name: +
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Addition_NodaTime_LocalDateTime_NodaTime_Period_
- uid: System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
  parent: System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  definition: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(LocalDateTime, Period)
  nameWithType: IAdditionOperators<LocalDateTime, Period, LocalDateTime>.operator +(LocalDateTime, Period)
  fullName: System.Numerics.IAdditionOperators<NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime>.operator +(NodaTime.LocalDateTime, NodaTime.Period)
  nameWithType.vb: IAdditionOperators(Of LocalDateTime, Period, LocalDateTime).+(LocalDateTime, Period)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime).+(NodaTime.LocalDateTime, NodaTime.Period)
  name.vb: +(LocalDateTime, Period)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Addition(NodaTime.LocalDateTime,NodaTime.Period)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
  spec.vb:
  - name: +
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
- uid: NodaTime.Period
  commentId: T:NodaTime.Period
  parent: NodaTime
  href: NodaTime.Period.html
  name: Period
  nameWithType: Period
  fullName: NodaTime.Period
- uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  commentId: M:System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(TSelf, TOther)
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  name.vb: +(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: +
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.Add*
  commentId: Overload:NodaTime.LocalDateTime.Add
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Add_NodaTime_LocalDateTime_NodaTime_Period_
  name: Add
  nameWithType: LocalDateTime.Add
  fullName: NodaTime.LocalDateTime.Add
- uid: NodaTime.LocalDateTime.Plus*
  commentId: Overload:NodaTime.LocalDateTime.Plus
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Plus_NodaTime_Period_
  name: Plus
  nameWithType: LocalDateTime.Plus
  fullName: NodaTime.LocalDateTime.Plus
- uid: NodaTime.LocalDateTime.Minus(NodaTime.Period)
  commentId: M:NodaTime.LocalDateTime.Minus(NodaTime.Period)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Minus_NodaTime_Period_
  name: Minus(Period)
  nameWithType: LocalDateTime.Minus(Period)
  fullName: NodaTime.LocalDateTime.Minus(NodaTime.Period)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.Minus(NodaTime.Period)
    name: Minus
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Minus_NodaTime_Period_
  - name: (
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.Minus(NodaTime.Period)
    name: Minus
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Minus_NodaTime_Period_
  - name: (
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
- uid: NodaTime.LocalDateTime.op_Subtraction*
  commentId: Overload:NodaTime.LocalDateTime.op_Subtraction
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Subtraction_NodaTime_LocalDateTime_NodaTime_Period_
  name: operator -
  nameWithType: LocalDateTime.operator -
  fullName: NodaTime.LocalDateTime.operator -
  nameWithType.vb: LocalDateTime.-
  fullName.vb: NodaTime.LocalDateTime.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.LocalDateTime.op_Subtraction*
    name: '-'
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_op_Subtraction_NodaTime_LocalDateTime_NodaTime_Period_
- uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  commentId: M:System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
  parent: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}
  definition: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(LocalDateTime, Period)
  nameWithType: ISubtractionOperators<LocalDateTime, Period, LocalDateTime>.operator -(LocalDateTime, Period)
  fullName: System.Numerics.ISubtractionOperators<NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime>.operator -(NodaTime.LocalDateTime, NodaTime.Period)
  nameWithType.vb: ISubtractionOperators(Of LocalDateTime, Period, LocalDateTime).-(LocalDateTime, Period)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.LocalDateTime, NodaTime.Period, NodaTime.LocalDateTime).-(NodaTime.LocalDateTime, NodaTime.Period)
  name.vb: -(LocalDateTime, Period)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.Period,NodaTime.LocalDateTime}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.Period)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.Period
    name: Period
    href: NodaTime.Period.html
  - name: )
- uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  commentId: M:System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(TSelf, TOther)
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  name.vb: -(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.LocalDateTime.Subtract*
  commentId: Overload:NodaTime.LocalDateTime.Subtract
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Subtract_NodaTime_LocalDateTime_NodaTime_Period_
  name: Subtract
  nameWithType: LocalDateTime.Subtract
  fullName: NodaTime.LocalDateTime.Subtract
- uid: NodaTime.LocalDateTime.Minus*
  commentId: Overload:NodaTime.LocalDateTime.Minus
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Minus_NodaTime_Period_
  name: Minus
  nameWithType: LocalDateTime.Minus
  fullName: NodaTime.LocalDateTime.Minus
- uid: NodaTime.Period.Between(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:NodaTime.Period.Between(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  href: NodaTime.Period.html#NodaTime_Period_Between_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: Between(LocalDateTime, LocalDateTime)
  nameWithType: Period.Between(LocalDateTime, LocalDateTime)
  fullName: NodaTime.Period.Between(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  spec.csharp:
  - uid: NodaTime.Period.Between(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: Between
    href: NodaTime.Period.html#NodaTime_Period_Between_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: NodaTime.Period.Between(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: Between
    href: NodaTime.Period.html#NodaTime_Period_Between_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  commentId: M:System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
  parent: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}
  definition: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(LocalDateTime, LocalDateTime)
  nameWithType: ISubtractionOperators<LocalDateTime, LocalDateTime, Period>.operator -(LocalDateTime, LocalDateTime)
  fullName: System.Numerics.ISubtractionOperators<NodaTime.LocalDateTime, NodaTime.LocalDateTime, NodaTime.Period>.operator -(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  nameWithType.vb: ISubtractionOperators(Of LocalDateTime, LocalDateTime, Period).-(LocalDateTime, LocalDateTime)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.LocalDateTime, NodaTime.LocalDateTime, NodaTime.Period).-(NodaTime.LocalDateTime, NodaTime.LocalDateTime)
  name.vb: -(LocalDateTime, LocalDateTime)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators{NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period}.op_Subtraction(NodaTime.LocalDateTime,NodaTime.LocalDateTime)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NodaTime.LocalDateTime.GetHashCode*
  commentId: Overload:NodaTime.LocalDateTime.GetHashCode
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_GetHashCode
  name: GetHashCode
  nameWithType: LocalDateTime.GetHashCode
  fullName: NodaTime.LocalDateTime.GetHashCode
- uid: NodaTime.LocalDateTime.With*
  commentId: Overload:NodaTime.LocalDateTime.With
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_With_System_Func_NodaTime_LocalDate_NodaTime_LocalDate__
  name: With
  nameWithType: LocalDateTime.With
  fullName: NodaTime.LocalDateTime.With
- uid: System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
  commentId: T:System.Func{NodaTime.LocalDate,NodaTime.LocalDate}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<LocalDate, LocalDate>
  nameWithType: Func<LocalDate, LocalDate>
  fullName: System.Func<NodaTime.LocalDate, NodaTime.LocalDate>
  nameWithType.vb: Func(Of LocalDate, LocalDate)
  fullName.vb: System.Func(Of NodaTime.LocalDate, NodaTime.LocalDate)
  name.vb: Func(Of LocalDate, LocalDate)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalDate
    name: LocalDate
    href: NodaTime.LocalDate.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  commentId: T:System.Func{NodaTime.LocalTime,NodaTime.LocalTime}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<LocalTime, LocalTime>
  nameWithType: Func<LocalTime, LocalTime>
  fullName: System.Func<NodaTime.LocalTime, NodaTime.LocalTime>
  nameWithType.vb: Func(Of LocalTime, LocalTime)
  fullName.vb: System.Func(Of NodaTime.LocalTime, NodaTime.LocalTime)
  name.vb: Func(Of LocalTime, LocalTime)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
- uid: NodaTime.LocalDateTime.WithCalendar*
  commentId: Overload:NodaTime.LocalDateTime.WithCalendar
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_WithCalendar_NodaTime_CalendarSystem_
  name: WithCalendar
  nameWithType: LocalDateTime.WithCalendar
  fullName: NodaTime.LocalDateTime.WithCalendar
- uid: NodaTime.LocalDateTime.PlusYears*
  commentId: Overload:NodaTime.LocalDateTime.PlusYears
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusYears_System_Int32_
  name: PlusYears
  nameWithType: LocalDateTime.PlusYears
  fullName: NodaTime.LocalDateTime.PlusYears
- uid: NodaTime.LocalDateTime.PlusMonths*
  commentId: Overload:NodaTime.LocalDateTime.PlusMonths
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusMonths_System_Int32_
  name: PlusMonths
  nameWithType: LocalDateTime.PlusMonths
  fullName: NodaTime.LocalDateTime.PlusMonths
- uid: NodaTime.LocalDateTime.PlusDays*
  commentId: Overload:NodaTime.LocalDateTime.PlusDays
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusDays_System_Int32_
  name: PlusDays
  nameWithType: LocalDateTime.PlusDays
  fullName: NodaTime.LocalDateTime.PlusDays
- uid: NodaTime.LocalDateTime.PlusWeeks*
  commentId: Overload:NodaTime.LocalDateTime.PlusWeeks
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusWeeks_System_Int32_
  name: PlusWeeks
  nameWithType: LocalDateTime.PlusWeeks
  fullName: NodaTime.LocalDateTime.PlusWeeks
- uid: NodaTime.LocalDateTime.PlusHours*
  commentId: Overload:NodaTime.LocalDateTime.PlusHours
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusHours_System_Int64_
  name: PlusHours
  nameWithType: LocalDateTime.PlusHours
  fullName: NodaTime.LocalDateTime.PlusHours
- uid: NodaTime.LocalDateTime.PlusMinutes*
  commentId: Overload:NodaTime.LocalDateTime.PlusMinutes
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusMinutes_System_Int64_
  name: PlusMinutes
  nameWithType: LocalDateTime.PlusMinutes
  fullName: NodaTime.LocalDateTime.PlusMinutes
- uid: NodaTime.LocalDateTime.PlusSeconds*
  commentId: Overload:NodaTime.LocalDateTime.PlusSeconds
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusSeconds_System_Int64_
  name: PlusSeconds
  nameWithType: LocalDateTime.PlusSeconds
  fullName: NodaTime.LocalDateTime.PlusSeconds
- uid: NodaTime.LocalDateTime.PlusMilliseconds*
  commentId: Overload:NodaTime.LocalDateTime.PlusMilliseconds
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusMilliseconds_System_Int64_
  name: PlusMilliseconds
  nameWithType: LocalDateTime.PlusMilliseconds
  fullName: NodaTime.LocalDateTime.PlusMilliseconds
- uid: NodaTime.LocalDateTime.PlusTicks*
  commentId: Overload:NodaTime.LocalDateTime.PlusTicks
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusTicks_System_Int64_
  name: PlusTicks
  nameWithType: LocalDateTime.PlusTicks
  fullName: NodaTime.LocalDateTime.PlusTicks
- uid: NodaTime.LocalDateTime.PlusNanoseconds*
  commentId: Overload:NodaTime.LocalDateTime.PlusNanoseconds
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_PlusNanoseconds_System_Int64_
  name: PlusNanoseconds
  nameWithType: LocalDateTime.PlusNanoseconds
  fullName: NodaTime.LocalDateTime.PlusNanoseconds
- uid: NodaTime.LocalDateTime.Next*
  commentId: Overload:NodaTime.LocalDateTime.Next
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Next_NodaTime_IsoDayOfWeek_
  name: Next
  nameWithType: LocalDateTime.Next
  fullName: NodaTime.LocalDateTime.Next
- uid: NodaTime.LocalDateTime.Previous*
  commentId: Overload:NodaTime.LocalDateTime.Previous
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Previous_NodaTime_IsoDayOfWeek_
  name: Previous
  nameWithType: LocalDateTime.Previous
  fullName: NodaTime.LocalDateTime.Previous
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  parent: NodaTime
  href: NodaTime.OffsetDateTime.html
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
- uid: NodaTime.LocalDateTime.WithOffset*
  commentId: Overload:NodaTime.LocalDateTime.WithOffset
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_WithOffset_NodaTime_Offset_
  name: WithOffset
  nameWithType: LocalDateTime.WithOffset
  fullName: NodaTime.LocalDateTime.WithOffset
- uid: NodaTime.Offset
  commentId: T:NodaTime.Offset
  parent: NodaTime
  href: NodaTime.Offset.html
  name: Offset
  nameWithType: Offset
  fullName: NodaTime.Offset
- uid: NodaTime.DateTimeZone.Utc
  commentId: P:NodaTime.DateTimeZone.Utc
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_Utc
  name: Utc
  nameWithType: DateTimeZone.Utc
  fullName: NodaTime.DateTimeZone.Utc
- uid: NodaTime.LocalDateTime.InUtc*
  commentId: Overload:NodaTime.LocalDateTime.InUtc
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InUtc
  name: InUtc
  nameWithType: LocalDateTime.InUtc
  fullName: NodaTime.LocalDateTime.InUtc
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  href: NodaTime.ZonedDateTime.html
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  commentId: M:NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneLeniently_NodaTime_DateTimeZone_
  name: InZoneLeniently(DateTimeZone)
  nameWithType: LocalDateTime.InZoneLeniently(DateTimeZone)
  fullName: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
    name: InZoneLeniently
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneLeniently_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.InZoneLeniently(NodaTime.DateTimeZone)
    name: InZoneLeniently
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneLeniently_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
- uid: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  commentId: M:NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZone_NodaTime_DateTimeZone_NodaTime_TimeZones_ZoneLocalMappingResolver_
  name: InZone(DateTimeZone, ZoneLocalMappingResolver)
  nameWithType: LocalDateTime.InZone(DateTimeZone, ZoneLocalMappingResolver)
  fullName: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone, NodaTime.TimeZones.ZoneLocalMappingResolver)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: InZone
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZone_NodaTime_DateTimeZone_NodaTime_TimeZones_ZoneLocalMappingResolver_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    href: NodaTime.TimeZones.ZoneLocalMappingResolver.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.InZone(NodaTime.DateTimeZone,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: InZone
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZone_NodaTime_DateTimeZone_NodaTime_TimeZones_ZoneLocalMappingResolver_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    href: NodaTime.TimeZones.ZoneLocalMappingResolver.html
  - name: )
- uid: NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)
  commentId: M:NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtStrictly_NodaTime_LocalDateTime_
  name: AtStrictly(LocalDateTime)
  nameWithType: DateTimeZone.AtStrictly(LocalDateTime)
  fullName: NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)
    name: AtStrictly
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtStrictly_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.AtStrictly(NodaTime.LocalDateTime)
    name: AtStrictly
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtStrictly_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: NodaTime.SkippedTimeException
  commentId: T:NodaTime.SkippedTimeException
  href: NodaTime.SkippedTimeException.html
  name: SkippedTimeException
  nameWithType: SkippedTimeException
  fullName: NodaTime.SkippedTimeException
- uid: NodaTime.AmbiguousTimeException
  commentId: T:NodaTime.AmbiguousTimeException
  href: NodaTime.AmbiguousTimeException.html
  name: AmbiguousTimeException
  nameWithType: AmbiguousTimeException
  fullName: NodaTime.AmbiguousTimeException
- uid: NodaTime.LocalDateTime.InZoneStrictly*
  commentId: Overload:NodaTime.LocalDateTime.InZoneStrictly
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneStrictly_NodaTime_DateTimeZone_
  name: InZoneStrictly
  nameWithType: LocalDateTime.InZoneStrictly
  fullName: NodaTime.LocalDateTime.InZoneStrictly
- uid: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  commentId: M:NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneStrictly_NodaTime_DateTimeZone_
  name: InZoneStrictly(DateTimeZone)
  nameWithType: LocalDateTime.InZoneStrictly(DateTimeZone)
  fullName: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
  spec.csharp:
  - uid: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
    name: InZoneStrictly
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneStrictly_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
  spec.vb:
  - uid: NodaTime.LocalDateTime.InZoneStrictly(NodaTime.DateTimeZone)
    name: InZoneStrictly
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneStrictly_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
- uid: NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)
  commentId: M:NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtLeniently_NodaTime_LocalDateTime_
  name: AtLeniently(LocalDateTime)
  nameWithType: DateTimeZone.AtLeniently(LocalDateTime)
  fullName: NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)
    name: AtLeniently
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtLeniently_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.AtLeniently(NodaTime.LocalDateTime)
    name: AtLeniently
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_AtLeniently_NodaTime_LocalDateTime_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: )
- uid: NodaTime.TimeZones.Resolvers.ReturnLater
  commentId: P:NodaTime.TimeZones.Resolvers.ReturnLater
  href: NodaTime.TimeZones.Resolvers.html#NodaTime_TimeZones_Resolvers_ReturnLater
  name: ReturnLater
  nameWithType: Resolvers.ReturnLater
  fullName: NodaTime.TimeZones.Resolvers.ReturnLater
- uid: NodaTime.TimeZones.Resolvers.ReturnStartOfIntervalAfter
  commentId: P:NodaTime.TimeZones.Resolvers.ReturnStartOfIntervalAfter
  href: NodaTime.TimeZones.Resolvers.html#NodaTime_TimeZones_Resolvers_ReturnStartOfIntervalAfter
  name: ReturnStartOfIntervalAfter
  nameWithType: Resolvers.ReturnStartOfIntervalAfter
  fullName: NodaTime.TimeZones.Resolvers.ReturnStartOfIntervalAfter
- uid: NodaTime.LocalDateTime.InZoneLeniently*
  commentId: Overload:NodaTime.LocalDateTime.InZoneLeniently
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZoneLeniently_NodaTime_DateTimeZone_
  name: InZoneLeniently
  nameWithType: LocalDateTime.InZoneLeniently
  fullName: NodaTime.LocalDateTime.InZoneLeniently
- uid: NodaTime.TimeZones.ZoneLocalMappingResolver
  commentId: T:NodaTime.TimeZones.ZoneLocalMappingResolver
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.ZoneLocalMappingResolver.html
  name: ZoneLocalMappingResolver
  nameWithType: ZoneLocalMappingResolver
  fullName: NodaTime.TimeZones.ZoneLocalMappingResolver
- uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
  commentId: M:NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_ResolveLocal_NodaTime_LocalDateTime_NodaTime_TimeZones_ZoneLocalMappingResolver_
  name: ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)
  nameWithType: DateTimeZone.ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)
  fullName: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime, NodaTime.TimeZones.ZoneLocalMappingResolver)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: ResolveLocal
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_ResolveLocal_NodaTime_LocalDateTime_NodaTime_TimeZones_ZoneLocalMappingResolver_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    href: NodaTime.TimeZones.ZoneLocalMappingResolver.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.ResolveLocal(NodaTime.LocalDateTime,NodaTime.TimeZones.ZoneLocalMappingResolver)
    name: ResolveLocal
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_ResolveLocal_NodaTime_LocalDateTime_NodaTime_TimeZones_ZoneLocalMappingResolver_
  - name: (
  - uid: NodaTime.LocalDateTime
    name: LocalDateTime
    href: NodaTime.LocalDateTime.html
  - name: ','
  - name: " "
  - uid: NodaTime.TimeZones.ZoneLocalMappingResolver
    name: ZoneLocalMappingResolver
    href: NodaTime.TimeZones.ZoneLocalMappingResolver.html
  - name: )
- uid: NodaTime.LocalDateTime.InZone*
  commentId: Overload:NodaTime.LocalDateTime.InZone
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_InZone_NodaTime_DateTimeZone_NodaTime_TimeZones_ZoneLocalMappingResolver_
  name: InZone
  nameWithType: LocalDateTime.InZone
  fullName: NodaTime.LocalDateTime.InZone
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: NodaTime.LocalDateTime.Deconstruct*
  commentId: Overload:NodaTime.LocalDateTime.Deconstruct
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Deconstruct_NodaTime_LocalDate__NodaTime_LocalTime__
  name: Deconstruct
  nameWithType: LocalDateTime.Deconstruct
  fullName: NodaTime.LocalDateTime.Deconstruct
- uid: NodaTime.LocalDateTime.Max*
  commentId: Overload:NodaTime.LocalDateTime.Max
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Max_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: Max
  nameWithType: LocalDateTime.Max
  fullName: NodaTime.LocalDateTime.Max
- uid: NodaTime.LocalDateTime.Min*
  commentId: Overload:NodaTime.LocalDateTime.Min
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_Min_NodaTime_LocalDateTime_NodaTime_LocalDateTime_
  name: Min
  nameWithType: LocalDateTime.Min
  fullName: NodaTime.LocalDateTime.Min
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: NodaTime.LocalDateTime.ToString*
  commentId: Overload:NodaTime.LocalDateTime.ToString
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_ToString
  name: ToString
  nameWithType: LocalDateTime.ToString
  fullName: NodaTime.LocalDateTime.ToString
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.Xml.Serialization.XmlSchemaExporter
  commentId: T:System.Xml.Serialization.XmlSchemaExporter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaexporter
  name: XmlSchemaExporter
  nameWithType: XmlSchemaExporter
  fullName: System.Xml.Serialization.XmlSchemaExporter
- uid: NodaTime.LocalDateTime.AddSchema*
  commentId: Overload:NodaTime.LocalDateTime.AddSchema
  href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_AddSchema_System_Xml_Schema_XmlSchemaSet_
  name: AddSchema
  nameWithType: LocalDateTime.AddSchema
  fullName: NodaTime.LocalDateTime.AddSchema
- uid: System.Xml.Schema.XmlSchemaSet
  commentId: T:System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschemaset
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  commentId: T:System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlqualifiedname
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
- uid: System.Xml.Serialization.XmlSchemaProviderAttribute
  commentId: T:System.Xml.Serialization.XmlSchemaProviderAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaproviderattribute
  name: XmlSchemaProviderAttribute
  nameWithType: XmlSchemaProviderAttribute
  fullName: System.Xml.Serialization.XmlSchemaProviderAttribute
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschema
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
  commentId: Overload:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.GetSchema
  nameWithType: LocalDateTime.IXmlSerializable.GetSchema
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.GetSchema
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema*
    name: GetSchema
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_System_Xml_Serialization_IXmlSerializable_GetSchema
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
  commentId: Overload:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.ReadXml
  nameWithType: LocalDateTime.IXmlSerializable.ReadXml
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.ReadXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml*
    name: ReadXml
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
  commentId: Overload:NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.WriteXml
  nameWithType: LocalDateTime.IXmlSerializable.WriteXml
  fullName: NodaTime.LocalDateTime.System.Xml.Serialization.IXmlSerializable.WriteXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.LocalDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml*
    name: WriteXml
    href: NodaTime.LocalDateTime.html#NodaTime_LocalDateTime_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_
shouldSkipMarkup: true
