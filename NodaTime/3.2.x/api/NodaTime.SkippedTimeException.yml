### YamlMime:ManagedReference
items:
- uid: NodaTime.SkippedTimeException
  commentId: T:NodaTime.SkippedTimeException
  id: SkippedTimeException
  parent: NodaTime
  children:
  - NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  - NodaTime.SkippedTimeException.LocalDateTime
  - NodaTime.SkippedTimeException.Zone
  langs:
  - csharp
  - vb
  name: SkippedTimeException
  nameWithType: SkippedTimeException
  fullName: NodaTime.SkippedTimeException
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Exception thrown to indicate that the specified local time doesn't

    exist in a particular time zone due to daylight saving time changes.
  remarks: >-
    <p>

    This normally occurs for spring transitions, where the clock goes forward

    (usually by an hour). For example, suppose the time zone goes forward

    at 2am, so the second after 01:59:59 becomes 03:00:00. In that case,

    local times such as 02:30:00 never occur.

    </p>

    <p>

    This exception is used to indicate such problems, as they're usually

    not the same as other <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="false"></xref> causes,

    such as entering "15" for a month number.

    </p>

    <p>

    Note that it is possible (though extremely rare) for a whole day to be skipped due to a time zone transition,

    so this exception may also be thrown in cases where no local time is valid for a particular local date. (For

    example, Samoa skipped December 30th 2011 entirely, transitioning from UTC-10 to UTC+14 at midnight.)

    </p>
  example: []
  syntax:
    content: 'public sealed class SkippedTimeException : ArgumentOutOfRangeException, ISerializable'
    content.vb: Public NotInheritable Class SkippedTimeException Inherits ArgumentOutOfRangeException Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArgumentException
  - System.ArgumentOutOfRangeException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ArgumentOutOfRangeException.ThrowIfEqual``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfLessThan``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfNegative``1({T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1({T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfNotEqual``1({T},{T},System.String)
  - System.ArgumentOutOfRangeException.ThrowIfZero``1({T},System.String)
  - System.ArgumentOutOfRangeException.ActualValue
  - System.ArgumentOutOfRangeException.Message
  - System.ArgumentException.ThrowIfNullOrEmpty(System.String,System.String)
  - System.ArgumentException.ThrowIfNullOrWhiteSpace(System.String,System.String)
  - System.ArgumentException.ParamName
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.SkippedTimeException.LocalDateTime
  commentId: P:NodaTime.SkippedTimeException.LocalDateTime
  id: LocalDateTime
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: LocalDateTime
  nameWithType: SkippedTimeException.LocalDateTime
  fullName: NodaTime.SkippedTimeException.LocalDateTime
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the local date/time which is invalid in the time zone, prompting this exception.
  example: []
  syntax:
    content: public LocalDateTime LocalDateTime { get; }
    parameters: []
    return:
      type: NodaTime.LocalDateTime
      description: The local date/time which is invalid in the time zone.
    content.vb: Public ReadOnly Property LocalDateTime As LocalDateTime
  overload: NodaTime.SkippedTimeException.LocalDateTime*
- uid: NodaTime.SkippedTimeException.Zone
  commentId: P:NodaTime.SkippedTimeException.Zone
  id: Zone
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: Zone
  nameWithType: SkippedTimeException.Zone
  fullName: NodaTime.SkippedTimeException.Zone
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the time zone in which the local date/time is invalid.
  example: []
  syntax:
    content: public DateTimeZone Zone { get; }
    parameters: []
    return:
      type: NodaTime.DateTimeZone
      description: The time zone in which the local date/time is invalid
    content.vb: Public ReadOnly Property Zone As DateTimeZone
  overload: NodaTime.SkippedTimeException.Zone*
- uid: NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  commentId: M:NodaTime.SkippedTimeException.#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)
  id: '#ctor(NodaTime.LocalDateTime,NodaTime.DateTimeZone)'
  parent: NodaTime.SkippedTimeException
  langs:
  - csharp
  - vb
  name: SkippedTimeException(LocalDateTime, DateTimeZone)
  nameWithType: SkippedTimeException.SkippedTimeException(LocalDateTime, DateTimeZone)
  fullName: NodaTime.SkippedTimeException.SkippedTimeException(NodaTime.LocalDateTime, NodaTime.DateTimeZone)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Creates a new instance for the given local date/time and time zone.
  remarks: >-
    User code is unlikely to need to deliberately call this constructor except

    possibly for testing.
  example: []
  syntax:
    content: public SkippedTimeException(LocalDateTime localDateTime, DateTimeZone zone)
    parameters:
    - id: localDateTime
      type: NodaTime.LocalDateTime
      description: The local date/time which is skipped in the specified time zone.
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which the local date/time does not exist.
    content.vb: Public Sub New(localDateTime As LocalDateTime, zone As DateTimeZone)
  overload: NodaTime.SkippedTimeException.#ctor*
  nameWithType.vb: SkippedTimeException.New(LocalDateTime, DateTimeZone)
  fullName.vb: NodaTime.SkippedTimeException.New(NodaTime.LocalDateTime, NodaTime.DateTimeZone)
  name.vb: New(LocalDateTime, DateTimeZone)
references:
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.SystemException
  commentId: T:System.SystemException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.systemexception
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  name: ThrowIfEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfEqual(Of T)(T, T, String)
  name.vb: ThrowIfEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
    name: ThrowIfEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
    name: ThrowIfEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  name: ThrowIfGreaterThan<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfGreaterThan<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfGreaterThan<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfGreaterThan(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfGreaterThan(Of T)(T, T, String)
  name.vb: ThrowIfGreaterThan(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
    name: ThrowIfGreaterThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
    name: ThrowIfGreaterThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  name: ThrowIfGreaterThanOrEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  name.vb: ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfGreaterThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfGreaterThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  name: ThrowIfLessThan<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfLessThan<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfLessThan<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfLessThan(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfLessThan(Of T)(T, T, String)
  name.vb: ThrowIfLessThan(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
    name: ThrowIfLessThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
    name: ThrowIfLessThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  name: ThrowIfLessThanOrEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfLessThanOrEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfLessThanOrEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual(Of T)(T, T, String)
  name.vb: ThrowIfLessThanOrEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfLessThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfLessThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1({T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  name: ThrowIfNegative<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNegative<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNegative<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNegative(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNegative(Of T)(T, String)
  name.vb: ThrowIfNegative(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
    name: ThrowIfNegative
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
    name: ThrowIfNegative
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1({T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  name: ThrowIfNegativeOrZero<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNegativeOrZero<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNegativeOrZero(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero(Of T)(T, String)
  name.vb: ThrowIfNegativeOrZero(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
    name: ThrowIfNegativeOrZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
    name: ThrowIfNegativeOrZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1({T},{T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  name: ThrowIfNotEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNotEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNotEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNotEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNotEqual(Of T)(T, T, String)
  name.vb: ThrowIfNotEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
    name: ThrowIfNotEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
    name: ThrowIfNotEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfZero``1({T},System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
  parent: System.ArgumentOutOfRangeException
  definition: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  name: ThrowIfZero<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfZero<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfZero<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfZero(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfZero(Of T)(T, String)
  name.vb: ThrowIfZero(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
    name: ThrowIfZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
    name: ThrowIfZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ActualValue
  commentId: P:System.ArgumentOutOfRangeException.ActualValue
  parent: System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.actualvalue
  name: ActualValue
  nameWithType: ArgumentOutOfRangeException.ActualValue
  fullName: System.ArgumentOutOfRangeException.ActualValue
- uid: System.ArgumentOutOfRangeException.Message
  commentId: P:System.ArgumentOutOfRangeException.Message
  parent: System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.message
  name: Message
  nameWithType: ArgumentOutOfRangeException.Message
  fullName: System.ArgumentOutOfRangeException.Message
- uid: System.ArgumentException.ThrowIfNullOrEmpty(System.String,System.String)
  commentId: M:System.ArgumentException.ThrowIfNullOrEmpty(System.String,System.String)
  parent: System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorempty
  name: ThrowIfNullOrEmpty(string, string)
  nameWithType: ArgumentException.ThrowIfNullOrEmpty(string, string)
  fullName: System.ArgumentException.ThrowIfNullOrEmpty(string, string)
  nameWithType.vb: ArgumentException.ThrowIfNullOrEmpty(String, String)
  fullName.vb: System.ArgumentException.ThrowIfNullOrEmpty(String, String)
  name.vb: ThrowIfNullOrEmpty(String, String)
  spec.csharp:
  - uid: System.ArgumentException.ThrowIfNullOrEmpty(System.String,System.String)
    name: ThrowIfNullOrEmpty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorempty
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentException.ThrowIfNullOrEmpty(System.String,System.String)
    name: ThrowIfNullOrEmpty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorempty
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentException.ThrowIfNullOrWhiteSpace(System.String,System.String)
  commentId: M:System.ArgumentException.ThrowIfNullOrWhiteSpace(System.String,System.String)
  parent: System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorwhitespace
  name: ThrowIfNullOrWhiteSpace(string, string)
  nameWithType: ArgumentException.ThrowIfNullOrWhiteSpace(string, string)
  fullName: System.ArgumentException.ThrowIfNullOrWhiteSpace(string, string)
  nameWithType.vb: ArgumentException.ThrowIfNullOrWhiteSpace(String, String)
  fullName.vb: System.ArgumentException.ThrowIfNullOrWhiteSpace(String, String)
  name.vb: ThrowIfNullOrWhiteSpace(String, String)
  spec.csharp:
  - uid: System.ArgumentException.ThrowIfNullOrWhiteSpace(System.String,System.String)
    name: ThrowIfNullOrWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorwhitespace
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentException.ThrowIfNullOrWhiteSpace(System.String,System.String)
    name: ThrowIfNullOrWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentexception.throwifnullorwhitespace
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentException.ParamName
  commentId: P:System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception.paramname
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.tostring
  - name: (
  - name: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.data
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.helplink
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.hresult
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.innerexception
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.source
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.stacktrace
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.targetsite
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  name: ThrowIfEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfEqual(Of T)(T, T, String)
  name.vb: ThrowIfEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
    name: ThrowIfEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfEqual``1(``0,``0,System.String)
    name: ThrowIfEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  name: ThrowIfGreaterThan<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfGreaterThan<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfGreaterThan<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfGreaterThan(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfGreaterThan(Of T)(T, T, String)
  name.vb: ThrowIfGreaterThan(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
    name: ThrowIfGreaterThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThan``1(``0,``0,System.String)
    name: ThrowIfGreaterThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthan
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  name: ThrowIfGreaterThanOrEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  name.vb: ThrowIfGreaterThanOrEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfGreaterThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfGreaterThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfGreaterThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifgreaterthanorequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  name: ThrowIfLessThan<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfLessThan<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfLessThan<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfLessThan(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfLessThan(Of T)(T, T, String)
  name.vb: ThrowIfLessThan(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
    name: ThrowIfLessThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThan``1(``0,``0,System.String)
    name: ThrowIfLessThan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthan
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  name: ThrowIfLessThanOrEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfLessThanOrEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfLessThanOrEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual(Of T)(T, T, String)
  name.vb: ThrowIfLessThanOrEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfLessThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfLessThanOrEqual``1(``0,``0,System.String)
    name: ThrowIfLessThanOrEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwiflessthanorequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  name: ThrowIfNegative<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNegative<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNegative<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNegative(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNegative(Of T)(T, String)
  name.vb: ThrowIfNegative(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
    name: ThrowIfNegative
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegative``1(``0,System.String)
    name: ThrowIfNegative
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegative
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  name: ThrowIfNegativeOrZero<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNegativeOrZero<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNegativeOrZero(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero(Of T)(T, String)
  name.vb: ThrowIfNegativeOrZero(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
    name: ThrowIfNegativeOrZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNegativeOrZero``1(``0,System.String)
    name: ThrowIfNegativeOrZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnegativeorzero
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  name: ThrowIfNotEqual<T>(T, T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfNotEqual<T>(T, T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfNotEqual<T>(T, T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfNotEqual(Of T)(T, T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfNotEqual(Of T)(T, T, String)
  name.vb: ThrowIfNotEqual(Of T)(T, T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
    name: ThrowIfNotEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfNotEqual``1(``0,``0,System.String)
    name: ThrowIfNotEqual
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifnotequal
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
  commentId: M:System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  name: ThrowIfZero<T>(T, string)
  nameWithType: ArgumentOutOfRangeException.ThrowIfZero<T>(T, string)
  fullName: System.ArgumentOutOfRangeException.ThrowIfZero<T>(T, string)
  nameWithType.vb: ArgumentOutOfRangeException.ThrowIfZero(Of T)(T, String)
  fullName.vb: System.ArgumentOutOfRangeException.ThrowIfZero(Of T)(T, String)
  name.vb: ThrowIfZero(Of T)(T, String)
  spec.csharp:
  - uid: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
    name: ThrowIfZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentOutOfRangeException.ThrowIfZero``1(``0,System.String)
    name: ThrowIfZero
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception.throwifzero
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.SkippedTimeException.LocalDateTime*
  commentId: Overload:NodaTime.SkippedTimeException.LocalDateTime
  href: NodaTime.SkippedTimeException.html#NodaTime_SkippedTimeException_LocalDateTime
  name: LocalDateTime
  nameWithType: SkippedTimeException.LocalDateTime
  fullName: NodaTime.SkippedTimeException.LocalDateTime
- uid: NodaTime.LocalDateTime
  commentId: T:NodaTime.LocalDateTime
  parent: NodaTime
  href: NodaTime.LocalDateTime.html
  name: LocalDateTime
  nameWithType: LocalDateTime
  fullName: NodaTime.LocalDateTime
- uid: NodaTime.SkippedTimeException.Zone*
  commentId: Overload:NodaTime.SkippedTimeException.Zone
  href: NodaTime.SkippedTimeException.html#NodaTime_SkippedTimeException_Zone
  name: Zone
  nameWithType: SkippedTimeException.Zone
  fullName: NodaTime.SkippedTimeException.Zone
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.SkippedTimeException.#ctor*
  commentId: Overload:NodaTime.SkippedTimeException.#ctor
  href: NodaTime.SkippedTimeException.html#NodaTime_SkippedTimeException__ctor_NodaTime_LocalDateTime_NodaTime_DateTimeZone_
  name: SkippedTimeException
  nameWithType: SkippedTimeException.SkippedTimeException
  fullName: NodaTime.SkippedTimeException.SkippedTimeException
  nameWithType.vb: SkippedTimeException.New
  fullName.vb: NodaTime.SkippedTimeException.New
  name.vb: New
shouldSkipMarkup: true
