### YamlMime:ManagedReference
items:
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  id: Instant
  parent: NodaTime
  children:
  - NodaTime.Instant.Add(NodaTime.Instant,NodaTime.Duration)
  - NodaTime.Instant.AddSchema(System.Xml.Schema.XmlSchemaSet)
  - NodaTime.Instant.CompareTo(NodaTime.Instant)
  - NodaTime.Instant.Equals(NodaTime.Instant)
  - NodaTime.Instant.Equals(System.Object)
  - NodaTime.Instant.FromDateTimeOffset(System.DateTimeOffset)
  - NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  - NodaTime.Instant.FromJulianDate(System.Double)
  - NodaTime.Instant.FromUnixTimeMilliseconds(System.Int64)
  - NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
  - NodaTime.Instant.FromUnixTimeTicks(System.Int64)
  - NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - NodaTime.Instant.GetHashCode
  - NodaTime.Instant.InUtc
  - NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  - NodaTime.Instant.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  - NodaTime.Instant.Max(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.MaxValue
  - NodaTime.Instant.Min(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.MinValue
  - NodaTime.Instant.Minus(NodaTime.Duration)
  - NodaTime.Instant.Minus(NodaTime.Instant)
  - NodaTime.Instant.Plus(NodaTime.Duration)
  - NodaTime.Instant.PlusNanoseconds(System.Int64)
  - NodaTime.Instant.PlusTicks(System.Int64)
  - NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Duration)
  - NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.System#IComparable#CompareTo(System.Object)
  - NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema
  - NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - NodaTime.Instant.ToDateTimeOffset
  - NodaTime.Instant.ToDateTimeUtc
  - NodaTime.Instant.ToJulianDate
  - NodaTime.Instant.ToString
  - NodaTime.Instant.ToString(System.String,System.IFormatProvider)
  - NodaTime.Instant.ToUnixTimeMilliseconds
  - NodaTime.Instant.ToUnixTimeSeconds
  - NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds
  - NodaTime.Instant.ToUnixTimeTicks
  - NodaTime.Instant.WithOffset(NodaTime.Offset)
  - NodaTime.Instant.WithOffset(NodaTime.Offset,NodaTime.CalendarSystem)
  - NodaTime.Instant.op_Addition(NodaTime.Instant,NodaTime.Duration)
  - NodaTime.Instant.op_Equality(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  - NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  - NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  langs:
  - csharp
  - vb
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
  type: Struct
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Represents an instant on the global timeline, with nanosecond resolution.
  remarks: >-
    <p>

    An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> has no concept of a particular time zone or calendar: it simply represents a point in

    time that can be globally agreed-upon.

    </p>

    <p>

    Equality and ordering comparisons are defined in the natural way, with earlier points on the timeline

    being considered "less than" later points.

    </p>

    <p>The default value of this type is <xref href="NodaTime.NodaConstants.UnixEpoch" data-throw-if-not-resolved="false"></xref>, i.e. the instant

    which can be represented as 1970-01-01T00:00:00Z in the ISO calendar.</p>
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(InstantTypeConverter))]

      public readonly struct Instant : IEquatable<Instant>, IComparable<Instant>, IFormattable, IComparable, IXmlSerializable, IAdditionOperators<Instant, Duration, Instant>, ISubtractionOperators<Instant, Duration, Instant>, ISubtractionOperators<Instant, Instant, Duration>, IComparisonOperators<Instant, Instant, bool>, IEqualityOperators<Instant, Instant, bool>, IMinMaxValue<Instant>
    content.vb: >-
      <TypeConverter(GetType(InstantTypeConverter))>

      Public Structure Instant Implements IEquatable(Of Instant), IComparable(Of Instant), IFormattable, IComparable, IXmlSerializable, IAdditionOperators(Of Instant, Duration, Instant), ISubtractionOperators(Of Instant, Duration, Instant), ISubtractionOperators(Of Instant, Instant, Duration), IComparisonOperators(Of Instant, Instant, Boolean), IEqualityOperators(Of Instant, Instant, Boolean), IMinMaxValue(Of Instant)
  implements:
  - System.IEquatable{NodaTime.Instant}
  - System.IComparable{NodaTime.Instant}
  - System.IFormattable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  - System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  - System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  - System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}
  - System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  - System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  - System.Numerics.IMinMaxValue{NodaTime.Instant}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.Instant.MinValue
  commentId: P:NodaTime.Instant.MinValue
  id: MinValue
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Instant.MinValue
  fullName: NodaTime.Instant.MinValue
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Represents the smallest possible <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
  remarks: This value is equivalent to -9998-01-01T00:00:00Z
  example: []
  syntax:
    content: public static Instant MinValue { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly Property MinValue As Instant
  overload: NodaTime.Instant.MinValue*
  implements:
  - System.Numerics.IMinMaxValue{NodaTime.Instant}.MinValue
- uid: NodaTime.Instant.MaxValue
  commentId: P:NodaTime.Instant.MaxValue
  id: MaxValue
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Instant.MaxValue
  fullName: NodaTime.Instant.MaxValue
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Represents the largest possible <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
  remarks: This value is equivalent to 9999-12-31T23:59:59.999999999Z
  example: []
  syntax:
    content: public static Instant MaxValue { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly Property MaxValue As Instant
  overload: NodaTime.Instant.MaxValue*
  implements:
  - System.Numerics.IMinMaxValue{NodaTime.Instant}.MaxValue
- uid: NodaTime.Instant.CompareTo(NodaTime.Instant)
  commentId: M:NodaTime.Instant.CompareTo(NodaTime.Instant)
  id: CompareTo(NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: CompareTo(Instant)
  nameWithType: Instant.CompareTo(Instant)
  fullName: NodaTime.Instant.CompareTo(NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares the current object with another object of the same type.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public int CompareTo(Instant other)
    parameters:
    - id: other
      type: NodaTime.Instant
      description: An object to compare with this object.
    return:
      type: System.Int32
      description: >-
        A 32-bit signed integer that indicates the relative order of the objects being compared.

        The return value has the following meanings:

        <table><thead><tr><th class="term">Value</th><th class="description">Meaning</th></tr></thead><tbody><tr><td class="term">&lt; 0</td><td class="description">This object is less than the <code class="paramref">other</code> parameter.</td></tr><tr><td class="term">0</td><td class="description">This object is equal to <code class="paramref">other</code>.</td></tr><tr><td class="term">&gt; 0</td><td class="description">This object is greater than <code class="paramref">other</code>.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(other As Instant) As Integer
  overload: NodaTime.Instant.CompareTo*
  implements:
  - System.IComparable{NodaTime.Instant}.CompareTo(NodaTime.Instant)
- uid: NodaTime.Instant.System#IComparable#CompareTo(System.Object)
  commentId: M:NodaTime.Instant.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(object?)
  nameWithType: Instant.IComparable.CompareTo(object?)
  fullName: NodaTime.Instant.System.IComparable.CompareTo(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implementation of <xref href="System.IComparable.CompareTo(System.Object)" data-throw-if-not-resolved="false"></xref> to compare two instants.

    See the type documentation for a description of ordering semantics.
  remarks: This uses explicit interface implementation to avoid it being called accidentally. The generic implementation should usually be preferred.
  example: []
  syntax:
    content: int IComparable.CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this value with.
    return:
      type: System.Int32
      description: >-
        The result of comparing this instant with another one; see <xref href="NodaTime.Instant.CompareTo(NodaTime.Instant)" data-throw-if-not-resolved="false"></xref> for general details.
            If <code class="paramref">obj</code> is null, this method returns a value greater than 0.
    content.vb: ''
  overload: NodaTime.Instant.System#IComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">obj</code> is non-null but does not refer to an instance of <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.Instant.Equals(System.Object)
  commentId: M:NodaTime.Instant.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Instant.Equals(object?)
  fullName: NodaTime.Instant.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Determines whether the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to this instance.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to this instance;

        otherwise, <code>false</code>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NodaTime.Instant.Equals*
  nameWithType.vb: Instant.Equals(Object)
  fullName.vb: NodaTime.Instant.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.Instant.GetHashCode
  commentId: M:NodaTime.Instant.GetHashCode
  id: GetHashCode
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Instant.GetHashCode()
  fullName: NodaTime.Instant.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a hash code for this instance.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        A hash code for this instance, suitable for use in hashing algorithms and data

        structures like a hash table.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NodaTime.Instant.GetHashCode*
- uid: NodaTime.Instant.PlusTicks(System.Int64)
  commentId: M:NodaTime.Instant.PlusTicks(System.Int64)
  id: PlusTicks(System.Int64)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: PlusTicks(long)
  nameWithType: Instant.PlusTicks(long)
  fullName: NodaTime.Instant.PlusTicks(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new value of this instant with the given number of ticks added to it.
  example: []
  syntax:
    content: public Instant PlusTicks(long ticks)
    parameters:
    - id: ticks
      type: System.Int64
      description: The ticks to add to this instant to create the return value.
    return:
      type: NodaTime.Instant
      description: The result of adding the given number of ticks to this instant.
    content.vb: Public Function PlusTicks(ticks As Long) As Instant
  overload: NodaTime.Instant.PlusTicks*
  nameWithType.vb: Instant.PlusTicks(Long)
  fullName.vb: NodaTime.Instant.PlusTicks(Long)
  name.vb: PlusTicks(Long)
- uid: NodaTime.Instant.PlusNanoseconds(System.Int64)
  commentId: M:NodaTime.Instant.PlusNanoseconds(System.Int64)
  id: PlusNanoseconds(System.Int64)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: PlusNanoseconds(long)
  nameWithType: Instant.PlusNanoseconds(long)
  fullName: NodaTime.Instant.PlusNanoseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a new value of this instant with the given number of nanoseconds added to it.
  example: []
  syntax:
    content: public Instant PlusNanoseconds(long nanoseconds)
    parameters:
    - id: nanoseconds
      type: System.Int64
      description: The nanoseconds to add to this instant to create the return value.
    return:
      type: NodaTime.Instant
      description: The result of adding the given number of ticks to this instant.
    content.vb: Public Function PlusNanoseconds(nanoseconds As Long) As Instant
  overload: NodaTime.Instant.PlusNanoseconds*
  nameWithType.vb: Instant.PlusNanoseconds(Long)
  fullName.vb: NodaTime.Instant.PlusNanoseconds(Long)
  name.vb: PlusNanoseconds(Long)
- uid: NodaTime.Instant.op_Addition(NodaTime.Instant,NodaTime.Duration)
  commentId: M:NodaTime.Instant.op_Addition(NodaTime.Instant,NodaTime.Duration)
  id: op_Addition(NodaTime.Instant,NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator +(Instant, Duration)
  nameWithType: Instant.operator +(Instant, Duration)
  fullName: NodaTime.Instant.operator +(NodaTime.Instant, NodaTime.Duration)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Implements the operator + (addition) for <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> + <xref href="NodaTime.Duration" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Instant operator +(Instant left, Duration right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Duration
      description: The right hand side of the operator.
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the sum of the given values.
    content.vb: Public Shared Operator +(left As Instant, right As Duration) As Instant
  overload: NodaTime.Instant.op_Addition*
  implements:
  - System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Addition(NodaTime.Instant,NodaTime.Duration)
  nameWithType.vb: Instant.+(Instant, Duration)
  fullName.vb: NodaTime.Instant.+(NodaTime.Instant, NodaTime.Duration)
  name.vb: +(Instant, Duration)
- uid: NodaTime.Instant.Add(NodaTime.Instant,NodaTime.Duration)
  commentId: M:NodaTime.Instant.Add(NodaTime.Instant,NodaTime.Duration)
  id: Add(NodaTime.Instant,NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Add(Instant, Duration)
  nameWithType: Instant.Add(Instant, Duration)
  fullName: NodaTime.Instant.Add(NodaTime.Instant, NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Adds a duration to an instant. Friendly alternative to <code>operator+()</code>.
  example: []
  syntax:
    content: public static Instant Add(Instant left, Duration right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Duration
      description: The right hand side of the operator.
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the sum of the given values.
    content.vb: Public Shared Function Add(left As Instant, right As Duration) As Instant
  overload: NodaTime.Instant.Add*
- uid: NodaTime.Instant.Plus(NodaTime.Duration)
  commentId: M:NodaTime.Instant.Plus(NodaTime.Duration)
  id: Plus(NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Plus(Duration)
  nameWithType: Instant.Plus(Duration)
  fullName: NodaTime.Instant.Plus(NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of adding a duration to this instant, for a fluent alternative to <code>operator+()</code>.
  example: []
  syntax:
    content: public Instant Plus(Duration duration)
    parameters:
    - id: duration
      type: NodaTime.Duration
      description: The duration to add
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the result of the addition.
    content.vb: Public Function Plus(duration As Duration) As Instant
  overload: NodaTime.Instant.Plus*
- uid: NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  id: op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator -(Instant, Instant)
  nameWithType: Instant.operator -(Instant, Instant)
  fullName: NodaTime.Instant.operator -(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Implements the operator - (subtraction) for <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> - <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Duration operator -(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: NodaTime.Duration
      description: A new <xref href="NodaTime.Duration" data-throw-if-not-resolved="false"></xref> representing the difference of the given values.
    content.vb: Public Shared Operator -(left As Instant, right As Instant) As Duration
  overload: NodaTime.Instant.op_Subtraction*
  implements:
  - System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.-(Instant, Instant)
  fullName.vb: NodaTime.Instant.-(NodaTime.Instant, NodaTime.Instant)
  name.vb: -(Instant, Instant)
- uid: NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  commentId: M:NodaTime.Instant.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  id: op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator -(Instant, Duration)
  nameWithType: Instant.operator -(Instant, Duration)
  fullName: NodaTime.Instant.operator -(NodaTime.Instant, NodaTime.Duration)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Implements the operator - (subtraction) for <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> - <xref href="NodaTime.Duration" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Instant operator -(Instant left, Duration right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Duration
      description: The right hand side of the operator.
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the difference of the given values.
    content.vb: Public Shared Operator -(left As Instant, right As Duration) As Instant
  overload: NodaTime.Instant.op_Subtraction*
  implements:
  - System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  nameWithType.vb: Instant.-(Instant, Duration)
  fullName.vb: NodaTime.Instant.-(NodaTime.Instant, NodaTime.Duration)
  name.vb: -(Instant, Duration)
- uid: NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Instant)
  id: Subtract(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Subtract(Instant, Instant)
  nameWithType: Instant.Subtract(Instant, Instant)
  fullName: NodaTime.Instant.Subtract(NodaTime.Instant, NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts one instant from another. Friendly alternative to <code>operator-()</code>.
  example: []
  syntax:
    content: public static Duration Subtract(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: NodaTime.Duration
      description: A new <xref href="NodaTime.Duration" data-throw-if-not-resolved="false"></xref> representing the difference of the given values.
    content.vb: Public Shared Function Subtract(left As Instant, right As Instant) As Duration
  overload: NodaTime.Instant.Subtract*
- uid: NodaTime.Instant.Minus(NodaTime.Instant)
  commentId: M:NodaTime.Instant.Minus(NodaTime.Instant)
  id: Minus(NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Minus(Instant)
  nameWithType: Instant.Minus(Instant)
  fullName: NodaTime.Instant.Minus(NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of subtracting another instant from this one, for a fluent alternative to <code>operator-()</code>.
  example: []
  syntax:
    content: public Duration Minus(Instant other)
    parameters:
    - id: other
      type: NodaTime.Instant
      description: The other instant to subtract
    return:
      type: NodaTime.Duration
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the result of the subtraction.
    content.vb: Public Function Minus(other As Instant) As Duration
  overload: NodaTime.Instant.Minus*
- uid: NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Duration)
  commentId: M:NodaTime.Instant.Subtract(NodaTime.Instant,NodaTime.Duration)
  id: Subtract(NodaTime.Instant,NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Subtract(Instant, Duration)
  nameWithType: Instant.Subtract(Instant, Duration)
  fullName: NodaTime.Instant.Subtract(NodaTime.Instant, NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Subtracts a duration from an instant. Friendly alternative to <code>operator-()</code>.
  example: []
  syntax:
    content: public static Instant Subtract(Instant left, Duration right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Duration
      description: The right hand side of the operator.
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the difference of the given values.
    content.vb: Public Shared Function Subtract(left As Instant, right As Duration) As Instant
  overload: NodaTime.Instant.Subtract*
- uid: NodaTime.Instant.Minus(NodaTime.Duration)
  commentId: M:NodaTime.Instant.Minus(NodaTime.Duration)
  id: Minus(NodaTime.Duration)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Minus(Duration)
  nameWithType: Instant.Minus(Duration)
  fullName: NodaTime.Instant.Minus(NodaTime.Duration)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the result of subtracting a duration from this instant, for a fluent alternative to <code>operator-()</code>.
  example: []
  syntax:
    content: public Instant Minus(Duration duration)
    parameters:
    - id: duration
      type: NodaTime.Duration
      description: The duration to subtract
    return:
      type: NodaTime.Instant
      description: A new <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> representing the result of the subtraction.
    content.vb: Public Function Minus(duration As Duration) As Instant
  overload: NodaTime.Instant.Minus*
- uid: NodaTime.Instant.op_Equality(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_Equality(NodaTime.Instant,NodaTime.Instant)
  id: op_Equality(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator ==(Instant, Instant)
  nameWithType: Instant.operator ==(Instant, Instant)
  fullName: NodaTime.Instant.operator ==(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator == (equality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator ==(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator =(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_Equality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Equality(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.=(Instant, Instant)
  fullName.vb: NodaTime.Instant.=(NodaTime.Instant, NodaTime.Instant)
  name.vb: =(Instant, Instant)
- uid: NodaTime.Instant.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  id: op_Inequality(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator !=(Instant, Instant)
  nameWithType: Instant.operator !=(Instant, Instant)
  fullName: NodaTime.Instant.operator !=(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator != (inequality).

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator !=(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if values are not equal to each other, otherwise <code>false</code>.
    content.vb: Public Shared Operator <>(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_Inequality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.<>(Instant, Instant)
  fullName.vb: NodaTime.Instant.<>(NodaTime.Instant, NodaTime.Instant)
  name.vb: <>(Instant, Instant)
- uid: NodaTime.Instant.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  id: op_LessThan(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator <(Instant, Instant)
  nameWithType: Instant.operator <(Instant, Instant)
  fullName: NodaTime.Instant.operator <(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator &lt; (less than).

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if the left value is less than the right value, otherwise <code>false</code>.
    content.vb: Public Shared Operator <(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_LessThan*
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.<(Instant, Instant)
  fullName.vb: NodaTime.Instant.<(NodaTime.Instant, NodaTime.Instant)
  name.vb: <(Instant, Instant)
- uid: NodaTime.Instant.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  id: op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator <=(Instant, Instant)
  nameWithType: Instant.operator <=(Instant, Instant)
  fullName: NodaTime.Instant.operator <=(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator &lt;= (less than or equal).

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <=(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if the left value is less than or equal to the right value, otherwise <code>false</code>.
    content.vb: Public Shared Operator <=(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_LessThanOrEqual*
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.<=(Instant, Instant)
  fullName.vb: NodaTime.Instant.<=(NodaTime.Instant, NodaTime.Instant)
  name.vb: <=(Instant, Instant)
- uid: NodaTime.Instant.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  id: op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator >(Instant, Instant)
  nameWithType: Instant.operator >(Instant, Instant)
  fullName: NodaTime.Instant.operator >(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator &gt; (greater than).

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if the left value is greater than the right value, otherwise <code>false</code>.
    content.vb: Public Shared Operator >(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_GreaterThan*
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.>(Instant, Instant)
  fullName.vb: NodaTime.Instant.>(NodaTime.Instant, NodaTime.Instant)
  name.vb: '>(Instant, Instant)'
- uid: NodaTime.Instant.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  id: op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: operator >=(Instant, Instant)
  nameWithType: Instant.operator >=(Instant, Instant)
  fullName: NodaTime.Instant.operator >=(NodaTime.Instant, NodaTime.Instant)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implements the operator &gt;= (greater than or equal).

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >=(Instant left, Instant right)
    parameters:
    - id: left
      type: NodaTime.Instant
      description: The left hand side of the operator.
    - id: right
      type: NodaTime.Instant
      description: The right hand side of the operator.
    return:
      type: System.Boolean
      description: <code>true</code> if the left value is greater than or equal to the right value, otherwise <code>false</code>.
    content.vb: Public Shared Operator >=(left As Instant, right As Instant) As Boolean
  overload: NodaTime.Instant.op_GreaterThanOrEqual*
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  nameWithType.vb: Instant.>=(Instant, Instant)
  fullName.vb: NodaTime.Instant.>=(NodaTime.Instant, NodaTime.Instant)
  name.vb: '>=(Instant, Instant)'
- uid: NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromUtc(int, int, int, int, int)
  nameWithType: Instant.FromUtc(int, int, int, int, int)
  fullName: NodaTime.Instant.FromUtc(int, int, int, int, int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a new instant corresponding to the given UTC date and time in the ISO calendar.

    In most cases applications should use <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> to represent a date

    and time, but this method is useful in some situations where an <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> is

    required, such as time zone testing.
  example: []
  syntax:
    content: public static Instant FromUtc(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year",
            so a value of 0 means 1 BC, for example.
    - id: monthOfYear
      type: System.Int32
      description: The month of year.
    - id: dayOfMonth
      type: System.Int32
      description: The day of month.
    - id: hourOfDay
      type: System.Int32
      description: The hour.
    - id: minuteOfHour
      type: System.Int32
      description: The minute.
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value representing the given date and time in UTC and the ISO calendar.
    content.vb: Public Shared Function FromUtc(year As Integer, monthOfYear As Integer, dayOfMonth As Integer, hourOfDay As Integer, minuteOfHour As Integer) As Instant
  overload: NodaTime.Instant.FromUtc*
  nameWithType.vb: Instant.FromUtc(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: NodaTime.Instant.FromUtc(Integer, Integer, Integer, Integer, Integer)
  name.vb: FromUtc(Integer, Integer, Integer, Integer, Integer)
- uid: NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:NodaTime.Instant.FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromUtc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromUtc(int, int, int, int, int, int)
  nameWithType: Instant.FromUtc(int, int, int, int, int, int)
  fullName: NodaTime.Instant.FromUtc(int, int, int, int, int, int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a new instant corresponding to the given UTC date and

    time in the ISO calendar. In most cases applications should

    use <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref>

    to represent a date and time, but this method is useful in some

    situations where an Instant is required, such as time zone testing.
  example: []
  syntax:
    content: public static Instant FromUtc(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year",
            so a value of 0 means 1 BC, for example.
    - id: monthOfYear
      type: System.Int32
      description: The month of year.
    - id: dayOfMonth
      type: System.Int32
      description: The day of month.
    - id: hourOfDay
      type: System.Int32
      description: The hour.
    - id: minuteOfHour
      type: System.Int32
      description: The minute.
    - id: secondOfMinute
      type: System.Int32
      description: The second.
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value representing the given date and time in UTC and the ISO calendar.
    content.vb: Public Shared Function FromUtc(year As Integer, monthOfYear As Integer, dayOfMonth As Integer, hourOfDay As Integer, minuteOfHour As Integer, secondOfMinute As Integer) As Instant
  overload: NodaTime.Instant.FromUtc*
  nameWithType.vb: Instant.FromUtc(Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: NodaTime.Instant.FromUtc(Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: FromUtc(Integer, Integer, Integer, Integer, Integer, Integer)
- uid: NodaTime.Instant.Max(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.Max(NodaTime.Instant,NodaTime.Instant)
  id: Max(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Max(Instant, Instant)
  nameWithType: Instant.Max(Instant, Instant)
  fullName: NodaTime.Instant.Max(NodaTime.Instant, NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the later instant of the given two.
  example: []
  syntax:
    content: public static Instant Max(Instant x, Instant y)
    parameters:
    - id: x
      type: NodaTime.Instant
      description: The first instant to compare.
    - id: y
      type: NodaTime.Instant
      description: The second instant to compare.
    return:
      type: NodaTime.Instant
      description: The later instant of <code class="paramref">x</code> or <code class="paramref">y</code>.
    content.vb: Public Shared Function Max(x As Instant, y As Instant) As Instant
  overload: NodaTime.Instant.Max*
- uid: NodaTime.Instant.Min(NodaTime.Instant,NodaTime.Instant)
  commentId: M:NodaTime.Instant.Min(NodaTime.Instant,NodaTime.Instant)
  id: Min(NodaTime.Instant,NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Min(Instant, Instant)
  nameWithType: Instant.Min(Instant, Instant)
  fullName: NodaTime.Instant.Min(NodaTime.Instant, NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns the earlier instant of the given two.
  example: []
  syntax:
    content: public static Instant Min(Instant x, Instant y)
    parameters:
    - id: x
      type: NodaTime.Instant
      description: The first instant to compare.
    - id: y
      type: NodaTime.Instant
      description: The second instant to compare.
    return:
      type: NodaTime.Instant
      description: The earlier instant of <code class="paramref">x</code> or <code class="paramref">y</code>.
    content.vb: Public Shared Function Min(x As Instant, y As Instant) As Instant
  overload: NodaTime.Instant.Min*
- uid: NodaTime.Instant.ToString
  commentId: M:NodaTime.Instant.ToString
  id: ToString
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Instant.ToString()
  fullName: NodaTime.Instant.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        The value of the current instance in the default format pattern ("g"), using the current thread's

        culture to obtain a format provider.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NodaTime.Instant.ToString*
- uid: NodaTime.Instant.ToString(System.String,System.IFormatProvider)
  commentId: M:NodaTime.Instant.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: Instant.ToString(string?, IFormatProvider?)
  fullName: NodaTime.Instant.ToString(string?, System.IFormatProvider?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Formats the value of the current instance using the specified pattern.
  example: []
  syntax:
    content: public string ToString(string? patternText, IFormatProvider? formatProvider)
    parameters:
    - id: patternText
      type: System.String
      description: >-
        The <xref href="System.String" data-throw-if-not-resolved="false"></xref> specifying the pattern to use,
            or null to use the default format pattern ("g").
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> to use when formatting the value,
            or null to use the current thread's culture to obtain a format provider.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the value of the current instance in the specified format.
    content.vb: Public Function ToString(patternText As String, formatProvider As IFormatProvider) As String
  overload: NodaTime.Instant.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Instant.ToString(String, IFormatProvider)
  fullName.vb: NodaTime.Instant.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: NodaTime.Instant.Equals(NodaTime.Instant)
  commentId: M:NodaTime.Instant.Equals(NodaTime.Instant)
  id: Equals(NodaTime.Instant)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: Equals(Instant)
  nameWithType: Instant.Equals(Instant)
  fullName: NodaTime.Instant.Equals(NodaTime.Instant)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Indicates whether the value of this instant is equal to the value of the specified instant.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(Instant other)
    parameters:
    - id: other
      type: NodaTime.Instant
      description: The value to compare with this instance.
    return:
      type: System.Boolean
      description: >-
        true if the value of this instant is equal to the value of the <code class="paramref">other</code> parameter;

        otherwise, false.
    content.vb: Public Function Equals(other As Instant) As Boolean
  overload: NodaTime.Instant.Equals*
  implements:
  - System.IEquatable{NodaTime.Instant}.Equals(NodaTime.Instant)
- uid: NodaTime.Instant.ToJulianDate
  commentId: M:NodaTime.Instant.ToJulianDate
  id: ToJulianDate
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToJulianDate()
  nameWithType: Instant.ToJulianDate()
  fullName: NodaTime.Instant.ToJulianDate()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the Julian Date of this instance - the number of days since

    <xref href="NodaTime.NodaConstants.JulianEpoch" data-throw-if-not-resolved="false"></xref> (noon on January 1st, 4713 BCE in the Julian calendar).
  example: []
  syntax:
    content: public double ToJulianDate()
    return:
      type: System.Double
      description: The number of days (including fractional days) since the Julian Epoch.
    content.vb: Public Function ToJulianDate() As Double
  overload: NodaTime.Instant.ToJulianDate*
- uid: NodaTime.Instant.ToDateTimeUtc
  commentId: M:NodaTime.Instant.ToDateTimeUtc
  id: ToDateTimeUtc
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToDateTimeUtc()
  nameWithType: Instant.ToDateTimeUtc()
  fullName: NodaTime.Instant.ToDateTimeUtc()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Constructs a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> from this Instant which has a <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref>

    of <xref href="System.DateTimeKind.Utc" data-throw-if-not-resolved="false"></xref> and represents the same instant of time as this value.
  remarks: >-
    <p>

    If the date and time is not on a tick boundary (the unit of granularity of DateTime) the value will be truncated

    towards the start of time.

    </p>
  example: []
  syntax:
    content: public DateTime ToDateTimeUtc()
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> representing the same instant in time as this value, with a kind of "universal".
    content.vb: Public Function ToDateTimeUtc() As Date
  overload: NodaTime.Instant.ToDateTimeUtc*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The final date/time is outside the range of <code>DateTime</code>.
- uid: NodaTime.Instant.ToDateTimeOffset
  commentId: M:NodaTime.Instant.ToDateTimeOffset
  id: ToDateTimeOffset
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset()
  nameWithType: Instant.ToDateTimeOffset()
  fullName: NodaTime.Instant.ToDateTimeOffset()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> from this Instant which has an offset of zero.
  remarks: >-
    <p>

    If the date and time is not on a tick boundary (the unit of granularity of DateTime) the value will be truncated

    towards the start of time.

    </p>
  example: []
  syntax:
    content: public DateTimeOffset ToDateTimeOffset()
    return:
      type: System.DateTimeOffset
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> representing the same instant in time as this value.
    content.vb: Public Function ToDateTimeOffset() As DateTimeOffset
  overload: NodaTime.Instant.ToDateTimeOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The final date/time is outside the range of <code>DateTimeOffset</code>.
- uid: NodaTime.Instant.FromDateTimeOffset(System.DateTimeOffset)
  commentId: M:NodaTime.Instant.FromDateTimeOffset(System.DateTimeOffset)
  id: FromDateTimeOffset(System.DateTimeOffset)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromDateTimeOffset(DateTimeOffset)
  nameWithType: Instant.FromDateTimeOffset(DateTimeOffset)
  fullName: NodaTime.Instant.FromDateTimeOffset(System.DateTimeOffset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Converts a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> into a new Instant representing the same instant in time. Note that

    the offset information is not preserved in the returned Instant.
  example: []
  syntax:
    content: public static Instant FromDateTimeOffset(DateTimeOffset dateTimeOffset)
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: Date and time value with an offset.
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value representing the same instant in time as the given <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromDateTimeOffset(dateTimeOffset As DateTimeOffset) As Instant
  overload: NodaTime.Instant.FromDateTimeOffset*
- uid: NodaTime.Instant.FromJulianDate(System.Double)
  commentId: M:NodaTime.Instant.FromJulianDate(System.Double)
  id: FromJulianDate(System.Double)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromJulianDate(double)
  nameWithType: Instant.FromJulianDate(double)
  fullName: NodaTime.Instant.FromJulianDate(double)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Converts a Julian Date representing the given number of days

    since <xref href="NodaTime.NodaConstants.JulianEpoch" data-throw-if-not-resolved="false"></xref> (noon on January 1st, 4713 BCE in the Julian calendar)

    into an <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Instant FromJulianDate(double julianDate)
    parameters:
    - id: julianDate
      type: System.Double
      description: The number of days since the Julian Epoch to convert into an <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value which is <code class="paramref">julianDate</code> days after the Julian Epoch.
    content.vb: Public Shared Function FromJulianDate(julianDate As Double) As Instant
  overload: NodaTime.Instant.FromJulianDate*
  nameWithType.vb: Instant.FromJulianDate(Double)
  fullName.vb: NodaTime.Instant.FromJulianDate(Double)
  name.vb: FromJulianDate(Double)
- uid: NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  commentId: M:NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  id: FromDateTimeUtc(System.DateTime)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromDateTimeUtc(DateTime)
  nameWithType: Instant.FromDateTimeUtc(DateTime)
  fullName: NodaTime.Instant.FromDateTimeUtc(System.DateTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> into a new Instant representing the same instant in time.
  example: []
  syntax:
    content: public static Instant FromDateTimeUtc(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Date and time value which must have a <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref> of <xref href="System.DateTimeKind.Utc" data-throw-if-not-resolved="false"></xref>
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> value representing the same instant in time as the given universal <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromDateTimeUtc(dateTime As Date) As Instant
  overload: NodaTime.Instant.FromDateTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">dateTime</code> is not of <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref><xref href="System.DateTimeKind.Utc" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: Instant.FromDateTimeUtc(Date)
  fullName.vb: NodaTime.Instant.FromDateTimeUtc(Date)
  name.vb: FromDateTimeUtc(Date)
- uid: NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
  commentId: M:NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
  id: FromUnixTimeSeconds(System.Int64)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromUnixTimeSeconds(long)
  nameWithType: Instant.FromUnixTimeSeconds(long)
  fullName: NodaTime.Instant.FromUnixTimeSeconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Initializes a new instance of the <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> struct based

    on a number of seconds since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
  example: []
  syntax:
    content: public static Instant FromUnixTimeSeconds(long seconds)
    parameters:
    - id: seconds
      type: System.Int64
      description: Number of seconds since the Unix epoch. May be negative (for instants before the epoch).
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> at exactly the given number of seconds since the Unix epoch.
    content.vb: Public Shared Function FromUnixTimeSeconds(seconds As Long) As Instant
  overload: NodaTime.Instant.FromUnixTimeSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The constructed instant would be out of the range representable in Noda Time.
  nameWithType.vb: Instant.FromUnixTimeSeconds(Long)
  fullName.vb: NodaTime.Instant.FromUnixTimeSeconds(Long)
  name.vb: FromUnixTimeSeconds(Long)
- uid: NodaTime.Instant.FromUnixTimeMilliseconds(System.Int64)
  commentId: M:NodaTime.Instant.FromUnixTimeMilliseconds(System.Int64)
  id: FromUnixTimeMilliseconds(System.Int64)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromUnixTimeMilliseconds(long)
  nameWithType: Instant.FromUnixTimeMilliseconds(long)
  fullName: NodaTime.Instant.FromUnixTimeMilliseconds(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Initializes a new instance of the <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> struct based

    on a number of milliseconds since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
  example: []
  syntax:
    content: public static Instant FromUnixTimeMilliseconds(long milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int64
      description: Number of milliseconds since the Unix epoch. May be negative (for instants before the epoch).
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> at exactly the given number of milliseconds since the Unix epoch.
    content.vb: Public Shared Function FromUnixTimeMilliseconds(milliseconds As Long) As Instant
  overload: NodaTime.Instant.FromUnixTimeMilliseconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The constructed instant would be out of the range representable in Noda Time.
  nameWithType.vb: Instant.FromUnixTimeMilliseconds(Long)
  fullName.vb: NodaTime.Instant.FromUnixTimeMilliseconds(Long)
  name.vb: FromUnixTimeMilliseconds(Long)
- uid: NodaTime.Instant.FromUnixTimeTicks(System.Int64)
  commentId: M:NodaTime.Instant.FromUnixTimeTicks(System.Int64)
  id: FromUnixTimeTicks(System.Int64)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: FromUnixTimeTicks(long)
  nameWithType: Instant.FromUnixTimeTicks(long)
  fullName: NodaTime.Instant.FromUnixTimeTicks(long)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Initializes a new instance of the <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> struct based

    on a number of ticks since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
  example: []
  syntax:
    content: public static Instant FromUnixTimeTicks(long ticks)
    parameters:
    - id: ticks
      type: System.Int64
      description: Number of ticks since the Unix epoch. May be negative (for instants before the epoch).
    return:
      type: NodaTime.Instant
      description: An <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> at exactly the given number of ticks since the Unix epoch.
    content.vb: Public Shared Function FromUnixTimeTicks(ticks As Long) As Instant
  overload: NodaTime.Instant.FromUnixTimeTicks*
  nameWithType.vb: Instant.FromUnixTimeTicks(Long)
  fullName.vb: NodaTime.Instant.FromUnixTimeTicks(Long)
  name.vb: FromUnixTimeTicks(Long)
- uid: NodaTime.Instant.ToUnixTimeSeconds
  commentId: M:NodaTime.Instant.ToUnixTimeSeconds
  id: ToUnixTimeSeconds
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToUnixTimeSeconds()
  nameWithType: Instant.ToUnixTimeSeconds()
  fullName: NodaTime.Instant.ToUnixTimeSeconds()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the number of seconds since the Unix epoch. Negative values represent instants before the Unix epoch.
  remarks: If the number of nanoseconds in this instant is not an exact number of seconds, the value is truncated towards the start of time.
  example: []
  syntax:
    content: public long ToUnixTimeSeconds()
    return:
      type: System.Int64
      description: The number of seconds since the Unix epoch.
    content.vb: Public Function ToUnixTimeSeconds() As Long
  overload: NodaTime.Instant.ToUnixTimeSeconds*
- uid: NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds
  commentId: M:NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds
  id: ToUnixTimeSecondsAndNanoseconds
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToUnixTimeSecondsAndNanoseconds()
  nameWithType: Instant.ToUnixTimeSecondsAndNanoseconds()
  fullName: NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Gets the number of seconds since the Unix epoch, along with remaining nanoseconds.

    Negative values for seconds represent instants before the Unix epoch.
  remarks: >-
    <p>

    If the number of nanoseconds in this instant is not an exact number of seconds

    the seconds part of the returned value is truncated towards the start of time, ensuring that

    the nanoseconds part is always non-negative. The seconds part of the returned value is always

    the same as would be returned by <xref href="NodaTime.Instant.ToUnixTimeSeconds" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The inverse of this operation is to first call <xref href="NodaTime.Instant.FromUnixTimeSeconds(System.Int64)" data-throw-if-not-resolved="false"></xref> and then

    call <xref href="NodaTime.Instant.PlusNanoseconds(System.Int64)" data-throw-if-not-resolved="false"></xref> on the returned <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public (long seconds, int nanoseconds) ToUnixTimeSecondsAndNanoseconds()
    return:
      type: System.ValueTuple{System.Int64,System.Int32}
      description: The number of seconds and remaining nanoseconds since the Unix epoch.
    content.vb: Public Function ToUnixTimeSecondsAndNanoseconds() As (seconds As Long, nanoseconds As Integer)
  overload: NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds*
- uid: NodaTime.Instant.ToUnixTimeMilliseconds
  commentId: M:NodaTime.Instant.ToUnixTimeMilliseconds
  id: ToUnixTimeMilliseconds
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToUnixTimeMilliseconds()
  nameWithType: Instant.ToUnixTimeMilliseconds()
  fullName: NodaTime.Instant.ToUnixTimeMilliseconds()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the number of milliseconds since the Unix epoch. Negative values represent instants before the Unix epoch.
  remarks: If the number of nanoseconds in this instant is not an exact number of milliseconds, the value is truncated towards the start of time.
  example: []
  syntax:
    content: public long ToUnixTimeMilliseconds()
    return:
      type: System.Int64
      description: The number of milliseconds since the Unix epoch.
    content.vb: Public Function ToUnixTimeMilliseconds() As Long
  overload: NodaTime.Instant.ToUnixTimeMilliseconds*
- uid: NodaTime.Instant.ToUnixTimeTicks
  commentId: M:NodaTime.Instant.ToUnixTimeTicks
  id: ToUnixTimeTicks
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: ToUnixTimeTicks()
  nameWithType: Instant.ToUnixTimeTicks()
  fullName: NodaTime.Instant.ToUnixTimeTicks()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the number of ticks since the Unix epoch. Negative values represent instants before the Unix epoch.
  remarks: >-
    A tick is equal to 100 nanoseconds. There are 10,000 ticks in a millisecond. If the number of nanoseconds

    in this instant is not an exact number of ticks, the value is truncated towards the start of time.
  example: []
  syntax:
    content: public long ToUnixTimeTicks()
    return:
      type: System.Int64
      description: The number of ticks since the Unix epoch.
    content.vb: Public Function ToUnixTimeTicks() As Long
  overload: NodaTime.Instant.ToUnixTimeTicks*
- uid: NodaTime.Instant.InUtc
  commentId: M:NodaTime.Instant.InUtc
  id: InUtc
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: InUtc()
  nameWithType: Instant.InUtc()
  fullName: NodaTime.Instant.InUtc()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> representing the same point in time as this instant, in the UTC time

    zone and ISO-8601 calendar. This is a shortcut for calling <xref href="NodaTime.Instant.InZone(NodaTime.DateTimeZone)" data-throw-if-not-resolved="false"></xref> with an

    argument of <xref href="NodaTime.DateTimeZone.Utc" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ZonedDateTime InUtc()
    return:
      type: NodaTime.ZonedDateTime
      description: >-
        A <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> for the same instant, in the UTC time zone
            and the ISO-8601 calendar
    content.vb: Public Function InUtc() As ZonedDateTime
  overload: NodaTime.Instant.InUtc*
- uid: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  commentId: M:NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  id: InZone(NodaTime.DateTimeZone)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: InZone(DateTimeZone)
  nameWithType: Instant.InZone(DateTimeZone)
  fullName: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> representing the same point in time as this instant, in the

    specified time zone and ISO-8601 calendar.
  example: []
  syntax:
    content: public ZonedDateTime InZone(DateTimeZone zone)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which to represent this instant.
    return:
      type: NodaTime.ZonedDateTime
      description: >-
        A <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> for the same instant, in the given time zone
            and the ISO-8601 calendar
    content.vb: Public Function InZone(zone As DateTimeZone) As ZonedDateTime
  overload: NodaTime.Instant.InZone*
- uid: NodaTime.Instant.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  commentId: M:NodaTime.Instant.InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  id: InZone(NodaTime.DateTimeZone,NodaTime.CalendarSystem)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: InZone(DateTimeZone, CalendarSystem)
  nameWithType: Instant.InZone(DateTimeZone, CalendarSystem)
  fullName: NodaTime.Instant.InZone(NodaTime.DateTimeZone, NodaTime.CalendarSystem)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> representing the same point in time as this instant, in the

    specified time zone and calendar system.
  example: []
  syntax:
    content: public ZonedDateTime InZone(DateTimeZone zone, CalendarSystem calendar)
    parameters:
    - id: zone
      type: NodaTime.DateTimeZone
      description: The time zone in which to represent this instant.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar system in which to represent this instant.
    return:
      type: NodaTime.ZonedDateTime
      description: >-
        A <xref href="NodaTime.ZonedDateTime" data-throw-if-not-resolved="false"></xref> for the same instant, in the given time zone
            and calendar
    content.vb: Public Function InZone(zone As DateTimeZone, calendar As CalendarSystem) As ZonedDateTime
  overload: NodaTime.Instant.InZone*
- uid: NodaTime.Instant.WithOffset(NodaTime.Offset)
  commentId: M:NodaTime.Instant.WithOffset(NodaTime.Offset)
  id: WithOffset(NodaTime.Offset)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: WithOffset(Offset)
  nameWithType: Instant.WithOffset(Offset)
  fullName: NodaTime.Instant.WithOffset(NodaTime.Offset)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the same point in time as this instant, with

    the specified UTC offset in the ISO calendar system.
  example: []
  syntax:
    content: public OffsetDateTime WithOffset(Offset offset)
    parameters:
    - id: offset
      type: NodaTime.Offset
      description: The offset from UTC with which to represent this instant.
    return:
      type: NodaTime.OffsetDateTime
      description: >-
        An <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> for the same instant, with the given offset
            in the ISO calendar system
    content.vb: Public Function WithOffset(offset As Offset) As OffsetDateTime
  overload: NodaTime.Instant.WithOffset*
- uid: NodaTime.Instant.WithOffset(NodaTime.Offset,NodaTime.CalendarSystem)
  commentId: M:NodaTime.Instant.WithOffset(NodaTime.Offset,NodaTime.CalendarSystem)
  id: WithOffset(NodaTime.Offset,NodaTime.CalendarSystem)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: WithOffset(Offset, CalendarSystem)
  nameWithType: Instant.WithOffset(Offset, CalendarSystem)
  fullName: NodaTime.Instant.WithOffset(NodaTime.Offset, NodaTime.CalendarSystem)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns the <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> representing the same point in time as this instant, with

    the specified UTC offset and calendar system.
  example: []
  syntax:
    content: public OffsetDateTime WithOffset(Offset offset, CalendarSystem calendar)
    parameters:
    - id: offset
      type: NodaTime.Offset
      description: The offset from UTC with which to represent this instant.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: The calendar system in which to represent this instant.
    return:
      type: NodaTime.OffsetDateTime
      description: >-
        An <xref href="NodaTime.OffsetDateTime" data-throw-if-not-resolved="false"></xref> for the same instant, with the given offset
            and calendar
    content.vb: Public Function WithOffset(offset As Offset, calendar As CalendarSystem) As OffsetDateTime
  overload: NodaTime.Instant.WithOffset*
- uid: NodaTime.Instant.AddSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:NodaTime.Instant.AddSchema(System.Xml.Schema.XmlSchemaSet)
  id: AddSchema(System.Xml.Schema.XmlSchemaSet)
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: AddSchema(XmlSchemaSet)
  nameWithType: Instant.AddSchema(XmlSchemaSet)
  fullName: NodaTime.Instant.AddSchema(System.Xml.Schema.XmlSchemaSet)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Adds the XML schema type describing the structure of the <xref href="NodaTime.Instant" data-throw-if-not-resolved="false"></xref> XML serialization to the given <code class="paramref">xmlSchemaSet</code>.
  example: []
  syntax:
    content: public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet)
    parameters:
    - id: xmlSchemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The XML schema set provided by <xref href="System.Xml.Serialization.XmlSchemaExporter" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.XmlQualifiedName
      description: The qualified name of the schema type that was added to the <code class="paramref">xmlSchemaSet</code>.
    content.vb: Public Shared Function AddSchema(xmlSchemaSet As XmlSchemaSet) As XmlQualifiedName
  overload: NodaTime.Instant.AddSchema*
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: IXmlSerializable.GetSchema()
  nameWithType: Instant.IXmlSerializable.GetSchema()
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: This method is reserved and should not be used. When implementing the <code>IXmlSerializable</code> interface, you should return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (<code>Nothing</code> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <xref href="System.Xml.Serialization.XmlSchemaProviderAttribute" data-throw-if-not-resolved="false"></xref> to the class.
  example: []
  syntax:
    content: XmlSchema IXmlSerializable.GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: An <xref href="System.Xml.Schema.XmlSchema" data-throw-if-not-resolved="false"></xref> that describes the XML representation of the object that is produced by the <xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" data-throw-if-not-resolved="false"></xref> method and consumed by the <xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: ''
  overload: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: Instant.IXmlSerializable.ReadXml(XmlReader)
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Generates an object from its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the object is deserialized.
    content.vb: ''
  overload: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: NodaTime.Instant
  langs:
  - csharp
  - vb
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: Instant.IXmlSerializable.WriteXml(XmlWriter)
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts an object into its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the object is serialized.
    content.vb: ''
  overload: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  href: NodaTime.Instant.html
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.NodaConstants.UnixEpoch
  commentId: P:NodaTime.NodaConstants.UnixEpoch
  href: NodaTime.NodaConstants.html#NodaTime_NodaConstants_UnixEpoch
  name: UnixEpoch
  nameWithType: NodaConstants.UnixEpoch
  fullName: NodaTime.NodaConstants.UnixEpoch
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.IEquatable{NodaTime.Instant}
  commentId: T:System.IEquatable{NodaTime.Instant}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Instant>
  nameWithType: IEquatable<Instant>
  fullName: System.IEquatable<NodaTime.Instant>
  nameWithType.vb: IEquatable(Of Instant)
  fullName.vb: System.IEquatable(Of NodaTime.Instant)
  name.vb: IEquatable(Of Instant)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.IComparable{NodaTime.Instant}
  commentId: T:System.IComparable{NodaTime.Instant}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<Instant>
  nameWithType: IComparable<Instant>
  fullName: System.IComparable<NodaTime.Instant>
  nameWithType.vb: IComparable(Of Instant)
  fullName.vb: System.IComparable(Of NodaTime.Instant)
  name.vb: IComparable(Of Instant)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  commentId: T:System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  parent: System.Numerics
  definition: System.Numerics.IAdditionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<Instant, Duration, Instant>
  nameWithType: IAdditionOperators<Instant, Duration, Instant>
  fullName: System.Numerics.IAdditionOperators<NodaTime.Instant, NodaTime.Duration, NodaTime.Instant>
  nameWithType.vb: IAdditionOperators(Of Instant, Duration, Instant)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.Instant, NodaTime.Duration, NodaTime.Instant)
  name.vb: IAdditionOperators(Of Instant, Duration, Instant)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  commentId: T:System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  parent: System.Numerics
  definition: System.Numerics.ISubtractionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<Instant, Duration, Instant>
  nameWithType: ISubtractionOperators<Instant, Duration, Instant>
  fullName: System.Numerics.ISubtractionOperators<NodaTime.Instant, NodaTime.Duration, NodaTime.Instant>
  nameWithType.vb: ISubtractionOperators(Of Instant, Duration, Instant)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.Instant, NodaTime.Duration, NodaTime.Instant)
  name.vb: ISubtractionOperators(Of Instant, Duration, Instant)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}
  commentId: T:System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}
  parent: System.Numerics
  definition: System.Numerics.ISubtractionOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<Instant, Instant, Duration>
  nameWithType: ISubtractionOperators<Instant, Instant, Duration>
  fullName: System.Numerics.ISubtractionOperators<NodaTime.Instant, NodaTime.Instant, NodaTime.Duration>
  nameWithType.vb: ISubtractionOperators(Of Instant, Instant, Duration)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.Instant, NodaTime.Instant, NodaTime.Duration)
  name.vb: ISubtractionOperators(Of Instant, Instant, Duration)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  commentId: T:System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IComparisonOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<Instant, Instant, bool>
  nameWithType: IComparisonOperators<Instant, Instant, bool>
  fullName: System.Numerics.IComparisonOperators<NodaTime.Instant, NodaTime.Instant, bool>
  nameWithType.vb: IComparisonOperators(Of Instant, Instant, Boolean)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean)
  name.vb: IComparisonOperators(Of Instant, Instant, Boolean)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  commentId: T:System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IEqualityOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<Instant, Instant, bool>
  nameWithType: IEqualityOperators<Instant, Instant, bool>
  fullName: System.Numerics.IEqualityOperators<NodaTime.Instant, NodaTime.Instant, bool>
  nameWithType.vb: IEqualityOperators(Of Instant, Instant, Boolean)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean)
  name.vb: IEqualityOperators(Of Instant, Instant, Boolean)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Numerics.IMinMaxValue{NodaTime.Instant}
  commentId: T:System.Numerics.IMinMaxValue{NodaTime.Instant}
  parent: System.Numerics
  definition: System.Numerics.IMinMaxValue`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  name: IMinMaxValue<Instant>
  nameWithType: IMinMaxValue<Instant>
  fullName: System.Numerics.IMinMaxValue<NodaTime.Instant>
  nameWithType.vb: IMinMaxValue(Of Instant)
  fullName.vb: System.Numerics.IMinMaxValue(Of NodaTime.Instant)
  name.vb: IMinMaxValue(Of Instant)
  spec.csharp:
  - uid: System.Numerics.IMinMaxValue`1
    name: IMinMaxValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  - name: <
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IMinMaxValue`1
    name: IMinMaxValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
- uid: System.Numerics.IAdditionOperators`3
  commentId: T:System.Numerics.IAdditionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  name: IAdditionOperators<TSelf, TOther, TResult>
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult)
  name.vb: IAdditionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IAdditionOperators`3
    name: IAdditionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Numerics.ISubtractionOperators`3
  commentId: T:System.Numerics.ISubtractionOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  name: ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult)
  name.vb: ISubtractionOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.ISubtractionOperators`3
    name: ISubtractionOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IComparisonOperators`3
  commentId: T:System.Numerics.IComparisonOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<TSelf, TOther, TResult>
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult)
  name.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IEqualityOperators`3
  commentId: T:System.Numerics.IEqualityOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<TSelf, TOther, TResult>
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult)
  name.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics.IMinMaxValue`1
  commentId: T:System.Numerics.IMinMaxValue`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  name: IMinMaxValue<TSelf>
  nameWithType: IMinMaxValue<TSelf>
  fullName: System.Numerics.IMinMaxValue<TSelf>
  nameWithType.vb: IMinMaxValue(Of TSelf)
  fullName.vb: System.Numerics.IMinMaxValue(Of TSelf)
  name.vb: IMinMaxValue(Of TSelf)
  spec.csharp:
  - uid: System.Numerics.IMinMaxValue`1
    name: IMinMaxValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  - name: <
  - name: TSelf
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IMinMaxValue`1
    name: IMinMaxValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.Instant.MinValue*
  commentId: Overload:NodaTime.Instant.MinValue
  href: NodaTime.Instant.html#NodaTime_Instant_MinValue
  name: MinValue
  nameWithType: Instant.MinValue
  fullName: NodaTime.Instant.MinValue
- uid: System.Numerics.IMinMaxValue{NodaTime.Instant}.MinValue
  commentId: P:System.Numerics.IMinMaxValue{NodaTime.Instant}.MinValue
  parent: System.Numerics.IMinMaxValue{NodaTime.Instant}
  definition: System.Numerics.IMinMaxValue`1.MinValue
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1.minvalue
  name: MinValue
  nameWithType: IMinMaxValue<Instant>.MinValue
  fullName: System.Numerics.IMinMaxValue<NodaTime.Instant>.MinValue
  nameWithType.vb: IMinMaxValue(Of Instant).MinValue
  fullName.vb: System.Numerics.IMinMaxValue(Of NodaTime.Instant).MinValue
- uid: System.Numerics.IMinMaxValue`1.MinValue
  commentId: P:System.Numerics.IMinMaxValue`1.MinValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1.minvalue
  name: MinValue
  nameWithType: IMinMaxValue<TSelf>.MinValue
  fullName: System.Numerics.IMinMaxValue<TSelf>.MinValue
  nameWithType.vb: IMinMaxValue(Of TSelf).MinValue
  fullName.vb: System.Numerics.IMinMaxValue(Of TSelf).MinValue
- uid: NodaTime.Instant.MaxValue*
  commentId: Overload:NodaTime.Instant.MaxValue
  href: NodaTime.Instant.html#NodaTime_Instant_MaxValue
  name: MaxValue
  nameWithType: Instant.MaxValue
  fullName: NodaTime.Instant.MaxValue
- uid: System.Numerics.IMinMaxValue{NodaTime.Instant}.MaxValue
  commentId: P:System.Numerics.IMinMaxValue{NodaTime.Instant}.MaxValue
  parent: System.Numerics.IMinMaxValue{NodaTime.Instant}
  definition: System.Numerics.IMinMaxValue`1.MaxValue
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1.maxvalue
  name: MaxValue
  nameWithType: IMinMaxValue<Instant>.MaxValue
  fullName: System.Numerics.IMinMaxValue<NodaTime.Instant>.MaxValue
  nameWithType.vb: IMinMaxValue(Of Instant).MaxValue
  fullName.vb: System.Numerics.IMinMaxValue(Of NodaTime.Instant).MaxValue
- uid: System.Numerics.IMinMaxValue`1.MaxValue
  commentId: P:System.Numerics.IMinMaxValue`1.MaxValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iminmaxvalue-1.maxvalue
  name: MaxValue
  nameWithType: IMinMaxValue<TSelf>.MaxValue
  fullName: System.Numerics.IMinMaxValue<TSelf>.MaxValue
  nameWithType.vb: IMinMaxValue(Of TSelf).MaxValue
  fullName.vb: System.Numerics.IMinMaxValue(Of TSelf).MaxValue
- uid: NodaTime.Instant.CompareTo*
  commentId: Overload:NodaTime.Instant.CompareTo
  href: NodaTime.Instant.html#NodaTime_Instant_CompareTo_NodaTime_Instant_
  name: CompareTo
  nameWithType: Instant.CompareTo
  fullName: NodaTime.Instant.CompareTo
- uid: System.IComparable{NodaTime.Instant}.CompareTo(NodaTime.Instant)
  commentId: M:System.IComparable{NodaTime.Instant}.CompareTo(NodaTime.Instant)
  parent: System.IComparable{NodaTime.Instant}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(Instant)
  nameWithType: IComparable<Instant>.CompareTo(Instant)
  fullName: System.IComparable<NodaTime.Instant>.CompareTo(NodaTime.Instant)
  nameWithType.vb: IComparable(Of Instant).CompareTo(Instant)
  fullName.vb: System.IComparable(Of NodaTime.Instant).CompareTo(NodaTime.Instant)
  spec.csharp:
  - uid: System.IComparable{NodaTime.Instant}.CompareTo(NodaTime.Instant)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - uid: System.IComparable{NodaTime.Instant}.CompareTo(NodaTime.Instant)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.Instant.CompareTo(NodaTime.Instant)
  commentId: M:NodaTime.Instant.CompareTo(NodaTime.Instant)
  href: NodaTime.Instant.html#NodaTime_Instant_CompareTo_NodaTime_Instant_
  name: CompareTo(Instant)
  nameWithType: Instant.CompareTo(Instant)
  fullName: NodaTime.Instant.CompareTo(NodaTime.Instant)
  spec.csharp:
  - uid: NodaTime.Instant.CompareTo(NodaTime.Instant)
    name: CompareTo
    href: NodaTime.Instant.html#NodaTime_Instant_CompareTo_NodaTime_Instant_
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - uid: NodaTime.Instant.CompareTo(NodaTime.Instant)
    name: CompareTo
    href: NodaTime.Instant.html#NodaTime_Instant_CompareTo_NodaTime_Instant_
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NodaTime.Instant.System#IComparable#CompareTo*
  commentId: Overload:NodaTime.Instant.System#IComparable#CompareTo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable.CompareTo
  nameWithType: Instant.IComparable.CompareTo
  fullName: NodaTime.Instant.System.IComparable.CompareTo
  spec.csharp:
  - uid: System.IComparable*
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable
  - name: .
  - uid: NodaTime.Instant.System#IComparable#CompareTo*
    name: CompareTo
    href: NodaTime.Instant.html#NodaTime_Instant_System_IComparable_CompareTo_System_Object_
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.Instant.Equals*
  commentId: Overload:NodaTime.Instant.Equals
  href: NodaTime.Instant.html#NodaTime_Instant_Equals_System_Object_
  name: Equals
  nameWithType: Instant.Equals
  fullName: NodaTime.Instant.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NodaTime.Instant.GetHashCode*
  commentId: Overload:NodaTime.Instant.GetHashCode
  href: NodaTime.Instant.html#NodaTime_Instant_GetHashCode
  name: GetHashCode
  nameWithType: Instant.GetHashCode
  fullName: NodaTime.Instant.GetHashCode
- uid: NodaTime.Instant.PlusTicks*
  commentId: Overload:NodaTime.Instant.PlusTicks
  href: NodaTime.Instant.html#NodaTime_Instant_PlusTicks_System_Int64_
  name: PlusTicks
  nameWithType: Instant.PlusTicks
  fullName: NodaTime.Instant.PlusTicks
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: NodaTime.Instant.PlusNanoseconds*
  commentId: Overload:NodaTime.Instant.PlusNanoseconds
  href: NodaTime.Instant.html#NodaTime_Instant_PlusNanoseconds_System_Int64_
  name: PlusNanoseconds
  nameWithType: Instant.PlusNanoseconds
  fullName: NodaTime.Instant.PlusNanoseconds
- uid: NodaTime.Duration
  commentId: T:NodaTime.Duration
  parent: NodaTime
  href: NodaTime.Duration.html
  name: Duration
  nameWithType: Duration
  fullName: NodaTime.Duration
- uid: NodaTime.Instant.op_Addition*
  commentId: Overload:NodaTime.Instant.op_Addition
  href: NodaTime.Instant.html#NodaTime_Instant_op_Addition_NodaTime_Instant_NodaTime_Duration_
  name: operator +
  nameWithType: Instant.operator +
  fullName: NodaTime.Instant.operator +
  nameWithType.vb: Instant.+
  fullName.vb: NodaTime.Instant.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_Addition*
    name: +
    href: NodaTime.Instant.html#NodaTime_Instant_op_Addition_NodaTime_Instant_NodaTime_Duration_
- uid: System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Addition(NodaTime.Instant,NodaTime.Duration)
  commentId: M:System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Addition(NodaTime.Instant,NodaTime.Duration)
  parent: System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  definition: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(Instant, Duration)
  nameWithType: IAdditionOperators<Instant, Duration, Instant>.operator +(Instant, Duration)
  fullName: System.Numerics.IAdditionOperators<NodaTime.Instant, NodaTime.Duration, NodaTime.Instant>.operator +(NodaTime.Instant, NodaTime.Duration)
  nameWithType.vb: IAdditionOperators(Of Instant, Duration, Instant).+(Instant, Duration)
  fullName.vb: System.Numerics.IAdditionOperators(Of NodaTime.Instant, NodaTime.Duration, NodaTime.Instant).+(NodaTime.Instant, NodaTime.Duration)
  name.vb: +(Instant, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Addition(NodaTime.Instant,NodaTime.Duration)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: +
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  commentId: M:System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  name: operator +(TSelf, TOther)
  nameWithType: IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  fullName: System.Numerics.IAdditionOperators<TSelf, TOther, TResult>.operator +(TSelf, TOther)
  nameWithType.vb: IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  fullName.vb: System.Numerics.IAdditionOperators(Of TSelf, TOther, TResult).+(TSelf, TOther)
  name.vb: +(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IAdditionOperators`3.op_Addition(`0,`1)
    name: +
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iadditionoperators-3.op_addition
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: +
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.Add*
  commentId: Overload:NodaTime.Instant.Add
  href: NodaTime.Instant.html#NodaTime_Instant_Add_NodaTime_Instant_NodaTime_Duration_
  name: Add
  nameWithType: Instant.Add
  fullName: NodaTime.Instant.Add
- uid: NodaTime.Instant.Plus*
  commentId: Overload:NodaTime.Instant.Plus
  href: NodaTime.Instant.html#NodaTime_Instant_Plus_NodaTime_Duration_
  name: Plus
  nameWithType: Instant.Plus
  fullName: NodaTime.Instant.Plus
- uid: NodaTime.Instant.op_Subtraction*
  commentId: Overload:NodaTime.Instant.op_Subtraction
  href: NodaTime.Instant.html#NodaTime_Instant_op_Subtraction_NodaTime_Instant_NodaTime_Instant_
  name: operator -
  nameWithType: Instant.operator -
  fullName: NodaTime.Instant.operator -
  nameWithType.vb: Instant.-
  fullName.vb: NodaTime.Instant.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_Subtraction*
    name: '-'
    href: NodaTime.Instant.html#NodaTime_Instant_op_Subtraction_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}
  definition: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(Instant, Instant)
  nameWithType: ISubtractionOperators<Instant, Instant, Duration>.operator -(Instant, Instant)
  fullName: System.Numerics.ISubtractionOperators<NodaTime.Instant, NodaTime.Instant, NodaTime.Duration>.operator -(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: ISubtractionOperators(Of Instant, Instant, Duration).-(Instant, Instant)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.Instant, NodaTime.Instant, NodaTime.Duration).-(NodaTime.Instant, NodaTime.Instant)
  name.vb: -(Instant, Instant)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Instant,NodaTime.Duration}.op_Subtraction(NodaTime.Instant,NodaTime.Instant)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  commentId: M:System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(TSelf, TOther)
  nameWithType: ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  fullName: System.Numerics.ISubtractionOperators<TSelf, TOther, TResult>.operator -(TSelf, TOther)
  nameWithType.vb: ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  fullName.vb: System.Numerics.ISubtractionOperators(Of TSelf, TOther, TResult).-(TSelf, TOther)
  name.vb: -(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  commentId: M:System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
  parent: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}
  definition: System.Numerics.ISubtractionOperators`3.op_Subtraction(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  name: operator -(Instant, Duration)
  nameWithType: ISubtractionOperators<Instant, Duration, Instant>.operator -(Instant, Duration)
  fullName: System.Numerics.ISubtractionOperators<NodaTime.Instant, NodaTime.Duration, NodaTime.Instant>.operator -(NodaTime.Instant, NodaTime.Duration)
  nameWithType.vb: ISubtractionOperators(Of Instant, Duration, Instant).-(Instant, Duration)
  fullName.vb: System.Numerics.ISubtractionOperators(Of NodaTime.Instant, NodaTime.Duration, NodaTime.Instant).-(NodaTime.Instant, NodaTime.Duration)
  name.vb: -(Instant, Duration)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.ISubtractionOperators{NodaTime.Instant,NodaTime.Duration,NodaTime.Instant}.op_Subtraction(NodaTime.Instant,NodaTime.Duration)
    name: '-'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.isubtractionoperators-3.op_subtraction
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
  spec.vb:
  - name: '-'
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Duration
    name: Duration
    href: NodaTime.Duration.html
  - name: )
- uid: NodaTime.Instant.Subtract*
  commentId: Overload:NodaTime.Instant.Subtract
  href: NodaTime.Instant.html#NodaTime_Instant_Subtract_NodaTime_Instant_NodaTime_Instant_
  name: Subtract
  nameWithType: Instant.Subtract
  fullName: NodaTime.Instant.Subtract
- uid: NodaTime.Instant.Minus*
  commentId: Overload:NodaTime.Instant.Minus
  href: NodaTime.Instant.html#NodaTime_Instant_Minus_NodaTime_Instant_
  name: Minus
  nameWithType: Instant.Minus
  fullName: NodaTime.Instant.Minus
- uid: NodaTime.Instant.op_Equality*
  commentId: Overload:NodaTime.Instant.op_Equality
  href: NodaTime.Instant.html#NodaTime_Instant_op_Equality_NodaTime_Instant_NodaTime_Instant_
  name: operator ==
  nameWithType: Instant.operator ==
  fullName: NodaTime.Instant.operator ==
  nameWithType.vb: Instant.=
  fullName.vb: NodaTime.Instant.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_Equality*
    name: ==
    href: NodaTime.Instant.html#NodaTime_Instant_op_Equality_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Equality(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Equality(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(Instant, Instant)
  nameWithType: IEqualityOperators<Instant, Instant, bool>.operator ==(Instant, Instant)
  fullName: System.Numerics.IEqualityOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator ==(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IEqualityOperators(Of Instant, Instant, Boolean).=(Instant, Instant)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).=(NodaTime.Instant, NodaTime.Instant)
  name.vb: =(Instant, Instant)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Equality(NodaTime.Instant,NodaTime.Instant)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: =
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  name.vb: =(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: =
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.op_Inequality*
  commentId: Overload:NodaTime.Instant.op_Inequality
  href: NodaTime.Instant.html#NodaTime_Instant_op_Inequality_NodaTime_Instant_NodaTime_Instant_
  name: operator !=
  nameWithType: Instant.operator !=
  fullName: NodaTime.Instant.operator !=
  nameWithType.vb: Instant.<>
  fullName.vb: NodaTime.Instant.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_Inequality*
    name: '!='
    href: NodaTime.Instant.html#NodaTime_Instant_op_Inequality_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Inequality(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(Instant, Instant)
  nameWithType: IEqualityOperators<Instant, Instant, bool>.operator !=(Instant, Instant)
  fullName: System.Numerics.IEqualityOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator !=(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IEqualityOperators(Of Instant, Instant, Boolean).<>(Instant, Instant)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).<>(NodaTime.Instant, NodaTime.Instant)
  name.vb: <>(Instant, Instant)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_Inequality(NodaTime.Instant,NodaTime.Instant)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  name.vb: <>(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.op_LessThan*
  commentId: Overload:NodaTime.Instant.op_LessThan
  href: NodaTime.Instant.html#NodaTime_Instant_op_LessThan_NodaTime_Instant_NodaTime_Instant_
  name: operator <
  nameWithType: Instant.operator <
  fullName: NodaTime.Instant.operator <
  nameWithType.vb: Instant.<
  fullName.vb: NodaTime.Instant.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_LessThan*
    name: <
    href: NodaTime.Instant.html#NodaTime_Instant_op_LessThan_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThan(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(Instant, Instant)
  nameWithType: IComparisonOperators<Instant, Instant, bool>.operator <(Instant, Instant)
  fullName: System.Numerics.IComparisonOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator <(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IComparisonOperators(Of Instant, Instant, Boolean).<(Instant, Instant)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).<(NodaTime.Instant, NodaTime.Instant)
  name.vb: <(Instant, Instant)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThan(NodaTime.Instant,NodaTime.Instant)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: <
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  name.vb: <(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.op_LessThanOrEqual*
  commentId: Overload:NodaTime.Instant.op_LessThanOrEqual
  href: NodaTime.Instant.html#NodaTime_Instant_op_LessThanOrEqual_NodaTime_Instant_NodaTime_Instant_
  name: operator <=
  nameWithType: Instant.operator <=
  fullName: NodaTime.Instant.operator <=
  nameWithType.vb: Instant.<=
  fullName.vb: NodaTime.Instant.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_LessThanOrEqual*
    name: <=
    href: NodaTime.Instant.html#NodaTime_Instant_op_LessThanOrEqual_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(Instant, Instant)
  nameWithType: IComparisonOperators<Instant, Instant, bool>.operator <=(Instant, Instant)
  fullName: System.Numerics.IComparisonOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator <=(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IComparisonOperators(Of Instant, Instant, Boolean).<=(Instant, Instant)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).<=(NodaTime.Instant, NodaTime.Instant)
  name.vb: <=(Instant, Instant)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_LessThanOrEqual(NodaTime.Instant,NodaTime.Instant)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  name.vb: <=(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.op_GreaterThan*
  commentId: Overload:NodaTime.Instant.op_GreaterThan
  href: NodaTime.Instant.html#NodaTime_Instant_op_GreaterThan_NodaTime_Instant_NodaTime_Instant_
  name: operator >
  nameWithType: Instant.operator >
  fullName: NodaTime.Instant.operator >
  nameWithType.vb: Instant.>
  fullName.vb: NodaTime.Instant.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_GreaterThan*
    name: '>'
    href: NodaTime.Instant.html#NodaTime_Instant_op_GreaterThan_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(Instant, Instant)
  nameWithType: IComparisonOperators<Instant, Instant, bool>.operator >(Instant, Instant)
  fullName: System.Numerics.IComparisonOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator >(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IComparisonOperators(Of Instant, Instant, Boolean).>(Instant, Instant)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).>(NodaTime.Instant, NodaTime.Instant)
  name.vb: '>(Instant, Instant)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThan(NodaTime.Instant,NodaTime.Instant)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  name.vb: '>(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.Instant.op_GreaterThanOrEqual*
  commentId: Overload:NodaTime.Instant.op_GreaterThanOrEqual
  href: NodaTime.Instant.html#NodaTime_Instant_op_GreaterThanOrEqual_NodaTime_Instant_NodaTime_Instant_
  name: operator >=
  nameWithType: Instant.operator >=
  fullName: NodaTime.Instant.operator >=
  nameWithType.vb: Instant.>=
  fullName.vb: NodaTime.Instant.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.Instant.op_GreaterThanOrEqual*
    name: '>='
    href: NodaTime.Instant.html#NodaTime_Instant_op_GreaterThanOrEqual_NodaTime_Instant_NodaTime_Instant_
- uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
  parent: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(Instant, Instant)
  nameWithType: IComparisonOperators<Instant, Instant, bool>.operator >=(Instant, Instant)
  fullName: System.Numerics.IComparisonOperators<NodaTime.Instant, NodaTime.Instant, bool>.operator >=(NodaTime.Instant, NodaTime.Instant)
  nameWithType.vb: IComparisonOperators(Of Instant, Instant, Boolean).>=(Instant, Instant)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.Instant, NodaTime.Instant, Boolean).>=(NodaTime.Instant, NodaTime.Instant)
  name.vb: '>=(Instant, Instant)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.Instant,NodaTime.Instant,System.Boolean}.op_GreaterThanOrEqual(NodaTime.Instant,NodaTime.Instant)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: ','
  - name: " "
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  name.vb: '>=(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.ZonedDateTime
  commentId: T:NodaTime.ZonedDateTime
  parent: NodaTime
  href: NodaTime.ZonedDateTime.html
  name: ZonedDateTime
  nameWithType: ZonedDateTime
  fullName: NodaTime.ZonedDateTime
- uid: NodaTime.Instant.FromUtc*
  commentId: Overload:NodaTime.Instant.FromUtc
  href: NodaTime.Instant.html#NodaTime_Instant_FromUtc_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: FromUtc
  nameWithType: Instant.FromUtc
  fullName: NodaTime.Instant.FromUtc
- uid: NodaTime.Instant.Max*
  commentId: Overload:NodaTime.Instant.Max
  href: NodaTime.Instant.html#NodaTime_Instant_Max_NodaTime_Instant_NodaTime_Instant_
  name: Max
  nameWithType: Instant.Max
  fullName: NodaTime.Instant.Max
- uid: NodaTime.Instant.Min*
  commentId: Overload:NodaTime.Instant.Min
  href: NodaTime.Instant.html#NodaTime_Instant_Min_NodaTime_Instant_NodaTime_Instant_
  name: Min
  nameWithType: Instant.Min
  fullName: NodaTime.Instant.Min
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: NodaTime.Instant.ToString*
  commentId: Overload:NodaTime.Instant.ToString
  href: NodaTime.Instant.html#NodaTime_Instant_ToString
  name: ToString
  nameWithType: Instant.ToString
  fullName: NodaTime.Instant.ToString
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IEquatable{NodaTime.Instant}.Equals(NodaTime.Instant)
  commentId: M:System.IEquatable{NodaTime.Instant}.Equals(NodaTime.Instant)
  parent: System.IEquatable{NodaTime.Instant}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Instant)
  nameWithType: IEquatable<Instant>.Equals(Instant)
  fullName: System.IEquatable<NodaTime.Instant>.Equals(NodaTime.Instant)
  nameWithType.vb: IEquatable(Of Instant).Equals(Instant)
  fullName.vb: System.IEquatable(Of NodaTime.Instant).Equals(NodaTime.Instant)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.Instant}.Equals(NodaTime.Instant)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.Instant}.Equals(NodaTime.Instant)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NodaTime.NodaConstants.JulianEpoch
  commentId: P:NodaTime.NodaConstants.JulianEpoch
  href: NodaTime.NodaConstants.html#NodaTime_NodaConstants_JulianEpoch
  name: JulianEpoch
  nameWithType: NodaConstants.JulianEpoch
  fullName: NodaTime.NodaConstants.JulianEpoch
- uid: NodaTime.Instant.ToJulianDate*
  commentId: Overload:NodaTime.Instant.ToJulianDate
  href: NodaTime.Instant.html#NodaTime_Instant_ToJulianDate
  name: ToJulianDate
  nameWithType: Instant.ToJulianDate
  fullName: NodaTime.Instant.ToJulianDate
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.DateTime.Kind
  commentId: P:System.DateTime.Kind
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime.kind
  name: Kind
  nameWithType: DateTime.Kind
  fullName: System.DateTime.Kind
  nameWithType.vb: Date.Kind
  fullName.vb: Date.Kind
- uid: System.DateTimeKind.Utc
  commentId: F:System.DateTimeKind.Utc
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimekind#system-datetimekind-utc
  name: Utc
  nameWithType: DateTimeKind.Utc
  fullName: System.DateTimeKind.Utc
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: NodaTime.Instant.ToDateTimeUtc*
  commentId: Overload:NodaTime.Instant.ToDateTimeUtc
  href: NodaTime.Instant.html#NodaTime_Instant_ToDateTimeUtc
  name: ToDateTimeUtc
  nameWithType: Instant.ToDateTimeUtc
  fullName: NodaTime.Instant.ToDateTimeUtc
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: NodaTime.Instant.ToDateTimeOffset*
  commentId: Overload:NodaTime.Instant.ToDateTimeOffset
  href: NodaTime.Instant.html#NodaTime_Instant_ToDateTimeOffset
  name: ToDateTimeOffset
  nameWithType: Instant.ToDateTimeOffset
  fullName: NodaTime.Instant.ToDateTimeOffset
- uid: NodaTime.Instant.FromDateTimeOffset*
  commentId: Overload:NodaTime.Instant.FromDateTimeOffset
  href: NodaTime.Instant.html#NodaTime_Instant_FromDateTimeOffset_System_DateTimeOffset_
  name: FromDateTimeOffset
  nameWithType: Instant.FromDateTimeOffset
  fullName: NodaTime.Instant.FromDateTimeOffset
- uid: NodaTime.Instant.FromJulianDate*
  commentId: Overload:NodaTime.Instant.FromJulianDate
  href: NodaTime.Instant.html#NodaTime_Instant_FromJulianDate_System_Double_
  name: FromJulianDate
  nameWithType: Instant.FromJulianDate
  fullName: NodaTime.Instant.FromJulianDate
- uid: NodaTime.Instant.FromDateTimeUtc*
  commentId: Overload:NodaTime.Instant.FromDateTimeUtc
  href: NodaTime.Instant.html#NodaTime_Instant_FromDateTimeUtc_System_DateTime_
  name: FromDateTimeUtc
  nameWithType: Instant.FromDateTimeUtc
  fullName: NodaTime.Instant.FromDateTimeUtc
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime.Instant.FromUnixTimeSeconds*
  commentId: Overload:NodaTime.Instant.FromUnixTimeSeconds
  href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeSeconds_System_Int64_
  name: FromUnixTimeSeconds
  nameWithType: Instant.FromUnixTimeSeconds
  fullName: NodaTime.Instant.FromUnixTimeSeconds
- uid: NodaTime.Instant.FromUnixTimeMilliseconds*
  commentId: Overload:NodaTime.Instant.FromUnixTimeMilliseconds
  href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeMilliseconds_System_Int64_
  name: FromUnixTimeMilliseconds
  nameWithType: Instant.FromUnixTimeMilliseconds
  fullName: NodaTime.Instant.FromUnixTimeMilliseconds
- uid: NodaTime.Instant.FromUnixTimeTicks*
  commentId: Overload:NodaTime.Instant.FromUnixTimeTicks
  href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeTicks_System_Int64_
  name: FromUnixTimeTicks
  nameWithType: Instant.FromUnixTimeTicks
  fullName: NodaTime.Instant.FromUnixTimeTicks
- uid: NodaTime.Instant.ToUnixTimeSeconds*
  commentId: Overload:NodaTime.Instant.ToUnixTimeSeconds
  href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeSeconds
  name: ToUnixTimeSeconds
  nameWithType: Instant.ToUnixTimeSeconds
  fullName: NodaTime.Instant.ToUnixTimeSeconds
- uid: NodaTime.Instant.ToUnixTimeSeconds
  commentId: M:NodaTime.Instant.ToUnixTimeSeconds
  href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeSeconds
  name: ToUnixTimeSeconds()
  nameWithType: Instant.ToUnixTimeSeconds()
  fullName: NodaTime.Instant.ToUnixTimeSeconds()
  spec.csharp:
  - uid: NodaTime.Instant.ToUnixTimeSeconds
    name: ToUnixTimeSeconds
    href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeSeconds
  - name: (
  - name: )
  spec.vb:
  - uid: NodaTime.Instant.ToUnixTimeSeconds
    name: ToUnixTimeSeconds
    href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeSeconds
  - name: (
  - name: )
- uid: NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
  commentId: M:NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
  isExternal: true
  href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeSeconds_System_Int64_
  name: FromUnixTimeSeconds(long)
  nameWithType: Instant.FromUnixTimeSeconds(long)
  fullName: NodaTime.Instant.FromUnixTimeSeconds(long)
  nameWithType.vb: Instant.FromUnixTimeSeconds(Long)
  fullName.vb: NodaTime.Instant.FromUnixTimeSeconds(Long)
  name.vb: FromUnixTimeSeconds(Long)
  spec.csharp:
  - uid: NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
    name: FromUnixTimeSeconds
    href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeSeconds_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: NodaTime.Instant.FromUnixTimeSeconds(System.Int64)
    name: FromUnixTimeSeconds
    href: NodaTime.Instant.html#NodaTime_Instant_FromUnixTimeSeconds_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: NodaTime.Instant.PlusNanoseconds(System.Int64)
  commentId: M:NodaTime.Instant.PlusNanoseconds(System.Int64)
  isExternal: true
  href: NodaTime.Instant.html#NodaTime_Instant_PlusNanoseconds_System_Int64_
  name: PlusNanoseconds(long)
  nameWithType: Instant.PlusNanoseconds(long)
  fullName: NodaTime.Instant.PlusNanoseconds(long)
  nameWithType.vb: Instant.PlusNanoseconds(Long)
  fullName.vb: NodaTime.Instant.PlusNanoseconds(Long)
  name.vb: PlusNanoseconds(Long)
  spec.csharp:
  - uid: NodaTime.Instant.PlusNanoseconds(System.Int64)
    name: PlusNanoseconds
    href: NodaTime.Instant.html#NodaTime_Instant_PlusNanoseconds_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: NodaTime.Instant.PlusNanoseconds(System.Int64)
    name: PlusNanoseconds
    href: NodaTime.Instant.html#NodaTime_Instant_PlusNanoseconds_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds*
  commentId: Overload:NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds
  href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeSecondsAndNanoseconds
  name: ToUnixTimeSecondsAndNanoseconds
  nameWithType: Instant.ToUnixTimeSecondsAndNanoseconds
  fullName: NodaTime.Instant.ToUnixTimeSecondsAndNanoseconds
- uid: System.ValueTuple{System.Int64,System.Int32}
  commentId: T:System.ValueTuple{System.Int64,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: (long seconds, int nanoseconds)
  nameWithType: (long seconds, int nanoseconds)
  fullName: (long seconds, int nanoseconds)
  nameWithType.vb: (seconds As Long, nanoseconds As Integer)
  fullName.vb: (seconds As Long, nanoseconds As Integer)
  name.vb: (seconds As Long, nanoseconds As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int32}.seconds
    name: seconds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int32-.seconds
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int32}.nanoseconds
    name: nanoseconds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int32-.nanoseconds
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int64,System.Int32}.seconds
    name: seconds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int32-.seconds
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int32}.nanoseconds
    name: nanoseconds
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int32-.nanoseconds
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: NodaTime.Instant.ToUnixTimeMilliseconds*
  commentId: Overload:NodaTime.Instant.ToUnixTimeMilliseconds
  href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeMilliseconds
  name: ToUnixTimeMilliseconds
  nameWithType: Instant.ToUnixTimeMilliseconds
  fullName: NodaTime.Instant.ToUnixTimeMilliseconds
- uid: NodaTime.Instant.ToUnixTimeTicks*
  commentId: Overload:NodaTime.Instant.ToUnixTimeTicks
  href: NodaTime.Instant.html#NodaTime_Instant_ToUnixTimeTicks
  name: ToUnixTimeTicks
  nameWithType: Instant.ToUnixTimeTicks
  fullName: NodaTime.Instant.ToUnixTimeTicks
- uid: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  commentId: M:NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  href: NodaTime.Instant.html#NodaTime_Instant_InZone_NodaTime_DateTimeZone_
  name: InZone(DateTimeZone)
  nameWithType: Instant.InZone(DateTimeZone)
  fullName: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
  spec.csharp:
  - uid: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
    name: InZone
    href: NodaTime.Instant.html#NodaTime_Instant_InZone_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
  spec.vb:
  - uid: NodaTime.Instant.InZone(NodaTime.DateTimeZone)
    name: InZone
    href: NodaTime.Instant.html#NodaTime_Instant_InZone_NodaTime_DateTimeZone_
  - name: (
  - uid: NodaTime.DateTimeZone
    name: DateTimeZone
    href: NodaTime.DateTimeZone.html
  - name: )
- uid: NodaTime.DateTimeZone.Utc
  commentId: P:NodaTime.DateTimeZone.Utc
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_Utc
  name: Utc
  nameWithType: DateTimeZone.Utc
  fullName: NodaTime.DateTimeZone.Utc
- uid: NodaTime.Instant.InUtc*
  commentId: Overload:NodaTime.Instant.InUtc
  href: NodaTime.Instant.html#NodaTime_Instant_InUtc
  name: InUtc
  nameWithType: Instant.InUtc
  fullName: NodaTime.Instant.InUtc
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime.Instant.InZone*
  commentId: Overload:NodaTime.Instant.InZone
  href: NodaTime.Instant.html#NodaTime_Instant_InZone_NodaTime_DateTimeZone_
  name: InZone
  nameWithType: Instant.InZone
  fullName: NodaTime.Instant.InZone
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  href: NodaTime.CalendarSystem.html
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.OffsetDateTime
  commentId: T:NodaTime.OffsetDateTime
  parent: NodaTime
  href: NodaTime.OffsetDateTime.html
  name: OffsetDateTime
  nameWithType: OffsetDateTime
  fullName: NodaTime.OffsetDateTime
- uid: NodaTime.Instant.WithOffset*
  commentId: Overload:NodaTime.Instant.WithOffset
  href: NodaTime.Instant.html#NodaTime_Instant_WithOffset_NodaTime_Offset_
  name: WithOffset
  nameWithType: Instant.WithOffset
  fullName: NodaTime.Instant.WithOffset
- uid: NodaTime.Offset
  commentId: T:NodaTime.Offset
  parent: NodaTime
  href: NodaTime.Offset.html
  name: Offset
  nameWithType: Offset
  fullName: NodaTime.Offset
- uid: System.Xml.Serialization.XmlSchemaExporter
  commentId: T:System.Xml.Serialization.XmlSchemaExporter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaexporter
  name: XmlSchemaExporter
  nameWithType: XmlSchemaExporter
  fullName: System.Xml.Serialization.XmlSchemaExporter
- uid: NodaTime.Instant.AddSchema*
  commentId: Overload:NodaTime.Instant.AddSchema
  href: NodaTime.Instant.html#NodaTime_Instant_AddSchema_System_Xml_Schema_XmlSchemaSet_
  name: AddSchema
  nameWithType: Instant.AddSchema
  fullName: NodaTime.Instant.AddSchema
- uid: System.Xml.Schema.XmlSchemaSet
  commentId: T:System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschemaset
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  commentId: T:System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlqualifiedname
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
- uid: System.Xml.Serialization.XmlSchemaProviderAttribute
  commentId: T:System.Xml.Serialization.XmlSchemaProviderAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaproviderattribute
  name: XmlSchemaProviderAttribute
  nameWithType: XmlSchemaProviderAttribute
  fullName: System.Xml.Serialization.XmlSchemaProviderAttribute
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschema
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema*
  commentId: Overload:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.GetSchema
  nameWithType: Instant.IXmlSerializable.GetSchema
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.GetSchema
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#GetSchema*
    name: GetSchema
    href: NodaTime.Instant.html#NodaTime_Instant_System_Xml_Serialization_IXmlSerializable_GetSchema
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml*
  commentId: Overload:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.ReadXml
  nameWithType: Instant.IXmlSerializable.ReadXml
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.ReadXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#ReadXml*
    name: ReadXml
    href: NodaTime.Instant.html#NodaTime_Instant_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml*
  commentId: Overload:NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.WriteXml
  nameWithType: Instant.IXmlSerializable.WriteXml
  fullName: NodaTime.Instant.System.Xml.Serialization.IXmlSerializable.WriteXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.Instant.System#Xml#Serialization#IXmlSerializable#WriteXml*
    name: WriteXml
    href: NodaTime.Instant.html#NodaTime_Instant_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_
shouldSkipMarkup: true
