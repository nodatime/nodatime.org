### YamlMime:ManagedReference
items:
- uid: NodaTime.YearMonth
  commentId: T:NodaTime.YearMonth
  id: YearMonth
  parent: NodaTime
  children:
  - NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32)
  - NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32,NodaTime.CalendarSystem)
  - NodaTime.YearMonth.#ctor(System.Int32,System.Int32)
  - NodaTime.YearMonth.#ctor(System.Int32,System.Int32,NodaTime.CalendarSystem)
  - NodaTime.YearMonth.AddSchema(System.Xml.Schema.XmlSchemaSet)
  - NodaTime.YearMonth.Calendar
  - NodaTime.YearMonth.CompareTo(NodaTime.YearMonth)
  - NodaTime.YearMonth.Equals(NodaTime.YearMonth)
  - NodaTime.YearMonth.Equals(System.Object)
  - NodaTime.YearMonth.Era
  - NodaTime.YearMonth.GetHashCode
  - NodaTime.YearMonth.Month
  - NodaTime.YearMonth.OnDayOfMonth(System.Int32)
  - NodaTime.YearMonth.PlusMonths(System.Int32)
  - NodaTime.YearMonth.System#IComparable#CompareTo(System.Object)
  - NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema
  - NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - NodaTime.YearMonth.ToDateInterval
  - NodaTime.YearMonth.ToString
  - NodaTime.YearMonth.ToString(System.String,System.IFormatProvider)
  - NodaTime.YearMonth.Year
  - NodaTime.YearMonth.YearOfEra
  - NodaTime.YearMonth.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  - NodaTime.YearMonth.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  - NodaTime.YearMonth.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  - NodaTime.YearMonth.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  - NodaTime.YearMonth.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  - NodaTime.YearMonth.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  langs:
  - csharp
  - vb
  name: YearMonth
  nameWithType: YearMonth
  fullName: NodaTime.YearMonth
  type: Struct
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A year and month in a particular calendar. This is effectively

    <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> without the day-of-month component.
  remarks: >-
    <p>

    Values can freely be compared for equality: a value in a different calendar system is not equal to

    a value in a different calendar system. However, ordering comparisons

    fail with <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>; attempting to compare values in different calendars

    almost always indicates a bug in the calling code.

    </p>
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(YearMonthTypeConverter))]

      public struct YearMonth : IEquatable<YearMonth>, IComparable<YearMonth>, IComparable, IFormattable, IXmlSerializable, IComparisonOperators<YearMonth, YearMonth, bool>, IEqualityOperators<YearMonth, YearMonth, bool>
    content.vb: >-
      <TypeConverter(GetType(YearMonthTypeConverter))>

      Public Structure YearMonth Implements IEquatable(Of YearMonth), IComparable(Of YearMonth), IComparable, IFormattable, IXmlSerializable, IComparisonOperators(Of YearMonth, YearMonth, Boolean), IEqualityOperators(Of YearMonth, YearMonth, Boolean)
  implements:
  - System.IEquatable{NodaTime.YearMonth}
  - System.IComparable{NodaTime.YearMonth}
  - System.IComparable
  - System.IFormattable
  - System.Xml.Serialization.IXmlSerializable
  - System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  - System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.YearMonth.Calendar
  commentId: P:NodaTime.YearMonth.Calendar
  id: Calendar
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: YearMonth.Calendar
  fullName: NodaTime.YearMonth.Calendar
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the calendar system associated with this year/month.
  example: []
  syntax:
    content: public CalendarSystem Calendar { get; }
    parameters: []
    return:
      type: NodaTime.CalendarSystem
      description: The calendar system associated with this year/month.
    content.vb: Public ReadOnly Property Calendar As CalendarSystem
  overload: NodaTime.YearMonth.Calendar*
- uid: NodaTime.YearMonth.Year
  commentId: P:NodaTime.YearMonth.Year
  id: Year
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: YearMonth.Year
  fullName: NodaTime.YearMonth.Year
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this year/month.
  remarks: >-
    This returns the "absolute year", so, for the ISO calendar,
        a value of 0 means 1 BC, for example.
  example: []
  syntax:
    content: public int Year { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this year/month.
    content.vb: Public ReadOnly Property Year As Integer
  overload: NodaTime.YearMonth.Year*
- uid: NodaTime.YearMonth.Month
  commentId: P:NodaTime.YearMonth.Month
  id: Month
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: YearMonth.Month
  fullName: NodaTime.YearMonth.Month
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the month of this year/month within the year.
  example: []
  syntax:
    content: public int Month { get; }
    parameters: []
    return:
      type: System.Int32
      description: The month of this year/month within the year.
    content.vb: Public ReadOnly Property Month As Integer
  overload: NodaTime.YearMonth.Month*
- uid: NodaTime.YearMonth.YearOfEra
  commentId: P:NodaTime.YearMonth.YearOfEra
  id: YearOfEra
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: YearOfEra
  nameWithType: YearMonth.YearOfEra
  fullName: NodaTime.YearMonth.YearOfEra
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the year of this value within the era.
  example: []
  syntax:
    content: public int YearOfEra { get; }
    parameters: []
    return:
      type: System.Int32
      description: The year of this value within the era.
    content.vb: Public ReadOnly Property YearOfEra As Integer
  overload: NodaTime.YearMonth.YearOfEra*
- uid: NodaTime.YearMonth.Era
  commentId: P:NodaTime.YearMonth.Era
  id: Era
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Era
  nameWithType: YearMonth.Era
  fullName: NodaTime.YearMonth.Era
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Gets the era of this year/month.
  example: []
  syntax:
    content: public Era Era { get; }
    parameters: []
    return:
      type: NodaTime.Calendars.Era
      description: The era of this year/month.
    content.vb: Public ReadOnly Property Era As Era
  overload: NodaTime.YearMonth.Era*
- uid: NodaTime.YearMonth.#ctor(System.Int32,System.Int32)
  commentId: M:NodaTime.YearMonth.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: YearMonth(int, int)
  nameWithType: YearMonth.YearMonth(int, int)
  fullName: NodaTime.YearMonth.YearMonth(int, int)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs an instance for the given year and month in the ISO calendar.
  example: []
  syntax:
    content: public YearMonth(int year, int month)
    parameters:
    - id: year
      type: System.Int32
      description: The year. This is the "absolute year", so a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    content.vb: Public Sub New(year As Integer, month As Integer)
  overload: NodaTime.YearMonth.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid year/month.
  nameWithType.vb: YearMonth.New(Integer, Integer)
  fullName.vb: NodaTime.YearMonth.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: NodaTime.YearMonth.#ctor(System.Int32,System.Int32,NodaTime.CalendarSystem)
  commentId: M:NodaTime.YearMonth.#ctor(System.Int32,System.Int32,NodaTime.CalendarSystem)
  id: '#ctor(System.Int32,System.Int32,NodaTime.CalendarSystem)'
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: YearMonth(int, int, CalendarSystem)
  nameWithType: YearMonth.YearMonth(int, int, CalendarSystem)
  fullName: NodaTime.YearMonth.YearMonth(int, int, NodaTime.CalendarSystem)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs an instance for the given year and month in the specified calendar.
  example: []
  syntax:
    content: public YearMonth(int year, int month, CalendarSystem calendar)
    parameters:
    - id: year
      type: System.Int32
      description: >-
        The year. This is the "absolute year", so, for
            the ISO calendar, a value of 0 means 1 BC, for example.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: Calendar system in which to create the year/month.
    content.vb: Public Sub New(year As Integer, month As Integer, calendar As CalendarSystem)
  overload: NodaTime.YearMonth.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid year/month.
  nameWithType.vb: YearMonth.New(Integer, Integer, CalendarSystem)
  fullName.vb: NodaTime.YearMonth.New(Integer, Integer, NodaTime.CalendarSystem)
  name.vb: New(Integer, Integer, CalendarSystem)
- uid: NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32)
  commentId: M:NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32)
  id: '#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32)'
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: YearMonth(Era, int, int)
  nameWithType: YearMonth.YearMonth(Era, int, int)
  fullName: NodaTime.YearMonth.YearMonth(NodaTime.Calendars.Era, int, int)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs an instance for the given era, year of era and month in the ISO calendar.
  example: []
  syntax:
    content: public YearMonth(Era era, int yearOfEra, int month)
    parameters:
    - id: era
      type: NodaTime.Calendars.Era
      description: The era within which to create a year/month. Must be a valid era within the ISO calendar.
    - id: yearOfEra
      type: System.Int32
      description: The year of era.
    - id: month
      type: System.Int32
      description: The month of year.
    content.vb: Public Sub New(era As Era, yearOfEra As Integer, month As Integer)
  overload: NodaTime.YearMonth.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid year/month.
  nameWithType.vb: YearMonth.New(Era, Integer, Integer)
  fullName.vb: NodaTime.YearMonth.New(NodaTime.Calendars.Era, Integer, Integer)
  name.vb: New(Era, Integer, Integer)
- uid: NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32,NodaTime.CalendarSystem)
  commentId: M:NodaTime.YearMonth.#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32,NodaTime.CalendarSystem)
  id: '#ctor(NodaTime.Calendars.Era,System.Int32,System.Int32,NodaTime.CalendarSystem)'
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: YearMonth(Era, int, int, CalendarSystem)
  nameWithType: YearMonth.YearMonth(Era, int, int, CalendarSystem)
  fullName: NodaTime.YearMonth.YearMonth(NodaTime.Calendars.Era, int, int, NodaTime.CalendarSystem)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Constructs an instance for the given era, year of era and month in the specified calendar.
  example: []
  syntax:
    content: public YearMonth(Era era, int yearOfEra, int month, CalendarSystem calendar)
    parameters:
    - id: era
      type: NodaTime.Calendars.Era
      description: The era within which to create a year/month. Must be a valid era within the specified calendar.
    - id: yearOfEra
      type: System.Int32
      description: The year of era.
    - id: month
      type: System.Int32
      description: The month of year.
    - id: calendar
      type: NodaTime.CalendarSystem
      description: Calendar system in which to create the year/month.
    content.vb: Public Sub New(era As Era, yearOfEra As Integer, month As Integer, calendar As CalendarSystem)
  overload: NodaTime.YearMonth.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The parameters do not form a valid year/month.
  nameWithType.vb: YearMonth.New(Era, Integer, Integer, CalendarSystem)
  fullName.vb: NodaTime.YearMonth.New(NodaTime.Calendars.Era, Integer, Integer, NodaTime.CalendarSystem)
  name.vb: New(Era, Integer, Integer, CalendarSystem)
- uid: NodaTime.YearMonth.ToDateInterval
  commentId: M:NodaTime.YearMonth.ToDateInterval
  id: ToDateInterval
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: ToDateInterval()
  nameWithType: YearMonth.ToDateInterval()
  fullName: NodaTime.YearMonth.ToDateInterval()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> covering the month represented by this value.
  example: []
  syntax:
    content: public DateInterval ToDateInterval()
    return:
      type: NodaTime.DateInterval
      description: A <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> covering the month represented by this value.
    content.vb: Public Function ToDateInterval() As DateInterval
  overload: NodaTime.YearMonth.ToDateInterval*
- uid: NodaTime.YearMonth.PlusMonths(System.Int32)
  commentId: M:NodaTime.YearMonth.PlusMonths(System.Int32)
  id: PlusMonths(System.Int32)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: PlusMonths(int)
  nameWithType: YearMonth.PlusMonths(int)
  fullName: NodaTime.YearMonth.PlusMonths(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> object which is the result of adding the specified number

    of months to this object.
  example: []
  syntax:
    content: public YearMonth PlusMonths(int months)
    parameters:
    - id: months
      type: System.Int32
      description: The number of months to add to this object.
    return:
      type: NodaTime.YearMonth
      description: The resulting <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> after adding the specified number of months.
    content.vb: Public Function PlusMonths(months As Integer) As YearMonth
  overload: NodaTime.YearMonth.PlusMonths*
  nameWithType.vb: YearMonth.PlusMonths(Integer)
  fullName.vb: NodaTime.YearMonth.PlusMonths(Integer)
  name.vb: PlusMonths(Integer)
- uid: NodaTime.YearMonth.OnDayOfMonth(System.Int32)
  commentId: M:NodaTime.YearMonth.OnDayOfMonth(System.Int32)
  id: OnDayOfMonth(System.Int32)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: OnDayOfMonth(int)
  nameWithType: YearMonth.OnDayOfMonth(int)
  fullName: NodaTime.YearMonth.OnDayOfMonth(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> with the year/month of this value, and the given day of month.
  example: []
  syntax:
    content: public LocalDate OnDayOfMonth(int day)
    parameters:
    - id: day
      type: System.Int32
      description: The day within the month.
    return:
      type: NodaTime.LocalDate
      description: The result of combining this year and month with <code class="paramref">day</code>.
    content.vb: Public Function OnDayOfMonth(day As Integer) As LocalDate
  overload: NodaTime.YearMonth.OnDayOfMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code class="paramref">day</code> does not fall within the

      month represented by this value.
  nameWithType.vb: YearMonth.OnDayOfMonth(Integer)
  fullName.vb: NodaTime.YearMonth.OnDayOfMonth(Integer)
  name.vb: OnDayOfMonth(Integer)
- uid: NodaTime.YearMonth.CompareTo(NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.CompareTo(NodaTime.YearMonth)
  id: CompareTo(NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: CompareTo(YearMonth)
  nameWithType: YearMonth.CompareTo(YearMonth)
  fullName: NodaTime.YearMonth.CompareTo(NodaTime.YearMonth)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Indicates whether this year/month is earlier, later or the same as another one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public int CompareTo(YearMonth other)
    parameters:
    - id: other
      type: NodaTime.YearMonth
      description: The other year/month to compare this one with
    return:
      type: System.Int32
      description: >-
        A value less than zero if this year/month is earlier than <code class="paramref">other</code>;
            zero if this year/month is the same as <code class="paramref">other</code>; a value greater than zero if this date is
            later than <code class="paramref">other</code>.
    content.vb: Public Function CompareTo(other As YearMonth) As Integer
  overload: NodaTime.YearMonth.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">other</code> is not the
          same as the calendar system of this value.
  implements:
  - System.IComparable{NodaTime.YearMonth}.CompareTo(NodaTime.YearMonth)
- uid: NodaTime.YearMonth.System#IComparable#CompareTo(System.Object)
  commentId: M:NodaTime.YearMonth.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(object?)
  nameWithType: YearMonth.IComparable.CompareTo(object?)
  fullName: NodaTime.YearMonth.System.IComparable.CompareTo(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Implementation of <xref href="System.IComparable.CompareTo(System.Object)" data-throw-if-not-resolved="false"></xref> to compare two YearMonth values.

    See the type documentation for a description of ordering semantics.
  remarks: This uses explicit interface implementation to avoid it being called accidentally. The generic implementation should usually be preferred.
  example: []
  syntax:
    content: int IComparable.CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this value with.
    return:
      type: System.Int32
      description: >-
        The result of comparing this YearMonth with another one.
            If <code class="paramref">obj</code> is null, this method returns a value greater than 0.
    content.vb: ''
  overload: NodaTime.YearMonth.System#IComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      <code class="paramref">obj</code> is non-null but does not refer to an instance of <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref>, or refers

      to a value in a different calendar system.
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.YearMonth.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator <(YearMonth, YearMonth)
  nameWithType: YearMonth.operator <(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator <(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two YearMonth values to see if the left one is strictly earlier than the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.YearMonth
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is strictly earlier than <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator <(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_LessThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.<(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.<(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <(YearMonth, YearMonth)
- uid: NodaTime.YearMonth.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator <=(YearMonth, YearMonth)
  nameWithType: YearMonth.operator <=(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator <=(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two YearMonth values to see if the left one is earlier than or equal to the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator <=(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.YearMonth
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is earlier than or equal to <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator <=(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_LessThanOrEqual*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.<=(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.<=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <=(YearMonth, YearMonth)
- uid: NodaTime.YearMonth.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator >(YearMonth, YearMonth)
  nameWithType: YearMonth.operator >(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator >(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two YearMonth values to see if the left one is strictly later than the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.YearMonth
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is strictly later than <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator >(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_GreaterThan*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.>(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.>(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: '>(YearMonth, YearMonth)'
- uid: NodaTime.YearMonth.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator >=(YearMonth, YearMonth)
  nameWithType: YearMonth.operator >=(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator >=(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two YearMonth values to see if the left one is later than or equal to the right one.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public static bool operator >=(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: First operand of the comparison
    - id: rhs
      type: NodaTime.YearMonth
      description: Second operand of the comparison
    return:
      type: System.Boolean
      description: true if the <code class="paramref">lhs</code> is later than or equal to <code class="paramref">rhs</code>, false otherwise.
    content.vb: Public Shared Operator >=(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_GreaterThanOrEqual*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      The calendar system of <code class="paramref">rhs</code> is not the same
          as the calendar of <code class="paramref">lhs</code>.
  implements:
  - System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.>=(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.>=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: '>=(YearMonth, YearMonth)'
- uid: NodaTime.YearMonth.GetHashCode
  commentId: M:NodaTime.YearMonth.GetHashCode
  id: GetHashCode
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: YearMonth.GetHashCode()
  fullName: NodaTime.YearMonth.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Returns a hash code for this year/month.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this value.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NodaTime.YearMonth.GetHashCode*
- uid: NodaTime.YearMonth.Equals(System.Object)
  commentId: M:NodaTime.YearMonth.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: YearMonth.Equals(object?)
  fullName: NodaTime.YearMonth.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare this year/month with.
    return:
      type: System.Boolean
      description: True if the given value is another year/month equal to this one; false otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NodaTime.YearMonth.Equals*
  nameWithType.vb: YearMonth.Equals(Object)
  fullName.vb: NodaTime.YearMonth.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.YearMonth.Equals(NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.Equals(NodaTime.YearMonth)
  id: Equals(NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: Equals(YearMonth)
  nameWithType: YearMonth.Equals(YearMonth)
  fullName: NodaTime.YearMonth.Equals(NodaTime.YearMonth)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of ordering semantics.
  example: []
  syntax:
    content: public bool Equals(YearMonth other)
    parameters:
    - id: other
      type: NodaTime.YearMonth
      description: The value to compare this year/month with.
    return:
      type: System.Boolean
      description: True if the given value is another year/month equal to this one; false otherwise.
    content.vb: Public Function Equals(other As YearMonth) As Boolean
  overload: NodaTime.YearMonth.Equals*
  implements:
  - System.IEquatable{NodaTime.YearMonth}.Equals(NodaTime.YearMonth)
- uid: NodaTime.YearMonth.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator ==(YearMonth, YearMonth)
  nameWithType: YearMonth.operator ==(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator ==(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator ==(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: The first value to compare
    - id: rhs
      type: NodaTime.YearMonth
      description: The second value to compare
    return:
      type: System.Boolean
      description: True if the two year/month values are the same and in the same calendar; false otherwise
    content.vb: Public Shared Operator =(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_Equality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.=(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: =(YearMonth, YearMonth)
- uid: NodaTime.YearMonth.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:NodaTime.YearMonth.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  id: op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: operator !=(YearMonth, YearMonth)
  nameWithType: YearMonth.operator !=(YearMonth, YearMonth)
  fullName: NodaTime.YearMonth.operator !=(NodaTime.YearMonth, NodaTime.YearMonth)
  type: Operator
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Compares two <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> values for inequality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public static bool operator !=(YearMonth lhs, YearMonth rhs)
    parameters:
    - id: lhs
      type: NodaTime.YearMonth
      description: The first value to compare
    - id: rhs
      type: NodaTime.YearMonth
      description: The second value to compare
    return:
      type: System.Boolean
      description: False if the two year/month values are the same and in the same calendar; true otherwise
    content.vb: Public Shared Operator <>(lhs As YearMonth, rhs As YearMonth) As Boolean
  overload: NodaTime.YearMonth.op_Inequality*
  implements:
  - System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  nameWithType.vb: YearMonth.<>(YearMonth, YearMonth)
  fullName.vb: NodaTime.YearMonth.<>(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <>(YearMonth, YearMonth)
- uid: NodaTime.YearMonth.ToString(System.String,System.IFormatProvider)
  commentId: M:NodaTime.YearMonth.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: YearMonth.ToString(string?, IFormatProvider?)
  fullName: NodaTime.YearMonth.ToString(string?, System.IFormatProvider?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Formats the value of the current instance using the specified pattern.
  remarks: >-
    Unlike most <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementations, a <code class="paramref">patternText</code> of null with

    the current thread's culture does not yield the same result as the parameterless <xref href="NodaTime.YearMonth.ToString" data-throw-if-not-resolved="false"></xref>

    overload, for backward-compatibility reasons. (It uses the ISO format, which is culture-insensitive.)
  example: []
  syntax:
    content: public string ToString(string? patternText, IFormatProvider? formatProvider)
    parameters:
    - id: patternText
      type: System.String
      description: >-
        The <xref href="System.String" data-throw-if-not-resolved="false"></xref> specifying the pattern to use,
            or null to use the ISO format pattern ("g").
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The <xref href="System.IFormatProvider" data-throw-if-not-resolved="false"></xref> to use when formatting the value,
            or null to use the current thread's culture to obtain a format provider.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the value of the current instance in the specified format.
    content.vb: Public Function ToString(patternText As String, formatProvider As IFormatProvider) As String
  overload: NodaTime.YearMonth.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: YearMonth.ToString(String, IFormatProvider)
  fullName.vb: NodaTime.YearMonth.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: NodaTime.YearMonth.ToString
  commentId: M:NodaTime.YearMonth.ToString
  id: ToString
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: YearMonth.ToString()
  fullName: NodaTime.YearMonth.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        The value of the current instance in the culture-specific default format pattern ("G"), using the current thread's

        culture to obtain a format provider.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NodaTime.YearMonth.ToString*
- uid: NodaTime.YearMonth.AddSchema(System.Xml.Schema.XmlSchemaSet)
  commentId: M:NodaTime.YearMonth.AddSchema(System.Xml.Schema.XmlSchemaSet)
  id: AddSchema(System.Xml.Schema.XmlSchemaSet)
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: AddSchema(XmlSchemaSet)
  nameWithType: YearMonth.AddSchema(XmlSchemaSet)
  fullName: NodaTime.YearMonth.AddSchema(System.Xml.Schema.XmlSchemaSet)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Adds the XML schema type describing the structure of the <xref href="NodaTime.YearMonth" data-throw-if-not-resolved="false"></xref> XML serialization to the given <code class="paramref">xmlSchemaSet</code>.
  example: []
  syntax:
    content: public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet)
    parameters:
    - id: xmlSchemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The XML schema set provided by <xref href="System.Xml.Serialization.XmlSchemaExporter" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Xml.XmlQualifiedName
      description: The qualified name of the schema type that was added to the <code class="paramref">xmlSchemaSet</code>.
    content.vb: Public Shared Function AddSchema(xmlSchemaSet As XmlSchemaSet) As XmlQualifiedName
  overload: NodaTime.YearMonth.AddSchema*
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema
  commentId: M:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: IXmlSerializable.GetSchema()
  nameWithType: YearMonth.IXmlSerializable.GetSchema()
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: This method is reserved and should not be used. When implementing the <code>IXmlSerializable</code> interface, you should return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (<code>Nothing</code> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <xref href="System.Xml.Serialization.XmlSchemaProviderAttribute" data-throw-if-not-resolved="false"></xref> to the class.
  example: []
  syntax:
    content: XmlSchema IXmlSerializable.GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: An <xref href="System.Xml.Schema.XmlSchema" data-throw-if-not-resolved="false"></xref> that describes the XML representation of the object that is produced by the <xref href="System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" data-throw-if-not-resolved="false"></xref> method and consumed by the <xref href="System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: ''
  overload: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  commentId: M:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: IXmlSerializable.ReadXml(XmlReader)
  nameWithType: YearMonth.IXmlSerializable.ReadXml(XmlReader)
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Generates an object from its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the object is deserialized.
    content.vb: ''
  overload: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  commentId: M:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: NodaTime.YearMonth
  langs:
  - csharp
  - vb
  name: IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: YearMonth.IXmlSerializable.WriteXml(XmlWriter)
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Converts an object into its XML representation.
  example: []
  syntax:
    content: void IXmlSerializable.WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the object is serialized.
    content.vb: ''
  overload: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  href: NodaTime.LocalDate.html
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.IEquatable{NodaTime.YearMonth}
  commentId: T:System.IEquatable{NodaTime.YearMonth}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<YearMonth>
  nameWithType: IEquatable<YearMonth>
  fullName: System.IEquatable<NodaTime.YearMonth>
  nameWithType.vb: IEquatable(Of YearMonth)
  fullName.vb: System.IEquatable(Of NodaTime.YearMonth)
  name.vb: IEquatable(Of YearMonth)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.IComparable{NodaTime.YearMonth}
  commentId: T:System.IComparable{NodaTime.YearMonth}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<YearMonth>
  nameWithType: IComparable<YearMonth>
  fullName: System.IComparable<NodaTime.YearMonth>
  nameWithType.vb: IComparable(Of YearMonth)
  fullName.vb: System.IComparable(Of NodaTime.YearMonth)
  name.vb: IComparable(Of YearMonth)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  commentId: T:System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IComparisonOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<YearMonth, YearMonth, bool>
  nameWithType: IComparisonOperators<YearMonth, YearMonth, bool>
  fullName: System.Numerics.IComparisonOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>
  nameWithType.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean)
  name.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  commentId: T:System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  parent: System.Numerics
  definition: System.Numerics.IEqualityOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<YearMonth, YearMonth, bool>
  nameWithType: IEqualityOperators<YearMonth, YearMonth, bool>
  fullName: System.Numerics.IEqualityOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>
  nameWithType.vb: IEqualityOperators(Of YearMonth, YearMonth, Boolean)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean)
  name.vb: IEqualityOperators(Of YearMonth, YearMonth, Boolean)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization
- uid: System.Numerics.IComparisonOperators`3
  commentId: T:System.Numerics.IComparisonOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  name: IComparisonOperators<TSelf, TOther, TResult>
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult)
  name.vb: IComparisonOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IComparisonOperators`3
    name: IComparisonOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.Numerics.IEqualityOperators`3
  commentId: T:System.Numerics.IEqualityOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  name: IEqualityOperators<TSelf, TOther, TResult>
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult)
  name.vb: IEqualityOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IEqualityOperators`3
    name: IEqualityOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.YearMonth.Calendar*
  commentId: Overload:NodaTime.YearMonth.Calendar
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_Calendar
  name: Calendar
  nameWithType: YearMonth.Calendar
  fullName: NodaTime.YearMonth.Calendar
- uid: NodaTime.CalendarSystem
  commentId: T:NodaTime.CalendarSystem
  parent: NodaTime
  href: NodaTime.CalendarSystem.html
  name: CalendarSystem
  nameWithType: CalendarSystem
  fullName: NodaTime.CalendarSystem
- uid: NodaTime.YearMonth.Year*
  commentId: Overload:NodaTime.YearMonth.Year
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_Year
  name: Year
  nameWithType: YearMonth.Year
  fullName: NodaTime.YearMonth.Year
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.YearMonth.Month*
  commentId: Overload:NodaTime.YearMonth.Month
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_Month
  name: Month
  nameWithType: YearMonth.Month
  fullName: NodaTime.YearMonth.Month
- uid: NodaTime.YearMonth.YearOfEra*
  commentId: Overload:NodaTime.YearMonth.YearOfEra
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_YearOfEra
  name: YearOfEra
  nameWithType: YearMonth.YearOfEra
  fullName: NodaTime.YearMonth.YearOfEra
- uid: NodaTime.YearMonth.Era*
  commentId: Overload:NodaTime.YearMonth.Era
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_Era
  name: Era
  nameWithType: YearMonth.Era
  fullName: NodaTime.YearMonth.Era
- uid: NodaTime.Calendars.Era
  commentId: T:NodaTime.Calendars.Era
  parent: NodaTime.Calendars
  href: NodaTime.Calendars.Era.html
  name: Era
  nameWithType: Era
  fullName: NodaTime.Calendars.Era
- uid: NodaTime.Calendars
  commentId: N:NodaTime.Calendars
  href: NodaTime.html
  name: NodaTime.Calendars
  nameWithType: NodaTime.Calendars
  fullName: NodaTime.Calendars
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: NodaTime.YearMonth.#ctor*
  commentId: Overload:NodaTime.YearMonth.#ctor
  href: NodaTime.YearMonth.html#NodaTime_YearMonth__ctor_System_Int32_System_Int32_
  name: YearMonth
  nameWithType: YearMonth.YearMonth
  fullName: NodaTime.YearMonth.YearMonth
  nameWithType.vb: YearMonth.New
  fullName.vb: NodaTime.YearMonth.New
  name.vb: New
- uid: NodaTime.DateInterval
  commentId: T:NodaTime.DateInterval
  parent: NodaTime
  href: NodaTime.DateInterval.html
  name: DateInterval
  nameWithType: DateInterval
  fullName: NodaTime.DateInterval
- uid: NodaTime.YearMonth.ToDateInterval*
  commentId: Overload:NodaTime.YearMonth.ToDateInterval
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_ToDateInterval
  name: ToDateInterval
  nameWithType: YearMonth.ToDateInterval
  fullName: NodaTime.YearMonth.ToDateInterval
- uid: NodaTime.YearMonth
  commentId: T:NodaTime.YearMonth
  parent: NodaTime
  href: NodaTime.YearMonth.html
  name: YearMonth
  nameWithType: YearMonth
  fullName: NodaTime.YearMonth
- uid: NodaTime.YearMonth.PlusMonths*
  commentId: Overload:NodaTime.YearMonth.PlusMonths
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_PlusMonths_System_Int32_
  name: PlusMonths
  nameWithType: YearMonth.PlusMonths
  fullName: NodaTime.YearMonth.PlusMonths
- uid: NodaTime.YearMonth.OnDayOfMonth*
  commentId: Overload:NodaTime.YearMonth.OnDayOfMonth
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_OnDayOfMonth_System_Int32_
  name: OnDayOfMonth
  nameWithType: YearMonth.OnDayOfMonth
  fullName: NodaTime.YearMonth.OnDayOfMonth
- uid: NodaTime.YearMonth.CompareTo*
  commentId: Overload:NodaTime.YearMonth.CompareTo
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_CompareTo_NodaTime_YearMonth_
  name: CompareTo
  nameWithType: YearMonth.CompareTo
  fullName: NodaTime.YearMonth.CompareTo
- uid: System.IComparable{NodaTime.YearMonth}.CompareTo(NodaTime.YearMonth)
  commentId: M:System.IComparable{NodaTime.YearMonth}.CompareTo(NodaTime.YearMonth)
  parent: System.IComparable{NodaTime.YearMonth}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(YearMonth)
  nameWithType: IComparable<YearMonth>.CompareTo(YearMonth)
  fullName: System.IComparable<NodaTime.YearMonth>.CompareTo(NodaTime.YearMonth)
  nameWithType.vb: IComparable(Of YearMonth).CompareTo(YearMonth)
  fullName.vb: System.IComparable(Of NodaTime.YearMonth).CompareTo(NodaTime.YearMonth)
  spec.csharp:
  - uid: System.IComparable{NodaTime.YearMonth}.CompareTo(NodaTime.YearMonth)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - uid: System.IComparable{NodaTime.YearMonth}.CompareTo(NodaTime.YearMonth)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.YearMonth.System#IComparable#CompareTo*
  commentId: Overload:NodaTime.YearMonth.System#IComparable#CompareTo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable.CompareTo
  nameWithType: YearMonth.IComparable.CompareTo
  fullName: NodaTime.YearMonth.System.IComparable.CompareTo
  spec.csharp:
  - uid: System.IComparable*
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable
  - name: .
  - uid: NodaTime.YearMonth.System#IComparable#CompareTo*
    name: CompareTo
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_System_IComparable_CompareTo_System_Object_
- uid: NodaTime.YearMonth.op_LessThan*
  commentId: Overload:NodaTime.YearMonth.op_LessThan
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_LessThan_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator <
  nameWithType: YearMonth.operator <
  fullName: NodaTime.YearMonth.operator <
  nameWithType.vb: YearMonth.<
  fullName.vb: NodaTime.YearMonth.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_LessThan*
    name: <
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_LessThan_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(YearMonth, YearMonth)
  nameWithType: IComparisonOperators<YearMonth, YearMonth, bool>.operator <(YearMonth, YearMonth)
  fullName: System.Numerics.IComparisonOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator <(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean).<(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).<(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <(YearMonth, YearMonth)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThan(NodaTime.YearMonth,NodaTime.YearMonth)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: <
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  name: operator <(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<(TSelf, TOther)
  name.vb: <(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThan(`0,`1)
    name: <
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.YearMonth.op_LessThanOrEqual*
  commentId: Overload:NodaTime.YearMonth.op_LessThanOrEqual
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_LessThanOrEqual_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator <=
  nameWithType: YearMonth.operator <=
  fullName: NodaTime.YearMonth.operator <=
  nameWithType.vb: YearMonth.<=
  fullName.vb: NodaTime.YearMonth.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_LessThanOrEqual*
    name: <=
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_LessThanOrEqual_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(YearMonth, YearMonth)
  nameWithType: IComparisonOperators<YearMonth, YearMonth, bool>.operator <=(YearMonth, YearMonth)
  fullName: System.Numerics.IComparisonOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator <=(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean).<=(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).<=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <=(YearMonth, YearMonth)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_LessThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  name: operator <=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator <=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).<=(TSelf, TOther)
  name.vb: <=(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_LessThanOrEqual(`0,`1)
    name: <=
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_lessthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <=
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.YearMonth.op_GreaterThan*
  commentId: Overload:NodaTime.YearMonth.op_GreaterThan
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_GreaterThan_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator >
  nameWithType: YearMonth.operator >
  fullName: NodaTime.YearMonth.operator >
  nameWithType.vb: YearMonth.>
  fullName.vb: NodaTime.YearMonth.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_GreaterThan*
    name: '>'
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_GreaterThan_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(YearMonth, YearMonth)
  nameWithType: IComparisonOperators<YearMonth, YearMonth, bool>.operator >(YearMonth, YearMonth)
  fullName: System.Numerics.IComparisonOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator >(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean).>(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).>(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: '>(YearMonth, YearMonth)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThan(NodaTime.YearMonth,NodaTime.YearMonth)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  name: operator >(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>(TSelf, TOther)
  name.vb: '>(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThan(`0,`1)
    name: '>'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthan
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>'
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.YearMonth.op_GreaterThanOrEqual*
  commentId: Overload:NodaTime.YearMonth.op_GreaterThanOrEqual
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_GreaterThanOrEqual_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator >=
  nameWithType: YearMonth.operator >=
  fullName: NodaTime.YearMonth.operator >=
  nameWithType.vb: YearMonth.>=
  fullName.vb: NodaTime.YearMonth.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_GreaterThanOrEqual*
    name: '>='
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_GreaterThanOrEqual_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(YearMonth, YearMonth)
  nameWithType: IComparisonOperators<YearMonth, YearMonth, bool>.operator >=(YearMonth, YearMonth)
  fullName: System.Numerics.IComparisonOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator >=(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IComparisonOperators(Of YearMonth, YearMonth, Boolean).>=(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IComparisonOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).>=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: '>=(YearMonth, YearMonth)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_GreaterThanOrEqual(NodaTime.YearMonth,NodaTime.YearMonth)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  commentId: M:System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  name: operator >=(TSelf, TOther)
  nameWithType: IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  fullName: System.Numerics.IComparisonOperators<TSelf, TOther, TResult>.operator >=(TSelf, TOther)
  nameWithType.vb: IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  fullName.vb: System.Numerics.IComparisonOperators(Of TSelf, TOther, TResult).>=(TSelf, TOther)
  name.vb: '>=(TSelf, TOther)'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IComparisonOperators`3.op_GreaterThanOrEqual(`0,`1)
    name: '>='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.icomparisonoperators-3.op_greaterthanorequal
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: '>='
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NodaTime.YearMonth.GetHashCode*
  commentId: Overload:NodaTime.YearMonth.GetHashCode
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_GetHashCode
  name: GetHashCode
  nameWithType: YearMonth.GetHashCode
  fullName: NodaTime.YearMonth.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NodaTime.YearMonth.Equals*
  commentId: Overload:NodaTime.YearMonth.Equals
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_Equals_System_Object_
  name: Equals
  nameWithType: YearMonth.Equals
  fullName: NodaTime.YearMonth.Equals
- uid: System.IEquatable{NodaTime.YearMonth}.Equals(NodaTime.YearMonth)
  commentId: M:System.IEquatable{NodaTime.YearMonth}.Equals(NodaTime.YearMonth)
  parent: System.IEquatable{NodaTime.YearMonth}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(YearMonth)
  nameWithType: IEquatable<YearMonth>.Equals(YearMonth)
  fullName: System.IEquatable<NodaTime.YearMonth>.Equals(NodaTime.YearMonth)
  nameWithType.vb: IEquatable(Of YearMonth).Equals(YearMonth)
  fullName.vb: System.IEquatable(Of NodaTime.YearMonth).Equals(NodaTime.YearMonth)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.YearMonth}.Equals(NodaTime.YearMonth)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.YearMonth}.Equals(NodaTime.YearMonth)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NodaTime.YearMonth.op_Equality*
  commentId: Overload:NodaTime.YearMonth.op_Equality
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_Equality_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator ==
  nameWithType: YearMonth.operator ==
  fullName: NodaTime.YearMonth.operator ==
  nameWithType.vb: YearMonth.=
  fullName.vb: NodaTime.YearMonth.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_Equality*
    name: ==
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_Equality_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(YearMonth, YearMonth)
  nameWithType: IEqualityOperators<YearMonth, YearMonth, bool>.operator ==(YearMonth, YearMonth)
  fullName: System.Numerics.IEqualityOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator ==(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IEqualityOperators(Of YearMonth, YearMonth, Boolean).=(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).=(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: =(YearMonth, YearMonth)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Equality(NodaTime.YearMonth,NodaTime.YearMonth)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: =
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  name: operator ==(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator ==(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).=(TSelf, TOther)
  name.vb: =(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Equality(`0,`1)
    name: ==
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_equality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: =
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.YearMonth.op_Inequality*
  commentId: Overload:NodaTime.YearMonth.op_Inequality
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_Inequality_NodaTime_YearMonth_NodaTime_YearMonth_
  name: operator !=
  nameWithType: YearMonth.operator !=
  fullName: NodaTime.YearMonth.operator !=
  nameWithType.vb: YearMonth.<>
  fullName.vb: NodaTime.YearMonth.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NodaTime.YearMonth.op_Inequality*
    name: '!='
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_op_Inequality_NodaTime_YearMonth_NodaTime_YearMonth_
- uid: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  commentId: M:System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
  parent: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}
  definition: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(YearMonth, YearMonth)
  nameWithType: IEqualityOperators<YearMonth, YearMonth, bool>.operator !=(YearMonth, YearMonth)
  fullName: System.Numerics.IEqualityOperators<NodaTime.YearMonth, NodaTime.YearMonth, bool>.operator !=(NodaTime.YearMonth, NodaTime.YearMonth)
  nameWithType.vb: IEqualityOperators(Of YearMonth, YearMonth, Boolean).<>(YearMonth, YearMonth)
  fullName.vb: System.Numerics.IEqualityOperators(Of NodaTime.YearMonth, NodaTime.YearMonth, Boolean).<>(NodaTime.YearMonth, NodaTime.YearMonth)
  name.vb: <>(YearMonth, YearMonth)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators{NodaTime.YearMonth,NodaTime.YearMonth,System.Boolean}.op_Inequality(NodaTime.YearMonth,NodaTime.YearMonth)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: ','
  - name: " "
  - uid: NodaTime.YearMonth
    name: YearMonth
    href: NodaTime.YearMonth.html
  - name: )
- uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  commentId: M:System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  name: operator !=(TSelf, TOther)
  nameWithType: IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  fullName: System.Numerics.IEqualityOperators<TSelf, TOther, TResult>.operator !=(TSelf, TOther)
  nameWithType.vb: IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  fullName.vb: System.Numerics.IEqualityOperators(Of TSelf, TOther, TResult).<>(TSelf, TOther)
  name.vb: <>(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IEqualityOperators`3.op_Inequality(`0,`1)
    name: '!='
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.iequalityoperators-3.op_inequality
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: <>
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: NodaTime.YearMonth.ToString
  commentId: M:NodaTime.YearMonth.ToString
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_ToString
  name: ToString()
  nameWithType: YearMonth.ToString()
  fullName: NodaTime.YearMonth.ToString()
  spec.csharp:
  - uid: NodaTime.YearMonth.ToString
    name: ToString
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NodaTime.YearMonth.ToString
    name: ToString
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_ToString
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: NodaTime.YearMonth.ToString*
  commentId: Overload:NodaTime.YearMonth.ToString
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_ToString_System_String_System_IFormatProvider_
  name: ToString
  nameWithType: YearMonth.ToString
  fullName: NodaTime.YearMonth.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Xml.Serialization.XmlSchemaExporter
  commentId: T:System.Xml.Serialization.XmlSchemaExporter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaexporter
  name: XmlSchemaExporter
  nameWithType: XmlSchemaExporter
  fullName: System.Xml.Serialization.XmlSchemaExporter
- uid: NodaTime.YearMonth.AddSchema*
  commentId: Overload:NodaTime.YearMonth.AddSchema
  href: NodaTime.YearMonth.html#NodaTime_YearMonth_AddSchema_System_Xml_Schema_XmlSchemaSet_
  name: AddSchema
  nameWithType: YearMonth.AddSchema
  fullName: NodaTime.YearMonth.AddSchema
- uid: System.Xml.Schema.XmlSchemaSet
  commentId: T:System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschemaset
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  commentId: T:System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlqualifiedname
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Schema
    name: Schema
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.schema
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
- uid: System.Xml.Serialization.XmlSchemaProviderAttribute
  commentId: T:System.Xml.Serialization.XmlSchemaProviderAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.xmlschemaproviderattribute
  name: XmlSchemaProviderAttribute
  nameWithType: XmlSchemaProviderAttribute
  fullName: System.Xml.Serialization.XmlSchemaProviderAttribute
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.schema.xmlschema
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.writexml
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  - name: )
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable.readxml
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  - name: )
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema*
  commentId: Overload:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.GetSchema
  nameWithType: YearMonth.IXmlSerializable.GetSchema
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.GetSchema
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#GetSchema*
    name: GetSchema
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_System_Xml_Serialization_IXmlSerializable_GetSchema
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml*
  commentId: Overload:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.ReadXml
  nameWithType: YearMonth.IXmlSerializable.ReadXml
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.ReadXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#ReadXml*
    name: ReadXml
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml*
  commentId: Overload:NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  name: IXmlSerializable.WriteXml
  nameWithType: YearMonth.IXmlSerializable.WriteXml
  fullName: NodaTime.YearMonth.System.Xml.Serialization.IXmlSerializable.WriteXml
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable*
    name: IXmlSerializable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.serialization.ixmlserializable
  - name: .
  - uid: NodaTime.YearMonth.System#Xml#Serialization#IXmlSerializable#WriteXml*
    name: WriteXml
    href: NodaTime.YearMonth.html#NodaTime_YearMonth_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_
shouldSkipMarkup: true
