### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options
  commentId: T:NodaTime.TimeZones.ZoneEqualityComparer.Options
  id: ZoneEqualityComparer.Options
  parent: NodaTime.TimeZones
  children:
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchNames
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchOffsetComponents
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  - NodaTime.TimeZones.ZoneEqualityComparer.Options.StrictestMatch
  langs:
  - csharp
  - vb
  name: ZoneEqualityComparer.Options
  nameWithType: ZoneEqualityComparer.Options
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options
  type: Enum
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Options to use when comparing time zones for equality. Each option makes the comparison more restrictive.
  remarks: >-
    <p>

    By default, the comparer only compares the wall offset (total of standard offset and any daylight saving offset)

    at every instant within the interval over which the comparer operates. In practice, this is done by comparing each

    <xref href="NodaTime.TimeZones.ZoneInterval" data-throw-if-not-resolved="false"></xref> which includes an instant within the interval (using <xref href="NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)" data-throw-if-not-resolved="false"></xref>).

    For most purposes, this is all that's required: from the simple perspective of a time zone being just a function from instants to local time,

    the default option of <xref href="NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset" data-throw-if-not-resolved="false"></xref> effectively checks that the function gives the same result across the two time

    zones being compared, for any given instant within the interval.

    </p>

    <p>

    It's possible for a time zone to have a transition from one <code>ZoneInterval</code> to another which doesn't adjust the offset: it

    might just change the name, or the balance between standard offset to daylight saving offset. (As an example, at midnight local

    time on October 27th 1968, the Europe/London time zone went from a standard offset of 0 and a daylight saving offset of 1 hour

    to a standard offset of 1 and a daylight saving offset of 0... which left the clocks unchanged.) This transition is irrelevant

    to the default options, so the two zone intervals involved are effectively coalesced.

    </p>

    <p>

    The options available change what sort of comparison is performed - which can also change which zone intervals can be coalesced. For

    example, by specifying just the <xref href="NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions" data-throw-if-not-resolved="false"></xref> option, you would indicate that even though you don't care about the name within a zone

    interval or how the wall offset is calculated, you do care about the fact that there was a transition at all, and when it occurred.

    With that option enabled, zone intervals are never coalesced and the transition points within the operating interval are checked.

    </p>

    <p>Similarly, the <xref href="NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions" data-throw-if-not-resolved="false"></xref> option is the only one where instants outside the operating interval are

    relevant. For example, consider a comparer which operates over the interval [2000-01-01T00:00:00Z, 2011-01-01T00:00:00Z). Normally,

    anything that happens before the year 2000 (UTC) would be irrelevant - but with this option enabled, the transitions of the first and last zone

    intervals are part of the comparison... so if one time zone has a zone interval 1999-09-01T00:00:00Z to 2000-03-01T00:00:00Z and the other has

    a zone interval 1999-10-15T00:00:00Z to 2000-03-01T00:00:Z, the two zones would be considered unequal, despite the fact that the only instants observing

    the difference occur outside the operating interval.

    </p>
  example: []
  syntax:
    content: >-
      [Flags]

      public enum ZoneEqualityComparer.Options
    content.vb: >-
      <Flags>

      Public Enum ZoneEqualityComparer.Options
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  id: OnlyMatchWallOffset
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: OnlyMatchWallOffset
  nameWithType: ZoneEqualityComparer.Options.OnlyMatchWallOffset
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    The default comparison, which only cares about the wall offset at any particular

    instant, within the interval of the comparer. In other words, if <xref href="NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)" data-throw-if-not-resolved="false"></xref>

    returns the same value for all instants in the interval, the comparer will consider the zones to be equal.
  example: []
  syntax:
    content: OnlyMatchWallOffset = 0
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchOffsetComponents
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchOffsetComponents
  id: MatchOffsetComponents
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: MatchOffsetComponents
  nameWithType: ZoneEqualityComparer.Options.MatchOffsetComponents
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchOffsetComponents
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    Instead of only comparing wall offsets, the standard/savings split is also considered. So when this

    option is used, two zones which both have a wall offset of +2 at one instant would be considered

    unequal if one of those offsets was +1 standard, +1 savings and the other was +2 standard with no daylight

    saving.
  example: []
  syntax:
    content: MatchOffsetComponents = 1
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchNames
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchNames
  id: MatchNames
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: MatchNames
  nameWithType: ZoneEqualityComparer.Options.MatchNames
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchNames
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: Compare the names of zone intervals as well as offsets.
  example: []
  syntax:
    content: MatchNames = 2
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  id: MatchAllTransitions
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: MatchAllTransitions
  nameWithType: ZoneEqualityComparer.Options.MatchAllTransitions
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    This option prevents adjacent zone intervals from being coalesced, even if they are otherwise considered

    equivalent according to other options.
  example: []
  syntax:
    content: MatchAllTransitions = 4
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  id: MatchStartAndEndTransitions
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: MatchStartAndEndTransitions
  nameWithType: ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: >-
    Includes the transitions into the first zone interval and out of the

    last zone interval as part of the comparison, even if they do not affect

    the offset or name for any instant within the operating interval.
  example: []
  syntax:
    content: MatchStartAndEndTransitions = 8
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.StrictestMatch
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.StrictestMatch
  id: StrictestMatch
  parent: NodaTime.TimeZones.ZoneEqualityComparer.Options
  langs:
  - csharp
  - vb
  name: StrictestMatch
  nameWithType: ZoneEqualityComparer.Options.StrictestMatch
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.StrictestMatch
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones
  summary: The combination of all available match options.
  example: []
  syntax:
    content: StrictestMatch = MatchOffsetComponents | MatchNames | MatchAllTransitions | MatchStartAndEndTransitions
    return:
      type: NodaTime.TimeZones.ZoneEqualityComparer.Options
    content.vb: StrictestMatch = MatchOffsetComponents Or MatchNames Or MatchAllTransitions Or MatchStartAndEndTransitions
references:
- uid: NodaTime.TimeZones.ZoneInterval
  commentId: T:NodaTime.TimeZones.ZoneInterval
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.ZoneInterval.html
  name: ZoneInterval
  nameWithType: ZoneInterval
  fullName: NodaTime.TimeZones.ZoneInterval
- uid: NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)
  commentId: M:NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetZoneIntervals_NodaTime_Interval_
  name: GetZoneIntervals(Interval)
  nameWithType: DateTimeZone.GetZoneIntervals(Interval)
  fullName: NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)
    name: GetZoneIntervals
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetZoneIntervals_NodaTime_Interval_
  - name: (
  - uid: NodaTime.Interval
    name: Interval
    href: NodaTime.Interval.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.GetZoneIntervals(NodaTime.Interval)
    name: GetZoneIntervals
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetZoneIntervals_NodaTime_Interval_
  - name: (
  - uid: NodaTime.Interval
    name: Interval
    href: NodaTime.Interval.html
  - name: )
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
  href: NodaTime.TimeZones.ZoneEqualityComparer.Options.html#NodaTime_TimeZones_ZoneEqualityComparer_Options_OnlyMatchWallOffset
  name: OnlyMatchWallOffset
  nameWithType: ZoneEqualityComparer.Options.OnlyMatchWallOffset
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.OnlyMatchWallOffset
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
  href: NodaTime.TimeZones.ZoneEqualityComparer.Options.html#NodaTime_TimeZones_ZoneEqualityComparer_Options_MatchAllTransitions
  name: MatchAllTransitions
  nameWithType: ZoneEqualityComparer.Options.MatchAllTransitions
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchAllTransitions
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  commentId: F:NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  href: NodaTime.TimeZones.ZoneEqualityComparer.Options.html#NodaTime_TimeZones_ZoneEqualityComparer_Options_MatchStartAndEndTransitions
  name: MatchStartAndEndTransitions
  nameWithType: ZoneEqualityComparer.Options.MatchStartAndEndTransitions
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options.MatchStartAndEndTransitions
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: NodaTime.DateTimeZone
  commentId: T:NodaTime.DateTimeZone
  parent: NodaTime
  href: NodaTime.DateTimeZone.html
  name: DateTimeZone
  nameWithType: DateTimeZone
  fullName: NodaTime.DateTimeZone
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)
  commentId: M:NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)
  parent: NodaTime.DateTimeZone
  href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetUtcOffset_NodaTime_Instant_
  name: GetUtcOffset(Instant)
  nameWithType: DateTimeZone.GetUtcOffset(Instant)
  fullName: NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)
  spec.csharp:
  - uid: NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)
    name: GetUtcOffset
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetUtcOffset_NodaTime_Instant_
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
  spec.vb:
  - uid: NodaTime.DateTimeZone.GetUtcOffset(NodaTime.Instant)
    name: GetUtcOffset
    href: NodaTime.DateTimeZone.html#NodaTime_DateTimeZone_GetUtcOffset_NodaTime_Instant_
  - name: (
  - uid: NodaTime.Instant
    name: Instant
    href: NodaTime.Instant.html
  - name: )
- uid: NodaTime.TimeZones.ZoneEqualityComparer.Options
  commentId: T:NodaTime.TimeZones.ZoneEqualityComparer.Options
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.ZoneEqualityComparer.html
  name: ZoneEqualityComparer.Options
  nameWithType: ZoneEqualityComparer.Options
  fullName: NodaTime.TimeZones.ZoneEqualityComparer.Options
  spec.csharp:
  - uid: NodaTime.TimeZones.ZoneEqualityComparer
    name: ZoneEqualityComparer
    href: NodaTime.TimeZones.ZoneEqualityComparer.html
  - name: .
  - uid: NodaTime.TimeZones.ZoneEqualityComparer.Options
    name: Options
    href: NodaTime.TimeZones.ZoneEqualityComparer.Options.html
  spec.vb:
  - uid: NodaTime.TimeZones.ZoneEqualityComparer
    name: ZoneEqualityComparer
    href: NodaTime.TimeZones.ZoneEqualityComparer.html
  - name: .
  - uid: NodaTime.TimeZones.ZoneEqualityComparer.Options
    name: Options
    href: NodaTime.TimeZones.ZoneEqualityComparer.Options.html
shouldSkipMarkup: true
