### YamlMime:ManagedReference
items:
- uid: NodaTime.Calendars.WeekYearRules
  commentId: T:NodaTime.Calendars.WeekYearRules
  id: WeekYearRules
  parent: NodaTime.Calendars
  children:
  - NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32)
  - NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32,NodaTime.IsoDayOfWeek)
  - NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule(System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - NodaTime.Calendars.WeekYearRules.Iso
  langs:
  - csharp
  - vb
  name: WeekYearRules
  nameWithType: WeekYearRules
  fullName: NodaTime.Calendars.WeekYearRules
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: Factory methods to construct week-year rules supported by Noda Time.
  example: []
  syntax:
    content: public static class WeekYearRules
    content.vb: Public Module WeekYearRules
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Calendars.WeekYearRules.Iso
  commentId: P:NodaTime.Calendars.WeekYearRules.Iso
  id: Iso
  parent: NodaTime.Calendars.WeekYearRules
  langs:
  - csharp
  - vb
  name: Iso
  nameWithType: WeekYearRules.Iso
  fullName: NodaTime.Calendars.WeekYearRules.Iso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: Returns an <xref href="NodaTime.Calendars.IWeekYearRule" data-throw-if-not-resolved="false"></xref> consistent with ISO-8601.
  remarks: >-
    <p>

    In the standard ISO-8601 week algorithm, the first week of the year

    is that in which at least 4 days are in the year. As a result of this

    definition, day 1 of the first week may be in the previous year. In ISO-8601,

    weeks always begin on a Monday, so this rule is equivalent to the first Thursday

    being in the first Monday-to-Sunday week of the year.

    </p>

    <p>

    For example, January 1st 2011 was a Saturday, so only two days of that week

    (Saturday and Sunday) were in 2011. Therefore January 1st is part of

    week 52 of week-year 2010. Conversely, December 31st 2012 is a Monday,

    so is part of week 1 of week-year 2013.

    </p>
  example: []
  syntax:
    content: public static IWeekYearRule Iso { get; }
    parameters: []
    return:
      type: NodaTime.Calendars.IWeekYearRule
      description: A <xref href="NodaTime.Calendars.IWeekYearRule" data-throw-if-not-resolved="false"></xref> consistent with ISO-8601.
    content.vb: Public Shared ReadOnly Property Iso As IWeekYearRule
  overload: NodaTime.Calendars.WeekYearRules.Iso*
- uid: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32)
  commentId: M:NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32)
  id: ForMinDaysInFirstWeek(System.Int32)
  parent: NodaTime.Calendars.WeekYearRules
  langs:
  - csharp
  - vb
  name: ForMinDaysInFirstWeek(int)
  nameWithType: WeekYearRules.ForMinDaysInFirstWeek(int)
  fullName: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(int)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: >-
    Creates a week year rule where the boundary between one week-year and the next

    is parameterized in terms of how many days of the first week of the week

    year have to be in the new calendar year. In rules created by this method,

    weeks are always deemed to begin on an Monday.
  remarks: >-
    <code class="paramref">minDaysInFirstWeek</code> determines when the first week of the week-year starts.

    For any given calendar year X, consider the Monday-to-Sunday week that includes the first day of the

    calendar year. Usually, some days of that week are in calendar year X, and some are in calendar year

    X-1. If <code class="paramref">minDaysInFirstWeek</code> or more of the days are in year X, then the week is

    deemed to be the first week of week-year X. Otherwise, the week is deemed to be the last week of

    week-year X-1, and the first week of week-year X starts on the following Monday.
  example: []
  syntax:
    content: public static IWeekYearRule ForMinDaysInFirstWeek(int minDaysInFirstWeek)
    parameters:
    - id: minDaysInFirstWeek
      type: System.Int32
      description: >-
        The minimum number of days in the first Monday-to-Sunday week
            which have to be in the new calendar year for that week to count as being in that week-year.
            Must be in the range 1 to 7 inclusive.
    return:
      type: NodaTime.Calendars.IWeekYearRule
      description: >-
        A <xref href="NodaTime.Calendars.SimpleWeekYearRule" data-throw-if-not-resolved="false"></xref> with the specified minimum number of days in the first
            week.
    content.vb: Public Shared Function ForMinDaysInFirstWeek(minDaysInFirstWeek As Integer) As IWeekYearRule
  overload: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek*
  nameWithType.vb: WeekYearRules.ForMinDaysInFirstWeek(Integer)
  fullName.vb: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(Integer)
  name.vb: ForMinDaysInFirstWeek(Integer)
- uid: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32,NodaTime.IsoDayOfWeek)
  commentId: M:NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(System.Int32,NodaTime.IsoDayOfWeek)
  id: ForMinDaysInFirstWeek(System.Int32,NodaTime.IsoDayOfWeek)
  parent: NodaTime.Calendars.WeekYearRules
  langs:
  - csharp
  - vb
  name: ForMinDaysInFirstWeek(int, IsoDayOfWeek)
  nameWithType: WeekYearRules.ForMinDaysInFirstWeek(int, IsoDayOfWeek)
  fullName: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(int, NodaTime.IsoDayOfWeek)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: >-
    Creates a week year rule where the boundary between one week-year and the next

    is parameterized in terms of how many days of the first week of the week

    year have to be in the new calendar year, and also by which day is deemed

    to be the first day of the week.
  remarks: >-
    <code class="paramref">minDaysInFirstWeek</code> determines when the first week of the week-year starts.

    For any given calendar year X, consider the week that includes the first day of the

    calendar year. Usually, some days of that week are in calendar year X, and some are in calendar year

    X-1. If <code class="paramref">minDaysInFirstWeek</code> or more of the days are in year X, then the week is

    deemed to be the first week of week-year X. Otherwise, the week is deemed to be the last week of

    week-year X-1, and the first week of week-year X starts on the following <code class="paramref">firstDayOfWeek</code>.
  example: []
  syntax:
    content: public static IWeekYearRule ForMinDaysInFirstWeek(int minDaysInFirstWeek, IsoDayOfWeek firstDayOfWeek)
    parameters:
    - id: minDaysInFirstWeek
      type: System.Int32
      description: >-
        The minimum number of days in the first week (starting on
            <code class="paramref">firstDayOfWeek</code>) which have to be in the new calendar year for that week
            to count as being in that week-year. Must be in the range 1 to 7 inclusive.
    - id: firstDayOfWeek
      type: NodaTime.IsoDayOfWeek
      description: The first day of the week.
    return:
      type: NodaTime.Calendars.IWeekYearRule
      description: >-
        A <xref href="NodaTime.Calendars.SimpleWeekYearRule" data-throw-if-not-resolved="false"></xref> with the specified minimum number of days in the first
            week and first day of the week.
    content.vb: Public Shared Function ForMinDaysInFirstWeek(minDaysInFirstWeek As Integer, firstDayOfWeek As IsoDayOfWeek) As IWeekYearRule
  overload: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek*
  nameWithType.vb: WeekYearRules.ForMinDaysInFirstWeek(Integer, IsoDayOfWeek)
  fullName.vb: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek(Integer, NodaTime.IsoDayOfWeek)
  name.vb: ForMinDaysInFirstWeek(Integer, IsoDayOfWeek)
- uid: NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule(System.Globalization.CalendarWeekRule,System.DayOfWeek)
  commentId: M:NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule(System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: FromCalendarWeekRule(System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: NodaTime.Calendars.WeekYearRules
  langs:
  - csharp
  - vb
  name: FromCalendarWeekRule(CalendarWeekRule, DayOfWeek)
  nameWithType: WeekYearRules.FromCalendarWeekRule(CalendarWeekRule, DayOfWeek)
  fullName: NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule(System.Globalization.CalendarWeekRule, System.DayOfWeek)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Calendars
  summary: >-
    Creates a rule which behaves the same way as the BCL

    <xref href="System.Globalization.Calendar.GetWeekOfYear(System.DateTime%2cSystem.Globalization.CalendarWeekRule%2cSystem.DayOfWeek)" data-throw-if-not-resolved="false"></xref>

    method.
  remarks: >-
    The BCL week year rules are subtly different to the ISO rules.
        In particular, the last few days of the calendar year are always part of the same
        week-year in the BCL rules, whereas in the ISO rules they can fall into the next
        week-year. (The first few days of the calendar year can be part of the previous
        week-year in both kinds of rule.) This means that in the BCL rules, some weeks
        are incomplete, whereas ISO weeks are always exactly 7 days long.
  example: []
  syntax:
    content: public static IWeekYearRule FromCalendarWeekRule(CalendarWeekRule calendarWeekRule, DayOfWeek firstDayOfWeek)
    parameters:
    - id: calendarWeekRule
      type: System.Globalization.CalendarWeekRule
      description: The BCL rule to emulate.
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: The first day of the week to use in the rule.
    return:
      type: NodaTime.Calendars.IWeekYearRule
      description: >-
        A rule which behaves the same way as the BCL
            <xref href="System.Globalization.Calendar.GetWeekOfYear(System.DateTime%2cSystem.Globalization.CalendarWeekRule%2cSystem.DayOfWeek)" data-throw-if-not-resolved="false"></xref>
            method.
    content.vb: Public Shared Function FromCalendarWeekRule(calendarWeekRule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As IWeekYearRule
  overload: NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule*
references:
- uid: NodaTime.Calendars
  commentId: N:NodaTime.Calendars
  href: NodaTime.html
  name: NodaTime.Calendars
  nameWithType: NodaTime.Calendars
  fullName: NodaTime.Calendars
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Calendars
    name: Calendars
    href: NodaTime.Calendars.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Calendars.IWeekYearRule
  commentId: T:NodaTime.Calendars.IWeekYearRule
  parent: NodaTime.Calendars
  href: NodaTime.Calendars.IWeekYearRule.html
  name: IWeekYearRule
  nameWithType: IWeekYearRule
  fullName: NodaTime.Calendars.IWeekYearRule
- uid: NodaTime.Calendars.WeekYearRules.Iso*
  commentId: Overload:NodaTime.Calendars.WeekYearRules.Iso
  href: NodaTime.Calendars.WeekYearRules.html#NodaTime_Calendars_WeekYearRules_Iso
  name: Iso
  nameWithType: WeekYearRules.Iso
  fullName: NodaTime.Calendars.WeekYearRules.Iso
- uid: NodaTime.Calendars.SimpleWeekYearRule
  commentId: T:NodaTime.Calendars.SimpleWeekYearRule
  href: NodaTime.Calendars.SimpleWeekYearRule.html
  name: SimpleWeekYearRule
  nameWithType: SimpleWeekYearRule
  fullName: NodaTime.Calendars.SimpleWeekYearRule
- uid: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek*
  commentId: Overload:NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek
  href: NodaTime.Calendars.WeekYearRules.html#NodaTime_Calendars_WeekYearRules_ForMinDaysInFirstWeek_System_Int32_
  name: ForMinDaysInFirstWeek
  nameWithType: WeekYearRules.ForMinDaysInFirstWeek
  fullName: NodaTime.Calendars.WeekYearRules.ForMinDaysInFirstWeek
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.IsoDayOfWeek
  commentId: T:NodaTime.IsoDayOfWeek
  parent: NodaTime
  href: NodaTime.IsoDayOfWeek.html
  name: IsoDayOfWeek
  nameWithType: IsoDayOfWeek
  fullName: NodaTime.IsoDayOfWeek
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.calendar.getweekofyear
  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  nameWithType.vb: Calendar.GetWeekOfYear(Date, CalendarWeekRule, DayOfWeek)
  fullName.vb: System.Globalization.Calendar.GetWeekOfYear(Date, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  name.vb: GetWeekOfYear(Date, CalendarWeekRule, DayOfWeek)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: GetWeekOfYear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.calendar.getweekofyear
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.Globalization.CalendarWeekRule
    name: CalendarWeekRule
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.calendarweekrule
  - name: ','
  - name: " "
  - uid: System.DayOfWeek
    name: DayOfWeek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  - name: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: GetWeekOfYear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.calendar.getweekofyear
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.Globalization.CalendarWeekRule
    name: CalendarWeekRule
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.calendarweekrule
  - name: ','
  - name: " "
  - uid: System.DayOfWeek
    name: DayOfWeek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  - name: )
- uid: NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule*
  commentId: Overload:NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule
  href: NodaTime.Calendars.WeekYearRules.html#NodaTime_Calendars_WeekYearRules_FromCalendarWeekRule_System_Globalization_CalendarWeekRule_System_DayOfWeek_
  name: FromCalendarWeekRule
  nameWithType: WeekYearRules.FromCalendarWeekRule
  fullName: NodaTime.Calendars.WeekYearRules.FromCalendarWeekRule
- uid: System.Globalization.CalendarWeekRule
  commentId: T:System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.calendarweekrule
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
shouldSkipMarkup: true
