### YamlMime:ManagedReference
items:
- uid: NodaTime.PeriodUnits
  commentId: T:NodaTime.PeriodUnits
  id: PeriodUnits
  parent: NodaTime
  children:
  - NodaTime.PeriodUnits.AllDateUnits
  - NodaTime.PeriodUnits.AllTimeUnits
  - NodaTime.PeriodUnits.AllUnits
  - NodaTime.PeriodUnits.DateAndTime
  - NodaTime.PeriodUnits.Days
  - NodaTime.PeriodUnits.HourMinuteSecond
  - NodaTime.PeriodUnits.Hours
  - NodaTime.PeriodUnits.Milliseconds
  - NodaTime.PeriodUnits.Minutes
  - NodaTime.PeriodUnits.Months
  - NodaTime.PeriodUnits.Nanoseconds
  - NodaTime.PeriodUnits.None
  - NodaTime.PeriodUnits.Seconds
  - NodaTime.PeriodUnits.Ticks
  - NodaTime.PeriodUnits.Weeks
  - NodaTime.PeriodUnits.YearMonthDay
  - NodaTime.PeriodUnits.Years
  langs:
  - csharp
  - vb
  name: PeriodUnits
  nameWithType: PeriodUnits
  fullName: NodaTime.PeriodUnits
  type: Enum
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    The units within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>. When a period is created to find the difference between two local values,

    the caller may specify which units are required - for example, you can ask for the difference between two dates

    in "years and weeks". Units are always applied largest-first in arithmetic.
  example: []
  syntax:
    content: >-
      [Flags]

      public enum PeriodUnits
    content.vb: >-
      <Flags>

      Public Enum PeriodUnits
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: NodaTime.PeriodUnits.None
  commentId: F:NodaTime.PeriodUnits.None
  id: None
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: None
  nameWithType: PeriodUnits.None
  fullName: NodaTime.PeriodUnits.None
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Value indicating no units - an empty period.
  example: []
  syntax:
    content: None = 0
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Years
  commentId: F:NodaTime.PeriodUnits.Years
  id: Years
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Years
  nameWithType: PeriodUnits.Years
  fullName: NodaTime.PeriodUnits.Years
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Years element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Years = 1
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Months
  commentId: F:NodaTime.PeriodUnits.Months
  id: Months
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Months
  nameWithType: PeriodUnits.Months
  fullName: NodaTime.PeriodUnits.Months
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Months element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Months = 2
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Weeks
  commentId: F:NodaTime.PeriodUnits.Weeks
  id: Weeks
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Weeks
  nameWithType: PeriodUnits.Weeks
  fullName: NodaTime.PeriodUnits.Weeks
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Weeks element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Weeks = 4
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Days
  commentId: F:NodaTime.PeriodUnits.Days
  id: Days
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Days
  nameWithType: PeriodUnits.Days
  fullName: NodaTime.PeriodUnits.Days
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Days element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Days = 8
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.AllDateUnits
  commentId: F:NodaTime.PeriodUnits.AllDateUnits
  id: AllDateUnits
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: AllDateUnits
  nameWithType: PeriodUnits.AllDateUnits
  fullName: NodaTime.PeriodUnits.AllDateUnits
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of <xref href="NodaTime.PeriodUnits.Years" data-throw-if-not-resolved="false"></xref>, <xref href="NodaTime.PeriodUnits.Months" data-throw-if-not-resolved="false"></xref>, <xref href="NodaTime.PeriodUnits.Weeks" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.PeriodUnits.Days" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: AllDateUnits = Weeks | YearMonthDay
    return:
      type: NodaTime.PeriodUnits
    content.vb: AllDateUnits = Weeks Or YearMonthDay
- uid: NodaTime.PeriodUnits.YearMonthDay
  commentId: F:NodaTime.PeriodUnits.YearMonthDay
  id: YearMonthDay
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: YearMonthDay
  nameWithType: PeriodUnits.YearMonthDay
  fullName: NodaTime.PeriodUnits.YearMonthDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of <xref href="NodaTime.PeriodUnits.Years" data-throw-if-not-resolved="false"></xref>, <xref href="NodaTime.PeriodUnits.Months" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.PeriodUnits.Days" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: YearMonthDay = Years | Months | Days
    return:
      type: NodaTime.PeriodUnits
    content.vb: YearMonthDay = Years Or Months Or Days
- uid: NodaTime.PeriodUnits.Hours
  commentId: F:NodaTime.PeriodUnits.Hours
  id: Hours
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Hours
  nameWithType: PeriodUnits.Hours
  fullName: NodaTime.PeriodUnits.Hours
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Hours element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Hours = 16
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Minutes
  commentId: F:NodaTime.PeriodUnits.Minutes
  id: Minutes
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Minutes
  nameWithType: PeriodUnits.Minutes
  fullName: NodaTime.PeriodUnits.Minutes
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Minutes element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Minutes = 32
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Seconds
  commentId: F:NodaTime.PeriodUnits.Seconds
  id: Seconds
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Seconds
  nameWithType: PeriodUnits.Seconds
  fullName: NodaTime.PeriodUnits.Seconds
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Seconds element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Seconds = 64
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Milliseconds
  commentId: F:NodaTime.PeriodUnits.Milliseconds
  id: Milliseconds
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Milliseconds
  nameWithType: PeriodUnits.Milliseconds
  fullName: NodaTime.PeriodUnits.Milliseconds
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Milliseconds element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Milliseconds = 128
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Ticks
  commentId: F:NodaTime.PeriodUnits.Ticks
  id: Ticks
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Ticks
  nameWithType: PeriodUnits.Ticks
  fullName: NodaTime.PeriodUnits.Ticks
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Tick element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Ticks = 256
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Nanoseconds
  commentId: F:NodaTime.PeriodUnits.Nanoseconds
  id: Nanoseconds
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: Nanoseconds
  nameWithType: PeriodUnits.Nanoseconds
  fullName: NodaTime.PeriodUnits.Nanoseconds
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Nanoseconds element within a <xref href="NodaTime.Period" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Nanoseconds = 512
    return:
      type: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.HourMinuteSecond
  commentId: F:NodaTime.PeriodUnits.HourMinuteSecond
  id: HourMinuteSecond
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: HourMinuteSecond
  nameWithType: PeriodUnits.HourMinuteSecond
  fullName: NodaTime.PeriodUnits.HourMinuteSecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of <xref href="NodaTime.PeriodUnits.Hours" data-throw-if-not-resolved="false"></xref>, <xref href="NodaTime.PeriodUnits.Minutes" data-throw-if-not-resolved="false"></xref> and <xref href="NodaTime.PeriodUnits.Seconds" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: HourMinuteSecond = Hours | Minutes | Seconds
    return:
      type: NodaTime.PeriodUnits
    content.vb: HourMinuteSecond = Hours Or Minutes Or Seconds
- uid: NodaTime.PeriodUnits.AllTimeUnits
  commentId: F:NodaTime.PeriodUnits.AllTimeUnits
  id: AllTimeUnits
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: AllTimeUnits
  nameWithType: PeriodUnits.AllTimeUnits
  fullName: NodaTime.PeriodUnits.AllTimeUnits
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of all time elements.
  example: []
  syntax:
    content: AllTimeUnits = HourMinuteSecond | Milliseconds | Ticks | Nanoseconds
    return:
      type: NodaTime.PeriodUnits
    content.vb: AllTimeUnits = HourMinuteSecond Or Milliseconds Or Ticks Or Nanoseconds
- uid: NodaTime.PeriodUnits.DateAndTime
  commentId: F:NodaTime.PeriodUnits.DateAndTime
  id: DateAndTime
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: DateAndTime
  nameWithType: PeriodUnits.DateAndTime
  fullName: NodaTime.PeriodUnits.DateAndTime
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of all possible elements except weeks.
  example: []
  syntax:
    content: DateAndTime = YearMonthDay | AllTimeUnits
    return:
      type: NodaTime.PeriodUnits
    content.vb: DateAndTime = YearMonthDay Or AllTimeUnits
- uid: NodaTime.PeriodUnits.AllUnits
  commentId: F:NodaTime.PeriodUnits.AllUnits
  id: AllUnits
  parent: NodaTime.PeriodUnits
  langs:
  - csharp
  - vb
  name: AllUnits
  nameWithType: PeriodUnits.AllUnits
  fullName: NodaTime.PeriodUnits.AllUnits
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Compound value representing the combination of all possible elements.
  example: []
  syntax:
    content: AllUnits = Weeks | DateAndTime
    return:
      type: NodaTime.PeriodUnits
    content.vb: AllUnits = Weeks Or DateAndTime
references:
- uid: NodaTime.Period
  commentId: T:NodaTime.Period
  parent: NodaTime
  href: NodaTime.Period.html
  name: Period
  nameWithType: Period
  fullName: NodaTime.Period
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.PeriodUnits
  commentId: T:NodaTime.PeriodUnits
  parent: NodaTime
  href: NodaTime.PeriodUnits.html
  name: PeriodUnits
  nameWithType: PeriodUnits
  fullName: NodaTime.PeriodUnits
- uid: NodaTime.PeriodUnits.Years
  commentId: F:NodaTime.PeriodUnits.Years
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Years
  name: Years
  nameWithType: PeriodUnits.Years
  fullName: NodaTime.PeriodUnits.Years
- uid: NodaTime.PeriodUnits.Months
  commentId: F:NodaTime.PeriodUnits.Months
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Months
  name: Months
  nameWithType: PeriodUnits.Months
  fullName: NodaTime.PeriodUnits.Months
- uid: NodaTime.PeriodUnits.Weeks
  commentId: F:NodaTime.PeriodUnits.Weeks
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Weeks
  name: Weeks
  nameWithType: PeriodUnits.Weeks
  fullName: NodaTime.PeriodUnits.Weeks
- uid: NodaTime.PeriodUnits.Days
  commentId: F:NodaTime.PeriodUnits.Days
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Days
  name: Days
  nameWithType: PeriodUnits.Days
  fullName: NodaTime.PeriodUnits.Days
- uid: NodaTime.PeriodUnits.Hours
  commentId: F:NodaTime.PeriodUnits.Hours
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Hours
  name: Hours
  nameWithType: PeriodUnits.Hours
  fullName: NodaTime.PeriodUnits.Hours
- uid: NodaTime.PeriodUnits.Minutes
  commentId: F:NodaTime.PeriodUnits.Minutes
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Minutes
  name: Minutes
  nameWithType: PeriodUnits.Minutes
  fullName: NodaTime.PeriodUnits.Minutes
- uid: NodaTime.PeriodUnits.Seconds
  commentId: F:NodaTime.PeriodUnits.Seconds
  href: NodaTime.PeriodUnits.html#NodaTime_PeriodUnits_Seconds
  name: Seconds
  nameWithType: PeriodUnits.Seconds
  fullName: NodaTime.PeriodUnits.Seconds
shouldSkipMarkup: true
