### YamlMime:ManagedReference
items:
- uid: NodaTime.Text.LocalTimePattern
  commentId: T:NodaTime.Text.LocalTimePattern
  id: LocalTimePattern
  parent: NodaTime.Text
  children:
  - NodaTime.Text.LocalTimePattern.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  - NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo)
  - NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo,NodaTime.LocalTime)
  - NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture(System.String)
  - NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture(System.String)
  - NodaTime.Text.LocalTimePattern.ExtendedIso
  - NodaTime.Text.LocalTimePattern.Format(NodaTime.LocalTime)
  - NodaTime.Text.LocalTimePattern.GeneralIso
  - NodaTime.Text.LocalTimePattern.HourIso
  - NodaTime.Text.LocalTimePattern.HourMinuteIso
  - NodaTime.Text.LocalTimePattern.LongExtendedIso
  - NodaTime.Text.LocalTimePattern.Parse(System.String)
  - NodaTime.Text.LocalTimePattern.PatternText
  - NodaTime.Text.LocalTimePattern.TemplateValue
  - NodaTime.Text.LocalTimePattern.VariablePrecisionIso
  - NodaTime.Text.LocalTimePattern.WithCulture(System.Globalization.CultureInfo)
  - NodaTime.Text.LocalTimePattern.WithTemplateValue(NodaTime.LocalTime)
  langs:
  - csharp
  - vb
  name: LocalTimePattern
  nameWithType: LocalTimePattern
  fullName: NodaTime.Text.LocalTimePattern
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Represents a pattern for parsing and formatting <xref href="NodaTime.LocalTime" data-throw-if-not-resolved="false"></xref> values.
  example: []
  syntax:
    content: 'public sealed class LocalTimePattern : IPattern<LocalTime>'
    content.vb: Public NotInheritable Class LocalTimePattern Implements IPattern(Of LocalTime)
  inheritance:
  - System.Object
  implements:
  - NodaTime.Text.IPattern{NodaTime.LocalTime}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Text.LocalTimePattern.ExtendedIso
  commentId: P:NodaTime.Text.LocalTimePattern.ExtendedIso
  id: ExtendedIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: ExtendedIso
  nameWithType: LocalTimePattern.ExtendedIso
  fullName: NodaTime.Text.LocalTimePattern.ExtendedIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which is ISO-8601 compatible, providing up to 9 decimal places.

    (These digits are omitted when unnecessary.)

    This corresponds to the text pattern "HH':'mm':'ss;FFFFFFFFF".
  remarks: This pattern corresponds to the 'o' standard pattern.
  example: []
  syntax:
    content: public static LocalTimePattern ExtendedIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.LocalTimePattern
      description: An invariant local time pattern which is ISO-8601 compatible, providing up to 9 decimal places.
    content.vb: Public Shared ReadOnly Property ExtendedIso As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.ExtendedIso*
- uid: NodaTime.Text.LocalTimePattern.LongExtendedIso
  commentId: P:NodaTime.Text.LocalTimePattern.LongExtendedIso
  id: LongExtendedIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: LongExtendedIso
  nameWithType: LocalTimePattern.LongExtendedIso
  fullName: NodaTime.Text.LocalTimePattern.LongExtendedIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which is ISO-8601 compatible, providing exactly 9 decimal places.

    This corresponds to the text pattern "HH':'mm':'ss;fffffffff".
  remarks: This pattern corresponds to the 'O' standard pattern.
  example: []
  syntax:
    content: public static LocalTimePattern LongExtendedIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.LocalTimePattern
      description: An invariant local time pattern which is ISO-8601 compatible, providing exactly 9 decimal places.
    content.vb: Public Shared ReadOnly Property LongExtendedIso As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.LongExtendedIso*
- uid: NodaTime.Text.LocalTimePattern.GeneralIso
  commentId: P:NodaTime.Text.LocalTimePattern.GeneralIso
  id: GeneralIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: GeneralIso
  nameWithType: LocalTimePattern.GeneralIso
  fullName: NodaTime.Text.LocalTimePattern.GeneralIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which is ISO-8601 compatible, with precision of just seconds.

    This corresponds to the text pattern "HH':'mm':'ss".
  example: []
  syntax:
    content: public static LocalTimePattern GeneralIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.LocalTimePattern
      description: An invariant local time pattern which is ISO-8601 compatible, with no sub-second precision.
    content.vb: Public Shared ReadOnly Property GeneralIso As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.GeneralIso*
- uid: NodaTime.Text.LocalTimePattern.HourMinuteIso
  commentId: P:NodaTime.Text.LocalTimePattern.HourMinuteIso
  id: HourMinuteIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: HourMinuteIso
  nameWithType: LocalTimePattern.HourMinuteIso
  fullName: NodaTime.Text.LocalTimePattern.HourMinuteIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which is ISO-8601 compatible, with precision of just minutes.

    This corresponds to the text pattern "HH':'mm".
  example: []
  syntax:
    content: public static LocalTimePattern HourMinuteIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.LocalTimePattern
      description: An invariant local time pattern which is ISO-8601 compatible, with no sub-minute precision.
    content.vb: Public Shared ReadOnly Property HourMinuteIso As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.HourMinuteIso*
- uid: NodaTime.Text.LocalTimePattern.HourIso
  commentId: P:NodaTime.Text.LocalTimePattern.HourIso
  id: HourIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: HourIso
  nameWithType: LocalTimePattern.HourIso
  fullName: NodaTime.Text.LocalTimePattern.HourIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which is ISO-8601 compatible, with a precision of just hours.

    This corresponds to the text pattern "HH".
  example: []
  syntax:
    content: public static LocalTimePattern HourIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.LocalTimePattern
      description: An invariant local time pattern which is ISO-8601 compatible, with no sub-hour precision.
    content.vb: Public Shared ReadOnly Property HourIso As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.HourIso*
- uid: NodaTime.Text.LocalTimePattern.VariablePrecisionIso
  commentId: P:NodaTime.Text.LocalTimePattern.VariablePrecisionIso
  id: VariablePrecisionIso
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: VariablePrecisionIso
  nameWithType: LocalTimePattern.VariablePrecisionIso
  fullName: NodaTime.Text.LocalTimePattern.VariablePrecisionIso
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets an invariant local time pattern which can parse any ISO-8601 compatible value

    (in extended format, that is, with separators), regardless of precision.

    Valid values include "just hours", "hours and minutes", "hours, minutes and seconds",

    and values with fractions of seconds (as far as nanoseconds).
  remarks: >-
    This is expressed as an <xref href="NodaTime.Text.IPattern%601" data-throw-if-not-resolved="false"></xref> rather than a <xref href="NodaTime.Text.LocalTimePattern" data-throw-if-not-resolved="false"></xref>,

    as it has no single pattern text.
  example: []
  syntax:
    content: public static IPattern<LocalTime> VariablePrecisionIso { get; }
    parameters: []
    return:
      type: NodaTime.Text.IPattern{NodaTime.LocalTime}
      description: An invariant local time pattern which is ISO-8601 compatible for all precisions.
    content.vb: Public Shared ReadOnly Property VariablePrecisionIso As IPattern(Of LocalTime)
  overload: NodaTime.Text.LocalTimePattern.VariablePrecisionIso*
- uid: NodaTime.Text.LocalTimePattern.PatternText
  commentId: P:NodaTime.Text.LocalTimePattern.PatternText
  id: PatternText
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: PatternText
  nameWithType: LocalTimePattern.PatternText
  fullName: NodaTime.Text.LocalTimePattern.PatternText
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Gets the pattern text for this pattern, as supplied on creation.
  example: []
  syntax:
    content: public string PatternText { get; }
    parameters: []
    return:
      type: System.String
      description: The pattern text for this pattern, as supplied on creation.
    content.vb: Public ReadOnly Property PatternText As String
  overload: NodaTime.Text.LocalTimePattern.PatternText*
- uid: NodaTime.Text.LocalTimePattern.TemplateValue
  commentId: P:NodaTime.Text.LocalTimePattern.TemplateValue
  id: TemplateValue
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: TemplateValue
  nameWithType: LocalTimePattern.TemplateValue
  fullName: NodaTime.Text.LocalTimePattern.TemplateValue
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Gets the value used as a template for parsing: any field values unspecified

    in the pattern are taken from the template.
  example: []
  syntax:
    content: public LocalTime TemplateValue { get; }
    parameters: []
    return:
      type: NodaTime.LocalTime
      description: The value used as a template for parsing.
    content.vb: Public ReadOnly Property TemplateValue As LocalTime
  overload: NodaTime.Text.LocalTimePattern.TemplateValue*
- uid: NodaTime.Text.LocalTimePattern.Parse(System.String)
  commentId: M:NodaTime.Text.LocalTimePattern.Parse(System.String)
  id: Parse(System.String)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: LocalTimePattern.Parse(string)
  fullName: NodaTime.Text.LocalTimePattern.Parse(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Parses the given text value according to the rules of this pattern.
  remarks: >-
    This method never throws an exception (barring a bug in Noda Time itself). Even errors such as

    the argument being null are wrapped in a parse result.
  example: []
  syntax:
    content: public ParseResult<LocalTime> Parse(string text)
    parameters:
    - id: text
      type: System.String
      description: The text value to parse.
    return:
      type: NodaTime.Text.ParseResult{NodaTime.LocalTime}
      description: The result of parsing, which may be successful or unsuccessful.
    content.vb: Public Function Parse(text As String) As ParseResult(Of LocalTime)
  overload: NodaTime.Text.LocalTimePattern.Parse*
  implements:
  - NodaTime.Text.IPattern{NodaTime.LocalTime}.Parse(System.String)
  nameWithType.vb: LocalTimePattern.Parse(String)
  fullName.vb: NodaTime.Text.LocalTimePattern.Parse(String)
  name.vb: Parse(String)
- uid: NodaTime.Text.LocalTimePattern.Format(NodaTime.LocalTime)
  commentId: M:NodaTime.Text.LocalTimePattern.Format(NodaTime.LocalTime)
  id: Format(NodaTime.LocalTime)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: Format(LocalTime)
  nameWithType: LocalTimePattern.Format(LocalTime)
  fullName: NodaTime.Text.LocalTimePattern.Format(NodaTime.LocalTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Formats the given local time as text according to the rules of this pattern.
  example: []
  syntax:
    content: public string Format(LocalTime value)
    parameters:
    - id: value
      type: NodaTime.LocalTime
      description: The local time to format.
    return:
      type: System.String
      description: The local time formatted according to this pattern.
    content.vb: Public Function Format(value As LocalTime) As String
  overload: NodaTime.Text.LocalTimePattern.Format*
  implements:
  - NodaTime.Text.IPattern{NodaTime.LocalTime}.Format(NodaTime.LocalTime)
- uid: NodaTime.Text.LocalTimePattern.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.LocalTimePattern.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  id: AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: AppendFormat(LocalTime, StringBuilder)
  nameWithType: LocalTimePattern.AppendFormat(LocalTime, StringBuilder)
  fullName: NodaTime.Text.LocalTimePattern.AppendFormat(NodaTime.LocalTime, System.Text.StringBuilder)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Formats the given value as text according to the rules of this pattern,

    appending to the given <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public StringBuilder AppendFormat(LocalTime value, StringBuilder builder)
    parameters:
    - id: value
      type: NodaTime.LocalTime
      description: The value to format.
    - id: builder
      type: System.Text.StringBuilder
      description: The <code>StringBuilder</code> to append to.
    return:
      type: System.Text.StringBuilder
      description: The builder passed in as <code class="paramref">builder</code>.
    content.vb: Public Function AppendFormat(value As LocalTime, builder As StringBuilder) As StringBuilder
  overload: NodaTime.Text.LocalTimePattern.AppendFormat*
  implements:
  - NodaTime.Text.IPattern{NodaTime.LocalTime}.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
- uid: NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo,NodaTime.LocalTime)
  commentId: M:NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo,NodaTime.LocalTime)
  id: Create(System.String,System.Globalization.CultureInfo,NodaTime.LocalTime)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: Create(string, CultureInfo, LocalTime)
  nameWithType: LocalTimePattern.Create(string, CultureInfo, LocalTime)
  fullName: NodaTime.Text.LocalTimePattern.Create(string, System.Globalization.CultureInfo, NodaTime.LocalTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text, culture, and template value.
  remarks: See the user guide for the available pattern text options.
  example: []
  syntax:
    content: public static LocalTimePattern Create(string patternText, CultureInfo cultureInfo, LocalTime templateValue)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in the pattern
    - id: templateValue
      type: NodaTime.LocalTime
      description: Template value to use for unspecified fields
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A pattern for parsing and formatting local times.
    content.vb: Public Shared Function Create(patternText As String, cultureInfo As CultureInfo, templateValue As LocalTime) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.Create*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: LocalTimePattern.Create(String, CultureInfo, LocalTime)
  fullName.vb: NodaTime.Text.LocalTimePattern.Create(String, System.Globalization.CultureInfo, NodaTime.LocalTime)
  name.vb: Create(String, CultureInfo, LocalTime)
- uid: NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo)
  commentId: M:NodaTime.Text.LocalTimePattern.Create(System.String,System.Globalization.CultureInfo)
  id: Create(System.String,System.Globalization.CultureInfo)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: Create(string, CultureInfo)
  nameWithType: LocalTimePattern.Create(string, CultureInfo)
  fullName: NodaTime.Text.LocalTimePattern.Create(string, System.Globalization.CultureInfo)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text and culture, with a template value of midnight.
  remarks: See the user guide for the available pattern text options.
  example: []
  syntax:
    content: public static LocalTimePattern Create(string patternText, CultureInfo cultureInfo)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in the pattern
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A pattern for parsing and formatting local times.
    content.vb: Public Shared Function Create(patternText As String, cultureInfo As CultureInfo) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.Create*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: LocalTimePattern.Create(String, CultureInfo)
  fullName.vb: NodaTime.Text.LocalTimePattern.Create(String, System.Globalization.CultureInfo)
  name.vb: Create(String, CultureInfo)
- uid: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture(System.String)
  commentId: M:NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture(System.String)
  id: CreateWithCurrentCulture(System.String)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: CreateWithCurrentCulture(string)
  nameWithType: LocalTimePattern.CreateWithCurrentCulture(string)
  fullName: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text in the current thread's current culture.
  remarks: >-
    See the user guide for the available pattern text options. Note that the current culture

    is captured at the time this method is called - it is not captured at the point of parsing

    or formatting values.
  example: []
  syntax:
    content: public static LocalTimePattern CreateWithCurrentCulture(string patternText)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A pattern for parsing and formatting local times.
    content.vb: Public Shared Function CreateWithCurrentCulture(patternText As String) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: LocalTimePattern.CreateWithCurrentCulture(String)
  fullName.vb: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture(String)
  name.vb: CreateWithCurrentCulture(String)
- uid: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture(System.String)
  commentId: M:NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture(System.String)
  id: CreateWithInvariantCulture(System.String)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: CreateWithInvariantCulture(string)
  nameWithType: LocalTimePattern.CreateWithInvariantCulture(string)
  fullName: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture(string)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern for the given pattern text in the invariant culture.
  remarks: See the user guide for the available pattern text options.
  example: []
  syntax:
    content: public static LocalTimePattern CreateWithInvariantCulture(string patternText)
    parameters:
    - id: patternText
      type: System.String
      description: Pattern text to create the pattern for
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A pattern for parsing and formatting local times.
    content.vb: Public Shared Function CreateWithInvariantCulture(patternText As String) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture*
  exceptions:
  - type: NodaTime.Text.InvalidPatternException
    commentId: T:NodaTime.Text.InvalidPatternException
    description: The pattern text was invalid.
  nameWithType.vb: LocalTimePattern.CreateWithInvariantCulture(String)
  fullName.vb: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture(String)
  name.vb: CreateWithInvariantCulture(String)
- uid: NodaTime.Text.LocalTimePattern.WithCulture(System.Globalization.CultureInfo)
  commentId: M:NodaTime.Text.LocalTimePattern.WithCulture(System.Globalization.CultureInfo)
  id: WithCulture(System.Globalization.CultureInfo)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: WithCulture(CultureInfo)
  nameWithType: LocalTimePattern.WithCulture(CultureInfo)
  fullName: NodaTime.Text.LocalTimePattern.WithCulture(System.Globalization.CultureInfo)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: >-
    Creates a pattern for the same original pattern text as this pattern, but with the specified

    culture.
  example: []
  syntax:
    content: public LocalTimePattern WithCulture(CultureInfo cultureInfo)
    parameters:
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in the new pattern.
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A new pattern with the given culture.
    content.vb: Public Function WithCulture(cultureInfo As CultureInfo) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.WithCulture*
- uid: NodaTime.Text.LocalTimePattern.WithTemplateValue(NodaTime.LocalTime)
  commentId: M:NodaTime.Text.LocalTimePattern.WithTemplateValue(NodaTime.LocalTime)
  id: WithTemplateValue(NodaTime.LocalTime)
  parent: NodaTime.Text.LocalTimePattern
  langs:
  - csharp
  - vb
  name: WithTemplateValue(LocalTime)
  nameWithType: LocalTimePattern.WithTemplateValue(LocalTime)
  fullName: NodaTime.Text.LocalTimePattern.WithTemplateValue(NodaTime.LocalTime)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.Text
  summary: Creates a pattern like this one, but with the specified template value.
  example: []
  syntax:
    content: public LocalTimePattern WithTemplateValue(LocalTime newTemplateValue)
    parameters:
    - id: newTemplateValue
      type: NodaTime.LocalTime
      description: The template value for the new pattern, used to fill in unspecified fields.
    return:
      type: NodaTime.Text.LocalTimePattern
      description: A new pattern with the given template value.
    content.vb: Public Function WithTemplateValue(newTemplateValue As LocalTime) As LocalTimePattern
  overload: NodaTime.Text.LocalTimePattern.WithTemplateValue*
references:
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  href: NodaTime.LocalTime.html
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: NodaTime.Text
  commentId: N:NodaTime.Text
  href: NodaTime.html
  name: NodaTime.Text
  nameWithType: NodaTime.Text
  fullName: NodaTime.Text
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Text
    name: Text
    href: NodaTime.Text.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Text
    name: Text
    href: NodaTime.Text.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NodaTime.Text.IPattern{NodaTime.LocalTime}
  commentId: T:NodaTime.Text.IPattern{NodaTime.LocalTime}
  parent: NodaTime.Text
  definition: NodaTime.Text.IPattern`1
  href: NodaTime.Text.IPattern-1.html
  name: IPattern<LocalTime>
  nameWithType: IPattern<LocalTime>
  fullName: NodaTime.Text.IPattern<NodaTime.LocalTime>
  nameWithType.vb: IPattern(Of LocalTime)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.LocalTime)
  name.vb: IPattern(Of LocalTime)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: <
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Text.IPattern`1
  commentId: T:NodaTime.Text.IPattern`1
  href: NodaTime.Text.IPattern-1.html
  name: IPattern<T>
  nameWithType: IPattern<T>
  fullName: NodaTime.Text.IPattern<T>
  nameWithType.vb: IPattern(Of T)
  fullName.vb: NodaTime.Text.IPattern(Of T)
  name.vb: IPattern(Of T)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.IPattern`1
    name: IPattern
    href: NodaTime.Text.IPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.Text.LocalTimePattern.ExtendedIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.ExtendedIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_ExtendedIso
  name: ExtendedIso
  nameWithType: LocalTimePattern.ExtendedIso
  fullName: NodaTime.Text.LocalTimePattern.ExtendedIso
- uid: NodaTime.Text.LocalTimePattern
  commentId: T:NodaTime.Text.LocalTimePattern
  parent: NodaTime.Text
  href: NodaTime.Text.LocalTimePattern.html
  name: LocalTimePattern
  nameWithType: LocalTimePattern
  fullName: NodaTime.Text.LocalTimePattern
- uid: NodaTime.Text.LocalTimePattern.LongExtendedIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.LongExtendedIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_LongExtendedIso
  name: LongExtendedIso
  nameWithType: LocalTimePattern.LongExtendedIso
  fullName: NodaTime.Text.LocalTimePattern.LongExtendedIso
- uid: NodaTime.Text.LocalTimePattern.GeneralIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.GeneralIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_GeneralIso
  name: GeneralIso
  nameWithType: LocalTimePattern.GeneralIso
  fullName: NodaTime.Text.LocalTimePattern.GeneralIso
- uid: NodaTime.Text.LocalTimePattern.HourMinuteIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.HourMinuteIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_HourMinuteIso
  name: HourMinuteIso
  nameWithType: LocalTimePattern.HourMinuteIso
  fullName: NodaTime.Text.LocalTimePattern.HourMinuteIso
- uid: NodaTime.Text.LocalTimePattern.HourIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.HourIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_HourIso
  name: HourIso
  nameWithType: LocalTimePattern.HourIso
  fullName: NodaTime.Text.LocalTimePattern.HourIso
- uid: NodaTime.Text.LocalTimePattern.VariablePrecisionIso*
  commentId: Overload:NodaTime.Text.LocalTimePattern.VariablePrecisionIso
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_VariablePrecisionIso
  name: VariablePrecisionIso
  nameWithType: LocalTimePattern.VariablePrecisionIso
  fullName: NodaTime.Text.LocalTimePattern.VariablePrecisionIso
- uid: NodaTime.Text.LocalTimePattern.PatternText*
  commentId: Overload:NodaTime.Text.LocalTimePattern.PatternText
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_PatternText
  name: PatternText
  nameWithType: LocalTimePattern.PatternText
  fullName: NodaTime.Text.LocalTimePattern.PatternText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.Text.LocalTimePattern.TemplateValue*
  commentId: Overload:NodaTime.Text.LocalTimePattern.TemplateValue
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_TemplateValue
  name: TemplateValue
  nameWithType: LocalTimePattern.TemplateValue
  fullName: NodaTime.Text.LocalTimePattern.TemplateValue
- uid: NodaTime.Text.LocalTimePattern.Parse*
  commentId: Overload:NodaTime.Text.LocalTimePattern.Parse
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_Parse_System_String_
  name: Parse
  nameWithType: LocalTimePattern.Parse
  fullName: NodaTime.Text.LocalTimePattern.Parse
- uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Parse(System.String)
  commentId: M:NodaTime.Text.IPattern{NodaTime.LocalTime}.Parse(System.String)
  parent: NodaTime.Text.IPattern{NodaTime.LocalTime}
  definition: NodaTime.Text.IPattern`1.Parse(System.String)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  name: Parse(string)
  nameWithType: IPattern<LocalTime>.Parse(string)
  fullName: NodaTime.Text.IPattern<NodaTime.LocalTime>.Parse(string)
  nameWithType.vb: IPattern(Of LocalTime).Parse(String)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.LocalTime).Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.Text.ParseResult{NodaTime.LocalTime}
  commentId: T:NodaTime.Text.ParseResult{NodaTime.LocalTime}
  parent: NodaTime.Text
  definition: NodaTime.Text.ParseResult`1
  href: NodaTime.Text.ParseResult-1.html
  name: ParseResult<LocalTime>
  nameWithType: ParseResult<LocalTime>
  fullName: NodaTime.Text.ParseResult<NodaTime.LocalTime>
  nameWithType.vb: ParseResult(Of LocalTime)
  fullName.vb: NodaTime.Text.ParseResult(Of NodaTime.LocalTime)
  name.vb: ParseResult(Of LocalTime)
  spec.csharp:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: <
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
- uid: NodaTime.Text.IPattern`1.Parse(System.String)
  commentId: M:NodaTime.Text.IPattern`1.Parse(System.String)
  isExternal: true
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  name: Parse(string)
  nameWithType: IPattern<T>.Parse(string)
  fullName: NodaTime.Text.IPattern<T>.Parse(string)
  nameWithType.vb: IPattern(Of T).Parse(String)
  fullName.vb: NodaTime.Text.IPattern(Of T).Parse(String)
  name.vb: Parse(String)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.Parse(System.String)
    name: Parse
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Parse_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NodaTime.Text.ParseResult`1
  commentId: T:NodaTime.Text.ParseResult`1
  parent: NodaTime.Text
  href: NodaTime.Text.ParseResult-1.html
  name: ParseResult<T>
  nameWithType: ParseResult<T>
  fullName: NodaTime.Text.ParseResult<T>
  nameWithType.vb: ParseResult(Of T)
  fullName.vb: NodaTime.Text.ParseResult(Of T)
  name.vb: ParseResult(Of T)
  spec.csharp:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NodaTime.Text.ParseResult`1
    name: ParseResult
    href: NodaTime.Text.ParseResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NodaTime.Text.LocalTimePattern.Format*
  commentId: Overload:NodaTime.Text.LocalTimePattern.Format
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_Format_NodaTime_LocalTime_
  name: Format
  nameWithType: LocalTimePattern.Format
  fullName: NodaTime.Text.LocalTimePattern.Format
- uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Format(NodaTime.LocalTime)
  commentId: M:NodaTime.Text.IPattern{NodaTime.LocalTime}.Format(NodaTime.LocalTime)
  parent: NodaTime.Text.IPattern{NodaTime.LocalTime}
  definition: NodaTime.Text.IPattern`1.Format(`0)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  name: Format(LocalTime)
  nameWithType: IPattern<LocalTime>.Format(LocalTime)
  fullName: NodaTime.Text.IPattern<NodaTime.LocalTime>.Format(NodaTime.LocalTime)
  nameWithType.vb: IPattern(Of LocalTime).Format(LocalTime)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.LocalTime).Format(NodaTime.LocalTime)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Format(NodaTime.LocalTime)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.Format(NodaTime.LocalTime)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: )
- uid: NodaTime.Text.IPattern`1.Format(`0)
  commentId: M:NodaTime.Text.IPattern`1.Format(`0)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  name: Format(T)
  nameWithType: IPattern<T>.Format(T)
  fullName: NodaTime.Text.IPattern<T>.Format(T)
  nameWithType.vb: IPattern(Of T).Format(T)
  fullName.vb: NodaTime.Text.IPattern(Of T).Format(T)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.Format(`0)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.Format(`0)
    name: Format
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_Format__0_
  - name: (
  - name: T
  - name: )
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: NodaTime.Text.LocalTimePattern.AppendFormat*
  commentId: Overload:NodaTime.Text.LocalTimePattern.AppendFormat
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_AppendFormat_NodaTime_LocalTime_System_Text_StringBuilder_
  name: AppendFormat
  nameWithType: LocalTimePattern.AppendFormat
  fullName: NodaTime.Text.LocalTimePattern.AppendFormat
- uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.IPattern{NodaTime.LocalTime}.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
  parent: NodaTime.Text.IPattern{NodaTime.LocalTime}
  definition: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  name: AppendFormat(LocalTime, StringBuilder)
  nameWithType: IPattern<LocalTime>.AppendFormat(LocalTime, StringBuilder)
  fullName: NodaTime.Text.IPattern<NodaTime.LocalTime>.AppendFormat(NodaTime.LocalTime, System.Text.StringBuilder)
  nameWithType.vb: IPattern(Of LocalTime).AppendFormat(LocalTime, StringBuilder)
  fullName.vb: NodaTime.Text.IPattern(Of NodaTime.LocalTime).AppendFormat(NodaTime.LocalTime, System.Text.StringBuilder)
  spec.csharp:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern{NodaTime.LocalTime}.AppendFormat(NodaTime.LocalTime,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - uid: NodaTime.LocalTime
    name: LocalTime
    href: NodaTime.LocalTime.html
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  commentId: M:NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
  isExternal: true
  href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  name: AppendFormat(T, StringBuilder)
  nameWithType: IPattern<T>.AppendFormat(T, StringBuilder)
  fullName: NodaTime.Text.IPattern<T>.AppendFormat(T, System.Text.StringBuilder)
  nameWithType.vb: IPattern(Of T).AppendFormat(T, StringBuilder)
  fullName.vb: NodaTime.Text.IPattern(Of T).AppendFormat(T, System.Text.StringBuilder)
  spec.csharp:
  - uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
  spec.vb:
  - uid: NodaTime.Text.IPattern`1.AppendFormat(`0,System.Text.StringBuilder)
    name: AppendFormat
    href: NodaTime.Text.IPattern-1.html#NodaTime_Text_IPattern_1_AppendFormat__0_System_Text_StringBuilder_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: )
- uid: NodaTime.Text.InvalidPatternException
  commentId: T:NodaTime.Text.InvalidPatternException
  href: NodaTime.Text.InvalidPatternException.html
  name: InvalidPatternException
  nameWithType: InvalidPatternException
  fullName: NodaTime.Text.InvalidPatternException
- uid: NodaTime.Text.LocalTimePattern.Create*
  commentId: Overload:NodaTime.Text.LocalTimePattern.Create
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_Create_System_String_System_Globalization_CultureInfo_NodaTime_LocalTime_
  name: Create
  nameWithType: LocalTimePattern.Create
  fullName: NodaTime.Text.LocalTimePattern.Create
- uid: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture*
  commentId: Overload:NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_CreateWithCurrentCulture_System_String_
  name: CreateWithCurrentCulture
  nameWithType: LocalTimePattern.CreateWithCurrentCulture
  fullName: NodaTime.Text.LocalTimePattern.CreateWithCurrentCulture
- uid: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture*
  commentId: Overload:NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_CreateWithInvariantCulture_System_String_
  name: CreateWithInvariantCulture
  nameWithType: LocalTimePattern.CreateWithInvariantCulture
  fullName: NodaTime.Text.LocalTimePattern.CreateWithInvariantCulture
- uid: NodaTime.Text.LocalTimePattern.WithCulture*
  commentId: Overload:NodaTime.Text.LocalTimePattern.WithCulture
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_WithCulture_System_Globalization_CultureInfo_
  name: WithCulture
  nameWithType: LocalTimePattern.WithCulture
  fullName: NodaTime.Text.LocalTimePattern.WithCulture
- uid: NodaTime.Text.LocalTimePattern.WithTemplateValue*
  commentId: Overload:NodaTime.Text.LocalTimePattern.WithTemplateValue
  href: NodaTime.Text.LocalTimePattern.html#NodaTime_Text_LocalTimePattern_WithTemplateValue_NodaTime_LocalTime_
  name: WithTemplateValue
  nameWithType: LocalTimePattern.WithTemplateValue
  fullName: NodaTime.Text.LocalTimePattern.WithTemplateValue
shouldSkipMarkup: true
