### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.Cldr.MapZone
  commentId: T:NodaTime.TimeZones.Cldr.MapZone
  id: MapZone
  parent: NodaTime.TimeZones.Cldr
  children:
  - NodaTime.TimeZones.Cldr.MapZone.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  - NodaTime.TimeZones.Cldr.MapZone.Equals(NodaTime.TimeZones.Cldr.MapZone)
  - NodaTime.TimeZones.Cldr.MapZone.Equals(System.Object)
  - NodaTime.TimeZones.Cldr.MapZone.FixedOffsetTerritory
  - NodaTime.TimeZones.Cldr.MapZone.GetHashCode
  - NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  - NodaTime.TimeZones.Cldr.MapZone.Territory
  - NodaTime.TimeZones.Cldr.MapZone.ToString
  - NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  - NodaTime.TimeZones.Cldr.MapZone.WindowsId
  langs:
  - csharp
  - vb
  name: MapZone
  nameWithType: MapZone
  fullName: NodaTime.TimeZones.Cldr.MapZone
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Represents a single <code>&lt;mapZone&gt;</code> element in the CLDR Windows zone mapping file.
  remarks: >-
    <p>

    Equality is defined in a component-wise fashion. When comparing two values for equality, the <xref href="NodaTime.TimeZones.Cldr.MapZone.TzdbIds" data-throw-if-not-resolved="false"></xref> properties

    must return the same IDs in the same order for the values to be considered equal.

    </p>
  example: []
  syntax:
    content: 'public sealed class MapZone : IEquatable<MapZone?>'
    content.vb: Public NotInheritable Class MapZone Implements IEquatable(Of MapZone)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  commentId: F:NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  id: PrimaryTerritory
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: PrimaryTerritory
  nameWithType: MapZone.PrimaryTerritory
  fullName: NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Identifier used for the primary territory of each Windows time zone. A zone mapping with

    this territory will always have a single entry. The value of this constant is "001".
  example: []
  syntax:
    content: public const string PrimaryTerritory = "001"
    return:
      type: System.String
    content.vb: Public Const PrimaryTerritory As String = "001"
- uid: NodaTime.TimeZones.Cldr.MapZone.FixedOffsetTerritory
  commentId: F:NodaTime.TimeZones.Cldr.MapZone.FixedOffsetTerritory
  id: FixedOffsetTerritory
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: FixedOffsetTerritory
  nameWithType: MapZone.FixedOffsetTerritory
  fullName: NodaTime.TimeZones.Cldr.MapZone.FixedOffsetTerritory
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Identifier used for the "fixed offset" territory. A zone mapping with

    this territory will always have a single entry. The value of this constant is "ZZ".
  example: []
  syntax:
    content: public const string FixedOffsetTerritory = "ZZ"
    return:
      type: System.String
    content.vb: Public Const FixedOffsetTerritory As String = "ZZ"
- uid: NodaTime.TimeZones.Cldr.MapZone.WindowsId
  commentId: P:NodaTime.TimeZones.Cldr.MapZone.WindowsId
  id: WindowsId
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: WindowsId
  nameWithType: MapZone.WindowsId
  fullName: NodaTime.TimeZones.Cldr.MapZone.WindowsId
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Gets the Windows system time zone identifier for this mapping, such as "Central Standard Time".
  remarks: >-
    <p>

    Most Windows system time zone identifiers use the name for the "standard" part of the zone as

    the overall identifier. Don't be fooled: just because a time zone includes "standard" in its identifier

    doesn't mean that it doesn't observe daylight saving time.

    </p>
  example: []
  syntax:
    content: public string WindowsId { get; }
    parameters: []
    return:
      type: System.String
      description: The Windows system time zone identifier for this mapping, such as "Central Standard Time".
    content.vb: Public ReadOnly Property WindowsId As String
  overload: NodaTime.TimeZones.Cldr.MapZone.WindowsId*
- uid: NodaTime.TimeZones.Cldr.MapZone.Territory
  commentId: P:NodaTime.TimeZones.Cldr.MapZone.Territory
  id: Territory
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: Territory
  nameWithType: MapZone.Territory
  fullName: NodaTime.TimeZones.Cldr.MapZone.Territory
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Gets the territory code for this mapping.
  remarks: >-
    This is typically either "001" to indicate that it's the primary territory for this ID, or

    "ZZ" to indicate a fixed-offset ID, or a different two-character capitalized code

    which indicates the geographical territory.
  example: []
  syntax:
    content: public string Territory { get; }
    parameters: []
    return:
      type: System.String
      description: The territory code for this mapping.
    content.vb: Public ReadOnly Property Territory As String
  overload: NodaTime.TimeZones.Cldr.MapZone.Territory*
- uid: NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  commentId: P:NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  id: TzdbIds
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: TzdbIds
  nameWithType: MapZone.TzdbIds
  fullName: NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Gets a read-only non-empty collection of TZDB zone identifiers for this mapping, such as

    "America/Chicago" and "America/Matamoros" (both of which are TZDB zones associated with the "Central Standard Time"

    Windows system time zone).
  remarks: >-
    For the primary and fixed-offset territory IDs ("001" and "ZZ") this always

    contains exactly one time zone ID. The IDs returned are not necessarily canonical in TZDB.
  example: []
  syntax:
    content: public IList<string> TzdbIds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: A read-only non-empty collection of TZDB zone identifiers for this mapping.
    content.vb: Public ReadOnly Property TzdbIds As IList(Of String)
  overload: NodaTime.TimeZones.Cldr.MapZone.TzdbIds*
- uid: NodaTime.TimeZones.Cldr.MapZone.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  commentId: M:NodaTime.TimeZones.Cldr.MapZone.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})'
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: MapZone(string, string, IList<string>)
  nameWithType: MapZone.MapZone(string, string, IList<string>)
  fullName: NodaTime.TimeZones.Cldr.MapZone.MapZone(string, string, System.Collections.Generic.IList<string>)
  type: Constructor
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Creates a new mapping entry.
  remarks: This constructor is only public for the sake of testability.
  example: []
  syntax:
    content: public MapZone(string windowsId, string territory, IList<string> tzdbIds)
    parameters:
    - id: windowsId
      type: System.String
      description: Windows system time zone identifier. Must not be null.
    - id: territory
      type: System.String
      description: Territory code. Must not be null.
    - id: tzdbIds
      type: System.Collections.Generic.IList{System.String}
      description: >-
        List of territory codes. Must not be null, and must not
            contains null values.
    content.vb: Public Sub New(windowsId As String, territory As String, tzdbIds As IList(Of String))
  overload: NodaTime.TimeZones.Cldr.MapZone.#ctor*
  nameWithType.vb: MapZone.New(String, String, IList(Of String))
  fullName.vb: NodaTime.TimeZones.Cldr.MapZone.New(String, String, System.Collections.Generic.IList(Of String))
  name.vb: New(String, String, IList(Of String))
- uid: NodaTime.TimeZones.Cldr.MapZone.Equals(NodaTime.TimeZones.Cldr.MapZone)
  commentId: M:NodaTime.TimeZones.Cldr.MapZone.Equals(NodaTime.TimeZones.Cldr.MapZone)
  id: Equals(NodaTime.TimeZones.Cldr.MapZone)
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: Equals(MapZone?)
  nameWithType: MapZone.Equals(MapZone?)
  fullName: NodaTime.TimeZones.Cldr.MapZone.Equals(NodaTime.TimeZones.Cldr.MapZone?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Compares two <xref href="NodaTime.TimeZones.Cldr.MapZone" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public bool Equals(MapZone? other)
    parameters:
    - id: other
      type: NodaTime.TimeZones.Cldr.MapZone
      description: The value to compare this map zone with.
    return:
      type: System.Boolean
      description: True if the given value is another map zone equal to this one; false otherwise.
    content.vb: Public Function Equals(other As MapZone) As Boolean
  overload: NodaTime.TimeZones.Cldr.MapZone.Equals*
  implements:
  - System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}.Equals(NodaTime.TimeZones.Cldr.MapZone)
  nameWithType.vb: MapZone.Equals(MapZone)
  fullName.vb: NodaTime.TimeZones.Cldr.MapZone.Equals(NodaTime.TimeZones.Cldr.MapZone)
  name.vb: Equals(MapZone)
- uid: NodaTime.TimeZones.Cldr.MapZone.GetHashCode
  commentId: M:NodaTime.TimeZones.Cldr.MapZone.GetHashCode
  id: GetHashCode
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MapZone.GetHashCode()
  fullName: NodaTime.TimeZones.Cldr.MapZone.GetHashCode()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Returns a hash code for this map zone.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this map zone.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NodaTime.TimeZones.Cldr.MapZone.GetHashCode*
- uid: NodaTime.TimeZones.Cldr.MapZone.Equals(System.Object)
  commentId: M:NodaTime.TimeZones.Cldr.MapZone.Equals(System.Object)
  id: Equals(System.Object)
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: MapZone.Equals(object?)
  fullName: NodaTime.TimeZones.Cldr.MapZone.Equals(object?)
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Compares two <xref href="NodaTime.TimeZones.Cldr.MapZone" data-throw-if-not-resolved="false"></xref> values for equality.

    See the type documentation for a description of equality semantics.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The value to compare this map zone with.
    return:
      type: System.Boolean
      description: True if the given value is another map zone equal to this one; false otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NodaTime.TimeZones.Cldr.MapZone.Equals*
  nameWithType.vb: MapZone.Equals(Object)
  fullName.vb: NodaTime.TimeZones.Cldr.MapZone.Equals(Object)
  name.vb: Equals(Object)
- uid: NodaTime.TimeZones.Cldr.MapZone.ToString
  commentId: M:NodaTime.TimeZones.Cldr.MapZone.ToString
  id: ToString
  parent: NodaTime.TimeZones.Cldr.MapZone
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MapZone.ToString()
  fullName: NodaTime.TimeZones.Cldr.MapZone.ToString()
  type: Method
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The value of the current instance, for diagnostic purposes.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NodaTime.TimeZones.Cldr.MapZone.ToString*
references:
- uid: NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  commentId: P:NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_TzdbIds
  name: TzdbIds
  nameWithType: MapZone.TzdbIds
  fullName: NodaTime.TimeZones.Cldr.MapZone.TzdbIds
- uid: NodaTime.TimeZones.Cldr
  commentId: N:NodaTime.TimeZones.Cldr
  href: NodaTime.html
  name: NodaTime.TimeZones.Cldr
  nameWithType: NodaTime.TimeZones.Cldr
  fullName: NodaTime.TimeZones.Cldr
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  - name: .
  - uid: NodaTime.TimeZones.Cldr
    name: Cldr
    href: NodaTime.TimeZones.Cldr.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  - name: .
  - uid: NodaTime.TimeZones.Cldr
    name: Cldr
    href: NodaTime.TimeZones.Cldr.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}
  commentId: T:System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<MapZone>
  nameWithType: IEquatable<MapZone>
  fullName: System.IEquatable<NodaTime.TimeZones.Cldr.MapZone>
  nameWithType.vb: IEquatable(Of MapZone)
  fullName.vb: System.IEquatable(Of NodaTime.TimeZones.Cldr.MapZone)
  name.vb: IEquatable(Of MapZone)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.TimeZones.Cldr.MapZone.WindowsId*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.WindowsId
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_WindowsId
  name: WindowsId
  nameWithType: MapZone.WindowsId
  fullName: NodaTime.TimeZones.Cldr.MapZone.WindowsId
- uid: NodaTime.TimeZones.Cldr.MapZone.Territory*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.Territory
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_Territory
  name: Territory
  nameWithType: MapZone.Territory
  fullName: NodaTime.TimeZones.Cldr.MapZone.Territory
- uid: NodaTime.TimeZones.Cldr.MapZone.TzdbIds*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.TzdbIds
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_TzdbIds
  name: TzdbIds
  nameWithType: MapZone.TzdbIds
  fullName: NodaTime.TimeZones.Cldr.MapZone.TzdbIds
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<string>
  nameWithType: IList<string>
  fullName: System.Collections.Generic.IList<string>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NodaTime.TimeZones.Cldr.MapZone.#ctor*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.#ctor
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone__ctor_System_String_System_String_System_Collections_Generic_IList_System_String__
  name: MapZone
  nameWithType: MapZone.MapZone
  fullName: NodaTime.TimeZones.Cldr.MapZone.MapZone
  nameWithType.vb: MapZone.New
  fullName.vb: NodaTime.TimeZones.Cldr.MapZone.New
  name.vb: New
- uid: NodaTime.TimeZones.Cldr.MapZone
  commentId: T:NodaTime.TimeZones.Cldr.MapZone
  parent: NodaTime.TimeZones.Cldr
  href: NodaTime.TimeZones.Cldr.MapZone.html
  name: MapZone
  nameWithType: MapZone
  fullName: NodaTime.TimeZones.Cldr.MapZone
- uid: NodaTime.TimeZones.Cldr.MapZone.Equals*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.Equals
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_Equals_NodaTime_TimeZones_Cldr_MapZone_
  name: Equals
  nameWithType: MapZone.Equals
  fullName: NodaTime.TimeZones.Cldr.MapZone.Equals
- uid: System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}.Equals(NodaTime.TimeZones.Cldr.MapZone)
  commentId: M:System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}.Equals(NodaTime.TimeZones.Cldr.MapZone)
  parent: System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(MapZone)
  nameWithType: IEquatable<MapZone>.Equals(MapZone)
  fullName: System.IEquatable<NodaTime.TimeZones.Cldr.MapZone>.Equals(NodaTime.TimeZones.Cldr.MapZone)
  nameWithType.vb: IEquatable(Of MapZone).Equals(MapZone)
  fullName.vb: System.IEquatable(Of NodaTime.TimeZones.Cldr.MapZone).Equals(NodaTime.TimeZones.Cldr.MapZone)
  spec.csharp:
  - uid: System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}.Equals(NodaTime.TimeZones.Cldr.MapZone)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NodaTime.TimeZones.Cldr.MapZone}.Equals(NodaTime.TimeZones.Cldr.MapZone)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NodaTime.TimeZones.Cldr.MapZone.GetHashCode*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.GetHashCode
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_GetHashCode
  name: GetHashCode
  nameWithType: MapZone.GetHashCode
  fullName: NodaTime.TimeZones.Cldr.MapZone.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime.TimeZones.Cldr.MapZone.ToString*
  commentId: Overload:NodaTime.TimeZones.Cldr.MapZone.ToString
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_ToString
  name: ToString
  nameWithType: MapZone.ToString
  fullName: NodaTime.TimeZones.Cldr.MapZone.ToString
shouldSkipMarkup: true
