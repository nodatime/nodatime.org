### YamlMime:ManagedReference
items:
- uid: NodaTime.TimeZones.Cldr.WindowsZones
  commentId: T:NodaTime.TimeZones.Cldr.WindowsZones
  id: WindowsZones
  parent: NodaTime.TimeZones.Cldr
  children:
  - NodaTime.TimeZones.Cldr.WindowsZones.MapZones
  - NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
  - NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
  - NodaTime.TimeZones.Cldr.WindowsZones.Version
  - NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
  langs:
  - csharp
  - vb
  name: WindowsZones
  nameWithType: WindowsZones
  fullName: NodaTime.TimeZones.Cldr.WindowsZones
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Representation of the <code>&lt;windowsZones&gt;</code> element of CLDR supplemental data.
  remarks: >-
    See <a href="http://cldr.unicode.org/development/development-process/design-proposals/extended-windows-olson-zid-mapping">the CLDR design proposal</a>

    for more details of the structure of the file from which data is taken.
  example: []
  syntax:
    content: public sealed class WindowsZones
    content.vb: Public NotInheritable Class WindowsZones
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.TimeZones.Cldr.WindowsZones.Version
  commentId: P:NodaTime.TimeZones.Cldr.WindowsZones.Version
  id: Version
  parent: NodaTime.TimeZones.Cldr.WindowsZones
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: WindowsZones.Version
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.Version
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Gets the version of the Windows zones mapping data read from the original file.
  remarks: >-
    As with other IDs, this should largely be treated as an opaque string, but the current method for

    generating this from the mapping file extracts a number from an element such as <code>&lt;version number="$Revision: 7825 $"/&gt;</code>.

    This is a Subversion revision number, but that association should only be used for diagnostic curiosity, and never

    assumed in code.
  example: []
  syntax:
    content: public string Version { get; }
    parameters: []
    return:
      type: System.String
      description: The version of the Windows zones mapping data read from the original file.
    content.vb: Public ReadOnly Property Version As String
  overload: NodaTime.TimeZones.Cldr.WindowsZones.Version*
- uid: NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
  commentId: P:NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
  id: TzdbVersion
  parent: NodaTime.TimeZones.Cldr.WindowsZones
  langs:
  - csharp
  - vb
  name: TzdbVersion
  nameWithType: WindowsZones.TzdbVersion
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Gets the TZDB version this Windows zone mapping data was created from.
  remarks: >-
    The CLDR mapping file usually lags behind the TZDB file somewhat - partly because the

    mappings themselves don't always change when the time zone data does. For example, it's entirely

    reasonable for a <xref href="NodaTime.TimeZones.TzdbDateTimeZoneSource" data-throw-if-not-resolved="false"></xref> with a <xref href="NodaTime.TimeZones.TzdbDateTimeZoneSource.TzdbVersion?text=TzdbVersion" data-throw-if-not-resolved="false"></xref> of

    "2013b" to be supply a <code>WindowsZones</code> object with a <code>TzdbVersion</code> of "2012f".
  example: []
  syntax:
    content: public string TzdbVersion { get; }
    parameters: []
    return:
      type: System.String
      description: The TZDB version this Windows zone mapping data was created from.
    content.vb: Public ReadOnly Property TzdbVersion As String
  overload: NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion*
- uid: NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
  commentId: P:NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
  id: WindowsVersion
  parent: NodaTime.TimeZones.Cldr.WindowsZones
  langs:
  - csharp
  - vb
  name: WindowsVersion
  nameWithType: WindowsZones.WindowsVersion
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: Gets the Windows time zone database version this Windows zone mapping data was created from.
  remarks: >-
    At the time of this writing, this is populated (by CLDR) from the registry key

    HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones\TzVersion,

    so "7dc0101" for example.
  example: []
  syntax:
    content: public string WindowsVersion { get; }
    parameters: []
    return:
      type: System.String
      description: The Windows time zone database version this Windows zone mapping data was created from.
    content.vb: Public ReadOnly Property WindowsVersion As String
  overload: NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion*
- uid: NodaTime.TimeZones.Cldr.WindowsZones.MapZones
  commentId: P:NodaTime.TimeZones.Cldr.WindowsZones.MapZones
  id: MapZones
  parent: NodaTime.TimeZones.Cldr.WindowsZones
  langs:
  - csharp
  - vb
  name: MapZones
  nameWithType: WindowsZones.MapZones
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.MapZones
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Gets an immutable collection of mappings from Windows system time zones to

    TZDB time zones.
  remarks: >-
    <p>

    Each mapping consists of a single Windows time zone ID and a single

    territory to potentially multiple TZDB IDs that are broadly equivalent to that Windows zone/territory

    pair.

    </p>

    <p>

    Mappings for a single Windows system time zone can appear multiple times

    in this list, in different territories. For example, "Central Standard Time"

    maps to different TZDB zones in different countries (the US, Canada, Mexico) and

    even within a single territory there can be multiple zones. Every Windows system time zone covered within

    this collection has a "primary" entry with a territory code of "001" (which is the value of

    <xref href="NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory" data-throw-if-not-resolved="false"></xref>) and a single corresponding TZDB zone.

    </p>

    <p>This collection is not guaranteed to cover every Windows time zone. Some zones may be unmappable

    (such as "Mid-Atlantic Standard Time") and there can be a delay between a new Windows time zone being introduced

    and it appearing in CLDR, ready to be used by Noda Time. (There's also bound to be a delay between it appearing

    in CLDR and being used in your production system.) In practice however, you're unlikely to wish to use a time zone

    which isn't covered here.</p>
  example: []
  syntax:
    content: public IList<MapZone> MapZones { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{NodaTime.TimeZones.Cldr.MapZone}
      description: >-
        An immutable collection of mappings from Windows system time zones to
            TZDB time zones.
    content.vb: Public ReadOnly Property MapZones As IList(Of MapZone)
  overload: NodaTime.TimeZones.Cldr.WindowsZones.MapZones*
- uid: NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
  commentId: P:NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
  id: PrimaryMapping
  parent: NodaTime.TimeZones.Cldr.WindowsZones
  langs:
  - csharp
  - vb
  name: PrimaryMapping
  nameWithType: WindowsZones.PrimaryMapping
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime.TimeZones.Cldr
  summary: >-
    Gets an immutable dictionary of primary mappings, from Windows system time zone ID

    to TZDB zone ID. This corresponds to the "001" territory which is present for every zone

    within the mapping file.
  remarks: >-
    <p>

    Each value in the dictionary is a canonical ID in CLDR, but it may not be canonical

    in TZDB. For example, the ID corresponding to "India Standard Time" is "Asia/Calcutta", which

    is canonical in CLDR but is an alias in TZDB for "Asia/Kolkata". To obtain a canonical TZDB

    ID, use <xref href="NodaTime.TimeZones.TzdbDateTimeZoneSource.CanonicalIdMap" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public IDictionary<string, string> PrimaryMapping { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: >-
        An immutable dictionary of primary mappings, from Windows system time zone ID
            to TZDB zone ID.
    content.vb: Public ReadOnly Property PrimaryMapping As IDictionary(Of String, String)
  overload: NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping*
references:
- uid: NodaTime.TimeZones.Cldr
  commentId: N:NodaTime.TimeZones.Cldr
  href: NodaTime.html
  name: NodaTime.TimeZones.Cldr
  nameWithType: NodaTime.TimeZones.Cldr
  fullName: NodaTime.TimeZones.Cldr
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  - name: .
  - uid: NodaTime.TimeZones.Cldr
    name: Cldr
    href: NodaTime.TimeZones.Cldr.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  - name: .
  - uid: NodaTime.TimeZones.Cldr
    name: Cldr
    href: NodaTime.TimeZones.Cldr.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.TimeZones.Cldr.WindowsZones.Version*
  commentId: Overload:NodaTime.TimeZones.Cldr.WindowsZones.Version
  href: NodaTime.TimeZones.Cldr.WindowsZones.html#NodaTime_TimeZones_Cldr_WindowsZones_Version
  name: Version
  nameWithType: WindowsZones.Version
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.Version
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.TzdbDateTimeZoneSource
  parent: NodaTime.TimeZones
  href: NodaTime.TimeZones.TzdbDateTimeZoneSource.html
  name: TzdbDateTimeZoneSource
  nameWithType: TzdbDateTimeZoneSource
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource.TzdbVersion
  commentId: P:NodaTime.TimeZones.TzdbDateTimeZoneSource.TzdbVersion
  href: NodaTime.TimeZones.TzdbDateTimeZoneSource.html#NodaTime_TimeZones_TzdbDateTimeZoneSource_TzdbVersion
  name: TzdbVersion
  nameWithType: TzdbDateTimeZoneSource.TzdbVersion
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource.TzdbVersion
- uid: NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion*
  commentId: Overload:NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
  href: NodaTime.TimeZones.Cldr.WindowsZones.html#NodaTime_TimeZones_Cldr_WindowsZones_TzdbVersion
  name: TzdbVersion
  nameWithType: WindowsZones.TzdbVersion
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.TzdbVersion
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  href: NodaTime.html
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.TimeZones
    name: TimeZones
    href: NodaTime.TimeZones.html
- uid: NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion*
  commentId: Overload:NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
  href: NodaTime.TimeZones.Cldr.WindowsZones.html#NodaTime_TimeZones_Cldr_WindowsZones_WindowsVersion
  name: WindowsVersion
  nameWithType: WindowsZones.WindowsVersion
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.WindowsVersion
- uid: NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  commentId: F:NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
  href: NodaTime.TimeZones.Cldr.MapZone.html#NodaTime_TimeZones_Cldr_MapZone_PrimaryTerritory
  name: PrimaryTerritory
  nameWithType: MapZone.PrimaryTerritory
  fullName: NodaTime.TimeZones.Cldr.MapZone.PrimaryTerritory
- uid: NodaTime.TimeZones.Cldr.WindowsZones.MapZones*
  commentId: Overload:NodaTime.TimeZones.Cldr.WindowsZones.MapZones
  href: NodaTime.TimeZones.Cldr.WindowsZones.html#NodaTime_TimeZones_Cldr_WindowsZones_MapZones
  name: MapZones
  nameWithType: WindowsZones.MapZones
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.MapZones
- uid: System.Collections.Generic.IList{NodaTime.TimeZones.Cldr.MapZone}
  commentId: T:System.Collections.Generic.IList{NodaTime.TimeZones.Cldr.MapZone}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<MapZone>
  nameWithType: IList<MapZone>
  fullName: System.Collections.Generic.IList<NodaTime.TimeZones.Cldr.MapZone>
  nameWithType.vb: IList(Of MapZone)
  fullName.vb: System.Collections.Generic.IList(Of NodaTime.TimeZones.Cldr.MapZone)
  name.vb: IList(Of MapZone)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NodaTime.TimeZones.Cldr.MapZone
    name: MapZone
    href: NodaTime.TimeZones.Cldr.MapZone.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource.CanonicalIdMap
  commentId: P:NodaTime.TimeZones.TzdbDateTimeZoneSource.CanonicalIdMap
  href: NodaTime.TimeZones.TzdbDateTimeZoneSource.html#NodaTime_TimeZones_TzdbDateTimeZoneSource_CanonicalIdMap
  name: CanonicalIdMap
  nameWithType: TzdbDateTimeZoneSource.CanonicalIdMap
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource.CanonicalIdMap
- uid: NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping*
  commentId: Overload:NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
  href: NodaTime.TimeZones.Cldr.WindowsZones.html#NodaTime_TimeZones_Cldr_WindowsZones_PrimaryMapping
  name: PrimaryMapping
  nameWithType: WindowsZones.PrimaryMapping
  fullName: NodaTime.TimeZones.Cldr.WindowsZones.PrimaryMapping
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
shouldSkipMarkup: true
