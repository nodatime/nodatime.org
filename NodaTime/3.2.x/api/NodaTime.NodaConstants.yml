### YamlMime:ManagedReference
items:
- uid: NodaTime.NodaConstants
  commentId: T:NodaTime.NodaConstants
  id: NodaConstants
  parent: NodaTime
  children:
  - NodaTime.NodaConstants.BclEpoch
  - NodaTime.NodaConstants.DaysPerWeek
  - NodaTime.NodaConstants.HoursPerDay
  - NodaTime.NodaConstants.HoursPerWeek
  - NodaTime.NodaConstants.JulianEpoch
  - NodaTime.NodaConstants.MicrosecondsPerSecond
  - NodaTime.NodaConstants.MillisecondsPerDay
  - NodaTime.NodaConstants.MillisecondsPerHour
  - NodaTime.NodaConstants.MillisecondsPerMinute
  - NodaTime.NodaConstants.MillisecondsPerSecond
  - NodaTime.NodaConstants.MillisecondsPerWeek
  - NodaTime.NodaConstants.MinutesPerDay
  - NodaTime.NodaConstants.MinutesPerHour
  - NodaTime.NodaConstants.MinutesPerWeek
  - NodaTime.NodaConstants.NanosecondsPerDay
  - NodaTime.NodaConstants.NanosecondsPerHour
  - NodaTime.NodaConstants.NanosecondsPerMicrosecond
  - NodaTime.NodaConstants.NanosecondsPerMillisecond
  - NodaTime.NodaConstants.NanosecondsPerMinute
  - NodaTime.NodaConstants.NanosecondsPerSecond
  - NodaTime.NodaConstants.NanosecondsPerTick
  - NodaTime.NodaConstants.NanosecondsPerWeek
  - NodaTime.NodaConstants.SecondsPerDay
  - NodaTime.NodaConstants.SecondsPerHour
  - NodaTime.NodaConstants.SecondsPerMinute
  - NodaTime.NodaConstants.SecondsPerWeek
  - NodaTime.NodaConstants.TicksPerDay
  - NodaTime.NodaConstants.TicksPerHour
  - NodaTime.NodaConstants.TicksPerMillisecond
  - NodaTime.NodaConstants.TicksPerMinute
  - NodaTime.NodaConstants.TicksPerSecond
  - NodaTime.NodaConstants.TicksPerWeek
  - NodaTime.NodaConstants.UnixEpoch
  langs:
  - csharp
  - vb
  name: NodaConstants
  nameWithType: NodaConstants
  fullName: NodaTime.NodaConstants
  type: Class
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: Useful constants, mostly along the lines of "number of milliseconds in an hour".
  example: []
  syntax:
    content: public static class NodaConstants
    content.vb: Public Module NodaConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.NodaConstants.NanosecondsPerTick
  commentId: F:NodaTime.NodaConstants.NanosecondsPerTick
  id: NanosecondsPerTick
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerTick
  nameWithType: NodaConstants.NanosecondsPerTick
  fullName: NodaTime.NodaConstants.NanosecondsPerTick
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a tick. The value of this constant is 100.
  example: []
  syntax:
    content: public const long NanosecondsPerTick = 100
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerTick As Long = 100
- uid: NodaTime.NodaConstants.NanosecondsPerMicrosecond
  commentId: F:NodaTime.NodaConstants.NanosecondsPerMicrosecond
  id: NanosecondsPerMicrosecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerMicrosecond
  nameWithType: NodaConstants.NanosecondsPerMicrosecond
  fullName: NodaTime.NodaConstants.NanosecondsPerMicrosecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a microsecond. The value of this constant is 1,000.
  example: []
  syntax:
    content: public const long NanosecondsPerMicrosecond = 1000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerMicrosecond As Long = 1000
- uid: NodaTime.NodaConstants.NanosecondsPerMillisecond
  commentId: F:NodaTime.NodaConstants.NanosecondsPerMillisecond
  id: NanosecondsPerMillisecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerMillisecond
  nameWithType: NodaConstants.NanosecondsPerMillisecond
  fullName: NodaTime.NodaConstants.NanosecondsPerMillisecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a millisecond. The value of this constant is 1,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerMillisecond = 1000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerMillisecond As Long = 1000000
- uid: NodaTime.NodaConstants.NanosecondsPerSecond
  commentId: F:NodaTime.NodaConstants.NanosecondsPerSecond
  id: NanosecondsPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerSecond
  nameWithType: NodaConstants.NanosecondsPerSecond
  fullName: NodaTime.NodaConstants.NanosecondsPerSecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a second. The value of this constant is 1,000,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerSecond = 1000000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerSecond As Long = 1000000000
- uid: NodaTime.NodaConstants.NanosecondsPerMinute
  commentId: F:NodaTime.NodaConstants.NanosecondsPerMinute
  id: NanosecondsPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerMinute
  nameWithType: NodaConstants.NanosecondsPerMinute
  fullName: NodaTime.NodaConstants.NanosecondsPerMinute
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a minute. The value of this constant is 60,000,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerMinute = 60000000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerMinute As Long = 60000000000
- uid: NodaTime.NodaConstants.NanosecondsPerHour
  commentId: F:NodaTime.NodaConstants.NanosecondsPerHour
  id: NanosecondsPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerHour
  nameWithType: NodaConstants.NanosecondsPerHour
  fullName: NodaTime.NodaConstants.NanosecondsPerHour
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in an hour. The value of this constant is 3,600,000,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerHour = 3600000000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerHour As Long = 3600000000000
- uid: NodaTime.NodaConstants.NanosecondsPerDay
  commentId: F:NodaTime.NodaConstants.NanosecondsPerDay
  id: NanosecondsPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerDay
  nameWithType: NodaConstants.NanosecondsPerDay
  fullName: NodaTime.NodaConstants.NanosecondsPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a standard 24-hour day. The value of this constant is 86,400,000,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerDay = 86400000000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerDay As Long = 86400000000000
- uid: NodaTime.NodaConstants.NanosecondsPerWeek
  commentId: F:NodaTime.NodaConstants.NanosecondsPerWeek
  id: NanosecondsPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: NanosecondsPerWeek
  nameWithType: NodaConstants.NanosecondsPerWeek
  fullName: NodaTime.NodaConstants.NanosecondsPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of nanoseconds in a standard week of seven 24-hour days. The value of this constant is 604,800,000,000,000.
  example: []
  syntax:
    content: public const long NanosecondsPerWeek = 604800000000000
    return:
      type: System.Int64
    content.vb: Public Const NanosecondsPerWeek As Long = 604800000000000
- uid: NodaTime.NodaConstants.TicksPerMillisecond
  commentId: F:NodaTime.NodaConstants.TicksPerMillisecond
  id: TicksPerMillisecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerMillisecond
  nameWithType: NodaConstants.TicksPerMillisecond
  fullName: NodaTime.NodaConstants.TicksPerMillisecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of ticks in a millisecond. The value of this constant is 10,000.
  example: []
  syntax:
    content: public const long TicksPerMillisecond = 10000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerMillisecond As Long = 10000
- uid: NodaTime.NodaConstants.TicksPerSecond
  commentId: F:NodaTime.NodaConstants.TicksPerSecond
  id: TicksPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerSecond
  nameWithType: NodaConstants.TicksPerSecond
  fullName: NodaTime.NodaConstants.TicksPerSecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of ticks in a second. The value of this constant is 10,000,000.
  example: []
  syntax:
    content: public const long TicksPerSecond = 10000000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerSecond As Long = 10000000
- uid: NodaTime.NodaConstants.TicksPerMinute
  commentId: F:NodaTime.NodaConstants.TicksPerMinute
  id: TicksPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerMinute
  nameWithType: NodaConstants.TicksPerMinute
  fullName: NodaTime.NodaConstants.TicksPerMinute
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of ticks in a minute. The value of this constant is 600,000,000.
  example: []
  syntax:
    content: public const long TicksPerMinute = 600000000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerMinute As Long = 600000000
- uid: NodaTime.NodaConstants.TicksPerHour
  commentId: F:NodaTime.NodaConstants.TicksPerHour
  id: TicksPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerHour
  nameWithType: NodaConstants.TicksPerHour
  fullName: NodaTime.NodaConstants.TicksPerHour
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: A constant for the number of ticks in an hour. The value of this constant is 36,000,000,000.
  example: []
  syntax:
    content: public const long TicksPerHour = 36000000000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerHour As Long = 36000000000
- uid: NodaTime.NodaConstants.TicksPerDay
  commentId: F:NodaTime.NodaConstants.TicksPerDay
  id: TicksPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerDay
  nameWithType: NodaConstants.TicksPerDay
  fullName: NodaTime.NodaConstants.TicksPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of ticks in a standard 24-hour day.

    The value of this constant is 864,000,000,000.
  example: []
  syntax:
    content: public const long TicksPerDay = 864000000000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerDay As Long = 864000000000
- uid: NodaTime.NodaConstants.TicksPerWeek
  commentId: F:NodaTime.NodaConstants.TicksPerWeek
  id: TicksPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: TicksPerWeek
  nameWithType: NodaConstants.TicksPerWeek
  fullName: NodaTime.NodaConstants.TicksPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of ticks in a standard week of seven 24-hour days.

    The value of this constant is 6,048,000,000,000.
  example: []
  syntax:
    content: public const long TicksPerWeek = 6048000000000
    return:
      type: System.Int64
    content.vb: Public Const TicksPerWeek As Long = 6048000000000
- uid: NodaTime.NodaConstants.MicrosecondsPerSecond
  commentId: F:NodaTime.NodaConstants.MicrosecondsPerSecond
  id: MicrosecondsPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MicrosecondsPerSecond
  nameWithType: NodaConstants.MicrosecondsPerSecond
  fullName: NodaTime.NodaConstants.MicrosecondsPerSecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of microseconds per second.

    The value of this constant is 1,000,000.
  example: []
  syntax:
    content: public const long MicrosecondsPerSecond = 1000000
    return:
      type: System.Int64
    content.vb: Public Const MicrosecondsPerSecond As Long = 1000000
- uid: NodaTime.NodaConstants.MillisecondsPerSecond
  commentId: F:NodaTime.NodaConstants.MillisecondsPerSecond
  id: MillisecondsPerSecond
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerSecond
  nameWithType: NodaConstants.MillisecondsPerSecond
  fullName: NodaTime.NodaConstants.MillisecondsPerSecond
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of milliseconds per second.

    The value of this constant is 1000.
  example: []
  syntax:
    content: public const int MillisecondsPerSecond = 1000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerSecond As Integer = 1000
- uid: NodaTime.NodaConstants.MillisecondsPerMinute
  commentId: F:NodaTime.NodaConstants.MillisecondsPerMinute
  id: MillisecondsPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerMinute
  nameWithType: NodaConstants.MillisecondsPerMinute
  fullName: NodaTime.NodaConstants.MillisecondsPerMinute
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of milliseconds per minute.

    The value of this constant is 60,000.
  example: []
  syntax:
    content: public const int MillisecondsPerMinute = 60000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerMinute As Integer = 60000
- uid: NodaTime.NodaConstants.MillisecondsPerHour
  commentId: F:NodaTime.NodaConstants.MillisecondsPerHour
  id: MillisecondsPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerHour
  nameWithType: NodaConstants.MillisecondsPerHour
  fullName: NodaTime.NodaConstants.MillisecondsPerHour
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of milliseconds per hour.

    The value of this constant is 3,600,000.
  example: []
  syntax:
    content: public const int MillisecondsPerHour = 3600000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerHour As Integer = 3600000
- uid: NodaTime.NodaConstants.MillisecondsPerDay
  commentId: F:NodaTime.NodaConstants.MillisecondsPerDay
  id: MillisecondsPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerDay
  nameWithType: NodaConstants.MillisecondsPerDay
  fullName: NodaTime.NodaConstants.MillisecondsPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of milliseconds per standard 24-hour day.

    The value of this constant is 86,400,000.
  example: []
  syntax:
    content: public const int MillisecondsPerDay = 86400000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerDay As Integer = 86400000
- uid: NodaTime.NodaConstants.MillisecondsPerWeek
  commentId: F:NodaTime.NodaConstants.MillisecondsPerWeek
  id: MillisecondsPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MillisecondsPerWeek
  nameWithType: NodaConstants.MillisecondsPerWeek
  fullName: NodaTime.NodaConstants.MillisecondsPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of milliseconds per standard week of seven 24-hour days.

    The value of this constant is 604,800,000.
  example: []
  syntax:
    content: public const int MillisecondsPerWeek = 604800000
    return:
      type: System.Int32
    content.vb: Public Const MillisecondsPerWeek As Integer = 604800000
- uid: NodaTime.NodaConstants.SecondsPerMinute
  commentId: F:NodaTime.NodaConstants.SecondsPerMinute
  id: SecondsPerMinute
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerMinute
  nameWithType: NodaConstants.SecondsPerMinute
  fullName: NodaTime.NodaConstants.SecondsPerMinute
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of seconds per minute.

    The value of this constant is 60.
  example: []
  syntax:
    content: public const int SecondsPerMinute = 60
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerMinute As Integer = 60
- uid: NodaTime.NodaConstants.SecondsPerHour
  commentId: F:NodaTime.NodaConstants.SecondsPerHour
  id: SecondsPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerHour
  nameWithType: NodaConstants.SecondsPerHour
  fullName: NodaTime.NodaConstants.SecondsPerHour
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of seconds per hour.

    The value of this constant is 3,600.
  example: []
  syntax:
    content: public const int SecondsPerHour = 3600
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerHour As Integer = 3600
- uid: NodaTime.NodaConstants.SecondsPerDay
  commentId: F:NodaTime.NodaConstants.SecondsPerDay
  id: SecondsPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerDay
  nameWithType: NodaConstants.SecondsPerDay
  fullName: NodaTime.NodaConstants.SecondsPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of seconds per standard 24-hour day.

    The value of this constant is 86,400.
  example: []
  syntax:
    content: public const int SecondsPerDay = 86400
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerDay As Integer = 86400
- uid: NodaTime.NodaConstants.SecondsPerWeek
  commentId: F:NodaTime.NodaConstants.SecondsPerWeek
  id: SecondsPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: SecondsPerWeek
  nameWithType: NodaConstants.SecondsPerWeek
  fullName: NodaTime.NodaConstants.SecondsPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of seconds per standard week of seven 24-hour days.

    The value of this constant is 604,800.
  example: []
  syntax:
    content: public const int SecondsPerWeek = 604800
    return:
      type: System.Int32
    content.vb: Public Const SecondsPerWeek As Integer = 604800
- uid: NodaTime.NodaConstants.MinutesPerHour
  commentId: F:NodaTime.NodaConstants.MinutesPerHour
  id: MinutesPerHour
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerHour
  nameWithType: NodaConstants.MinutesPerHour
  fullName: NodaTime.NodaConstants.MinutesPerHour
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of minutes per hour.

    The value of this constant is 60.
  example: []
  syntax:
    content: public const int MinutesPerHour = 60
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerHour As Integer = 60
- uid: NodaTime.NodaConstants.MinutesPerDay
  commentId: F:NodaTime.NodaConstants.MinutesPerDay
  id: MinutesPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerDay
  nameWithType: NodaConstants.MinutesPerDay
  fullName: NodaTime.NodaConstants.MinutesPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of minutes per standard 24-hour day.

    The value of this constant is 1,440.
  example: []
  syntax:
    content: public const int MinutesPerDay = 1440
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerDay As Integer = 1440
- uid: NodaTime.NodaConstants.MinutesPerWeek
  commentId: F:NodaTime.NodaConstants.MinutesPerWeek
  id: MinutesPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: MinutesPerWeek
  nameWithType: NodaConstants.MinutesPerWeek
  fullName: NodaTime.NodaConstants.MinutesPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of minutes per standard week of seven 24-hour days.

    The value of this constant is 10,080.
  example: []
  syntax:
    content: public const int MinutesPerWeek = 10080
    return:
      type: System.Int32
    content.vb: Public Const MinutesPerWeek As Integer = 10080
- uid: NodaTime.NodaConstants.HoursPerDay
  commentId: F:NodaTime.NodaConstants.HoursPerDay
  id: HoursPerDay
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: HoursPerDay
  nameWithType: NodaConstants.HoursPerDay
  fullName: NodaTime.NodaConstants.HoursPerDay
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of hours in a standard day. Note that the number of hours

    in a day can vary due to daylight saving effects.

    The value of this constant is 24.
  example: []
  syntax:
    content: public const int HoursPerDay = 24
    return:
      type: System.Int32
    content.vb: Public Const HoursPerDay As Integer = 24
- uid: NodaTime.NodaConstants.HoursPerWeek
  commentId: F:NodaTime.NodaConstants.HoursPerWeek
  id: HoursPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: HoursPerWeek
  nameWithType: NodaConstants.HoursPerWeek
  fullName: NodaTime.NodaConstants.HoursPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    A constant for the number of hours in a standard week of seven 24-hour days.

    The value of this constant is 168.
  example: []
  syntax:
    content: public const int HoursPerWeek = 168
    return:
      type: System.Int32
    content.vb: Public Const HoursPerWeek As Integer = 168
- uid: NodaTime.NodaConstants.DaysPerWeek
  commentId: F:NodaTime.NodaConstants.DaysPerWeek
  id: DaysPerWeek
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: DaysPerWeek
  nameWithType: NodaConstants.DaysPerWeek
  fullName: NodaTime.NodaConstants.DaysPerWeek
  type: Field
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    Number of days in a standard Gregorian week.

    The value of this constant is 7.
  example: []
  syntax:
    content: public const int DaysPerWeek = 7
    return:
      type: System.Int32
    content.vb: Public Const DaysPerWeek As Integer = 7
- uid: NodaTime.NodaConstants.UnixEpoch
  commentId: P:NodaTime.NodaConstants.UnixEpoch
  id: UnixEpoch
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: UnixEpoch
  nameWithType: NodaConstants.UnixEpoch
  fullName: NodaTime.NodaConstants.UnixEpoch
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: The instant at the Unix epoch of midnight 1st January 1970 UTC.
  example: []
  syntax:
    content: public static Instant UnixEpoch { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly Property UnixEpoch As Instant
  overload: NodaTime.NodaConstants.UnixEpoch*
- uid: NodaTime.NodaConstants.BclEpoch
  commentId: P:NodaTime.NodaConstants.BclEpoch
  id: BclEpoch
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: BclEpoch
  nameWithType: NodaConstants.BclEpoch
  fullName: NodaTime.NodaConstants.BclEpoch
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: The instant at the BCL epoch of midnight 1st January 0001 UTC.
  example: []
  syntax:
    content: public static Instant BclEpoch { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly Property BclEpoch As Instant
  overload: NodaTime.NodaConstants.BclEpoch*
- uid: NodaTime.NodaConstants.JulianEpoch
  commentId: P:NodaTime.NodaConstants.JulianEpoch
  id: JulianEpoch
  parent: NodaTime.NodaConstants
  langs:
  - csharp
  - vb
  name: JulianEpoch
  nameWithType: NodaConstants.JulianEpoch
  fullName: NodaTime.NodaConstants.JulianEpoch
  type: Property
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: >-
    The instant at the Julian epoch of noon (UTC) January 1st 4713 BCE in the proleptic

    Julian calendar, or November 24th 4714 BCE in the proleptic Gregorian calendar.
  example: []
  syntax:
    content: public static Instant JulianEpoch { get; }
    parameters: []
    return:
      type: NodaTime.Instant
    content.vb: Public Shared ReadOnly Property JulianEpoch As Instant
  overload: NodaTime.NodaConstants.JulianEpoch*
references:
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.NodaConstants.UnixEpoch*
  commentId: Overload:NodaTime.NodaConstants.UnixEpoch
  href: NodaTime.NodaConstants.html#NodaTime_NodaConstants_UnixEpoch
  name: UnixEpoch
  nameWithType: NodaConstants.UnixEpoch
  fullName: NodaTime.NodaConstants.UnixEpoch
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  href: NodaTime.Instant.html
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.NodaConstants.BclEpoch*
  commentId: Overload:NodaTime.NodaConstants.BclEpoch
  href: NodaTime.NodaConstants.html#NodaTime_NodaConstants_BclEpoch
  name: BclEpoch
  nameWithType: NodaConstants.BclEpoch
  fullName: NodaTime.NodaConstants.BclEpoch
- uid: NodaTime.NodaConstants.JulianEpoch*
  commentId: Overload:NodaTime.NodaConstants.JulianEpoch
  href: NodaTime.NodaConstants.html#NodaTime_NodaConstants_JulianEpoch
  name: JulianEpoch
  nameWithType: NodaConstants.JulianEpoch
  fullName: NodaTime.NodaConstants.JulianEpoch
shouldSkipMarkup: true
