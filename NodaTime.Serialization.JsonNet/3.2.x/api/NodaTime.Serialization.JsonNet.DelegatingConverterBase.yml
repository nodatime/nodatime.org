### YamlMime:ManagedReference
items:
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  commentId: T:NodaTime.Serialization.JsonNet.DelegatingConverterBase
  id: DelegatingConverterBase
  parent: NodaTime.Serialization.JsonNet
  children:
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor(Newtonsoft.Json.JsonConverter)
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert(System.Type)
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: DelegatingConverterBase
  nameWithType: DelegatingConverterBase
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  type: Class
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Converter which does nothing but delegate to another one for all operations.
  remarks: >-
    Nothing in this class is specific to Noda Time. Its purpose is to make it easy

    to reuse other converter instances with <xref href="Newtonsoft.Json.JsonConverterAttribute" data-throw-if-not-resolved="false"></xref>,

    which can only identify a converter by type.
  example:
  - >-
    <p>

    If you had some <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> properties which needed one converter,

    but others that needed another, you might want to have different types implementing

    those converters. Each type would just derive from this, passing the right converter

    into the base constructor.

    </p>

    <pre><code class="lang-csharp">public sealed class ShortDateConverter : DelegatingConverterBase

    {
        public ShortDateConverter() : base(NodaConverters.LocalDateConverter) {}
    }</code></pre>
  syntax:
    content: 'public abstract class DelegatingConverterBase : JsonConverter'
    content.vb: Public MustInherit Class DelegatingConverterBase Inherits JsonConverter
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor(Newtonsoft.Json.JsonConverter)
  commentId: M:NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor(Newtonsoft.Json.JsonConverter)
  id: '#ctor(Newtonsoft.Json.JsonConverter)'
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: DelegatingConverterBase(JsonConverter)
  nameWithType: DelegatingConverterBase.DelegatingConverterBase(JsonConverter)
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.DelegatingConverterBase(Newtonsoft.Json.JsonConverter)
  type: Constructor
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Constructs a converter delegating to <code class="paramref">original</code>.
  example: []
  syntax:
    content: protected DelegatingConverterBase(JsonConverter original)
    parameters:
    - id: original
      type: Newtonsoft.Json.JsonConverter
      description: The converter to delegate to. Must not be null.
    content.vb: Protected Sub New(original As JsonConverter)
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor*
  nameWithType.vb: DelegatingConverterBase.New(JsonConverter)
  fullName.vb: NodaTime.Serialization.JsonNet.DelegatingConverterBase.New(Newtonsoft.Json.JsonConverter)
  name.vb: New(JsonConverter)
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: DelegatingConverterBase.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Writes the JSON representation of the object.
  example: []
  syntax:
    content: public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
      description: The <xref href="Newtonsoft.Json.JsonWriter" data-throw-if-not-resolved="false"></xref> to write to.
    - id: value
      type: System.Object
      description: The value.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
  overridden: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson*
  nameWithType.vb: DelegatingConverterBase.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: DelegatingConverterBase.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Reads the JSON representation of the object.
  example: []
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The <xref href="Newtonsoft.Json.JsonReader" data-throw-if-not-resolved="false"></xref> to read from.
    - id: objectType
      type: System.Type
      description: Type of the object.
    - id: existingValue
      type: System.Object
      description: The existing value of object being read.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    return:
      type: System.Object
      description: The object value.
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
  overridden: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson*
  nameWithType.vb: DelegatingConverterBase.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
  commentId: P:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
  id: CanRead
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: DelegatingConverterBase.CanRead
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
  type: Property
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Gets a value indicating whether this <xref href="Newtonsoft.Json.JsonConverter" data-throw-if-not-resolved="false"></xref> can read JSON.
  example: []
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this <xref href="Newtonsoft.Json.JsonConverter" data-throw-if-not-resolved="false"></xref> can read JSON; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanRead
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead*
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
  commentId: P:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
  id: CanWrite
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: DelegatingConverterBase.CanWrite
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
  type: Property
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Gets a value indicating whether this <xref href="Newtonsoft.Json.JsonConverter" data-throw-if-not-resolved="false"></xref> can write JSON.
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this <xref href="Newtonsoft.Json.JsonConverter" data-throw-if-not-resolved="false"></xref> can write JSON; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanWrite
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite*
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert(System.Type)
  commentId: M:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: NodaTime.Serialization.JsonNet.DelegatingConverterBase
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: DelegatingConverterBase.CanConvert(Type)
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert(System.Type)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Determines whether this instance can convert the specified object type.
  example: []
  syntax:
    content: public override bool CanConvert(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
      description: Type of the object.
    return:
      type: System.Boolean
      description: <code>true</code> if this instance can convert the specified object type; otherwise, <code>false</code>.
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  overload: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert*
references:
- uid: Newtonsoft.Json.JsonConverterAttribute
  commentId: T:Newtonsoft.Json.JsonConverterAttribute
  isExternal: true
  name: JsonConverterAttribute
  nameWithType: JsonConverterAttribute
  fullName: Newtonsoft.Json.JsonConverterAttribute
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  isExternal: true
  href: https://github.com/nodatime/nodatime/blob/0a5d46c41a654ab70ceb0b85208d98a17938a50b/src/NodaTime/LocalDate.cs
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.Serialization.JsonNet
  commentId: N:NodaTime.Serialization.JsonNet
  href: NodaTime.html
  name: NodaTime.Serialization.JsonNet
  nameWithType: NodaTime.Serialization.JsonNet
  fullName: NodaTime.Serialization.JsonNet
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Serialization
    name: Serialization
    href: NodaTime.Serialization.html
  - name: .
  - uid: NodaTime.Serialization.JsonNet
    name: JsonNet
    href: NodaTime.Serialization.JsonNet.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Serialization
    name: Serialization
    href: NodaTime.Serialization.html
  - name: .
  - uid: NodaTime.Serialization.JsonNet
    name: JsonNet
    href: NodaTime.Serialization.JsonNet.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.#ctor
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase__ctor_Newtonsoft_Json_JsonConverter_
  name: DelegatingConverterBase
  nameWithType: DelegatingConverterBase.DelegatingConverterBase
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.DelegatingConverterBase
  nameWithType.vb: DelegatingConverterBase.New
  fullName.vb: NodaTime.Serialization.JsonNet.DelegatingConverterBase.New
  name.vb: New
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: WriteJson(JsonWriter, object, JsonSerializer)
  nameWithType: JsonConverter.WriteJson(JsonWriter, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase_WriteJson_Newtonsoft_Json_JsonWriter_System_Object_Newtonsoft_Json_JsonSerializer_
  name: WriteJson
  nameWithType: DelegatingConverterBase.WriteJson
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.WriteJson
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: ReadJson(JsonReader, Type, object, JsonSerializer)
  nameWithType: JsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)
  nameWithType.vb: JsonConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName.vb: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    isExternal: true
  - name: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    isExternal: true
  - name: )
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase_ReadJson_Newtonsoft_Json_JsonReader_System_Type_System_Object_Newtonsoft_Json_JsonSerializer_
  name: ReadJson
  nameWithType: DelegatingConverterBase.ReadJson
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.ReadJson
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase_CanRead
  name: CanRead
  nameWithType: DelegatingConverterBase.CanRead
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase_CanWrite
  name: CanWrite
  nameWithType: DelegatingConverterBase.CanWrite
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanWrite
- uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanConvert(Type)
  nameWithType: JsonConverter.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert*
  commentId: Overload:NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert
  href: NodaTime.Serialization.JsonNet.DelegatingConverterBase.html#NodaTime_Serialization_JsonNet_DelegatingConverterBase_CanConvert_System_Type_
  name: CanConvert
  nameWithType: DelegatingConverterBase.CanConvert
  fullName: NodaTime.Serialization.JsonNet.DelegatingConverterBase.CanConvert
shouldSkipMarkup: true
