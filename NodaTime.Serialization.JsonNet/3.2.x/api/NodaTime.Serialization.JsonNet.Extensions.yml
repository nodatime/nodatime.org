### YamlMime:ManagedReference
items:
- uid: NodaTime.Serialization.JsonNet.Extensions
  commentId: T:NodaTime.Serialization.JsonNet.Extensions
  id: Extensions
  parent: NodaTime.Serialization.JsonNet
  children:
  - NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.IDateTimeZoneProvider)
  - NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  - NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.IDateTimeZoneProvider)
  - NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  - NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializer)
  - NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  - NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializer)
  - NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: NodaTime.Serialization.JsonNet.Extensions
  type: Class
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Static class containing extension methods to configure Json.NET for Noda Time types.
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.IDateTimeZoneProvider)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.IDateTimeZoneProvider)
  id: ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.IDateTimeZoneProvider)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureForNodaTime(JsonSerializerSettings, IDateTimeZoneProvider)
  nameWithType: Extensions.ConfigureForNodaTime(JsonSerializerSettings, IDateTimeZoneProvider)
  fullName: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings, NodaTime.IDateTimeZoneProvider)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Configures Json.NET with everything required to properly serialize and deserialize NodaTime data types.
  example: []
  syntax:
    content: public static JsonSerializerSettings ConfigureForNodaTime(this JsonSerializerSettings settings, IDateTimeZoneProvider provider)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The existing settings to add Noda Time converters to.
    - id: provider
      type: NodaTime.IDateTimeZoneProvider
      description: The time zone provider to use when parsing time zones and zoned date/times.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The original <code class="paramref">settings</code> value, for further chaining.
    content.vb: Public Shared Function ConfigureForNodaTime(settings As JsonSerializerSettings, provider As IDateTimeZoneProvider) As JsonSerializerSettings
  overload: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime*
- uid: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.IDateTimeZoneProvider)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.IDateTimeZoneProvider)
  id: ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.IDateTimeZoneProvider)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureForNodaTime(JsonSerializer, IDateTimeZoneProvider)
  nameWithType: Extensions.ConfigureForNodaTime(JsonSerializer, IDateTimeZoneProvider)
  fullName: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer, NodaTime.IDateTimeZoneProvider)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Configures Json.NET with everything required to properly serialize and deserialize NodaTime data types.
  example: []
  syntax:
    content: public static JsonSerializer ConfigureForNodaTime(this JsonSerializer serializer, IDateTimeZoneProvider provider)
    parameters:
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The existing serializer to add Noda Time converters to.
    - id: provider
      type: NodaTime.IDateTimeZoneProvider
      description: The time zone provider to use when parsing time zones and zoned date/times.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: The original <code class="paramref">serializer</code> value, for further chaining.
    content.vb: Public Shared Function ConfigureForNodaTime(serializer As JsonSerializer, provider As IDateTimeZoneProvider) As JsonSerializer
  overload: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime*
- uid: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  id: ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureForNodaTime(JsonSerializerSettings, NodaJsonSettings)
  nameWithType: Extensions.ConfigureForNodaTime(JsonSerializerSettings, NodaJsonSettings)
  fullName: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializerSettings, NodaTime.Serialization.JsonNet.NodaJsonSettings)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Configures Json.NET with everything required to properly serialize and deserialize NodaTime data types.
  remarks: >-
    Any converter property in <code class="paramref">nodaJsonSettings</code> which is null will not be added to the list of

    converters in <code class="paramref">settings</code>.
  example: []
  syntax:
    content: public static JsonSerializerSettings ConfigureForNodaTime(this JsonSerializerSettings settings, NodaJsonSettings nodaJsonSettings)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The existing settings to add Noda Time converters to.
    - id: nodaJsonSettings
      type: NodaTime.Serialization.JsonNet.NodaJsonSettings
      description: The <xref href="NodaTime.Serialization.JsonNet.NodaJsonSettings" data-throw-if-not-resolved="false"></xref> to add to the Json.NET settings.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The original <code class="paramref">settings</code> value, for further chaining.
    content.vb: Public Shared Function ConfigureForNodaTime(settings As JsonSerializerSettings, nodaJsonSettings As NodaJsonSettings) As JsonSerializerSettings
  overload: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime*
- uid: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  id: ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer,NodaTime.Serialization.JsonNet.NodaJsonSettings)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureForNodaTime(JsonSerializer, NodaJsonSettings)
  nameWithType: Extensions.ConfigureForNodaTime(JsonSerializer, NodaJsonSettings)
  fullName: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime(Newtonsoft.Json.JsonSerializer, NodaTime.Serialization.JsonNet.NodaJsonSettings)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: Configures Json.NET with everything required to properly serialize and deserialize NodaTime data types.
  remarks: >-
    Any converter property in <code class="paramref">nodaJsonSettings</code> which is null will not be added to the list of

    converters in <code class="paramref">serializer</code>.
  example: []
  syntax:
    content: public static JsonSerializer ConfigureForNodaTime(this JsonSerializer serializer, NodaJsonSettings nodaJsonSettings)
    parameters:
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The existing serializer to add Noda Time converters to.
    - id: nodaJsonSettings
      type: NodaTime.Serialization.JsonNet.NodaJsonSettings
      description: The <xref href="NodaTime.Serialization.JsonNet.NodaJsonSettings" data-throw-if-not-resolved="false"></xref> to add to the Json.NET settings.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: The original <code class="paramref">serializer</code> value, for further chaining.
    content.vb: Public Shared Function ConfigureForNodaTime(serializer As JsonSerializer, nodaJsonSettings As NodaJsonSettings) As JsonSerializer
  overload: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime*
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  id: WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoIntervalConverter(JsonSerializerSettings)
  nameWithType: Extensions.WithIsoIntervalConverter(JsonSerializerSettings)
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: >-
    Configures the given serializer settings to use <xref href="NodaTime.Serialization.JsonNet.NodaConverters.IsoIntervalConverter" data-throw-if-not-resolved="false"></xref>.

    Any other converters which can convert <xref href="NodaTime.Interval" data-throw-if-not-resolved="false"></xref> are removed from the serializer.
  example: []
  syntax:
    content: public static JsonSerializerSettings WithIsoIntervalConverter(this JsonSerializerSettings settings)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The existing serializer settings to add Noda Time converters to.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The original <code class="paramref">settings</code> value, for further chaining.
    content.vb: Public Shared Function WithIsoIntervalConverter(settings As JsonSerializerSettings) As JsonSerializerSettings
  overload: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter*
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializer)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializer)
  id: WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializer)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoIntervalConverter(JsonSerializer)
  nameWithType: Extensions.WithIsoIntervalConverter(JsonSerializer)
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter(Newtonsoft.Json.JsonSerializer)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: >-
    Configures the given serializer to use <xref href="NodaTime.Serialization.JsonNet.NodaConverters.IsoIntervalConverter" data-throw-if-not-resolved="false"></xref>.

    Any other converters which can convert <xref href="NodaTime.Interval" data-throw-if-not-resolved="false"></xref> are removed from the serializer.
  example: []
  syntax:
    content: public static JsonSerializer WithIsoIntervalConverter(this JsonSerializer serializer)
    parameters:
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The existing serializer to add Noda Time converters to.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: The original <code class="paramref">serializer</code> value, for further chaining.
    content.vb: Public Shared Function WithIsoIntervalConverter(serializer As JsonSerializer) As JsonSerializer
  overload: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter*
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  id: WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoDateIntervalConverter(JsonSerializerSettings)
  nameWithType: Extensions.WithIsoDateIntervalConverter(JsonSerializerSettings)
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializerSettings)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: >-
    Configures the given serializer settings to use <xref href="NodaTime.Serialization.JsonNet.NodaConverters.IsoDateIntervalConverter" data-throw-if-not-resolved="false"></xref>.

    Any other converters which can convert <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> are removed from the serializer.
  example: []
  syntax:
    content: public static JsonSerializerSettings WithIsoDateIntervalConverter(this JsonSerializerSettings settings)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The existing serializer settings to add Noda Time converters to.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The original <code class="paramref">settings</code> value, for further chaining.
    content.vb: Public Shared Function WithIsoDateIntervalConverter(settings As JsonSerializerSettings) As JsonSerializerSettings
  overload: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter*
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializer)
  commentId: M:NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializer)
  id: WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializer)
  isExtensionMethod: true
  parent: NodaTime.Serialization.JsonNet.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoDateIntervalConverter(JsonSerializer)
  nameWithType: Extensions.WithIsoDateIntervalConverter(JsonSerializer)
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter(Newtonsoft.Json.JsonSerializer)
  type: Method
  assemblies:
  - NodaTime.Serialization.JsonNet
  namespace: NodaTime.Serialization.JsonNet
  summary: >-
    Configures the given serializer to use <xref href="NodaTime.Serialization.JsonNet.NodaConverters.IsoDateIntervalConverter" data-throw-if-not-resolved="false"></xref>.

    Any other converters which can convert <xref href="NodaTime.DateInterval" data-throw-if-not-resolved="false"></xref> are removed from the serializer.
  example: []
  syntax:
    content: public static JsonSerializer WithIsoDateIntervalConverter(this JsonSerializer serializer)
    parameters:
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The existing serializer to add Noda Time converters to.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: The original <code class="paramref">serializer</code> value, for further chaining.
    content.vb: Public Shared Function WithIsoDateIntervalConverter(serializer As JsonSerializer) As JsonSerializer
  overload: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter*
references:
- uid: NodaTime.Serialization.JsonNet
  commentId: N:NodaTime.Serialization.JsonNet
  href: NodaTime.html
  name: NodaTime.Serialization.JsonNet
  nameWithType: NodaTime.Serialization.JsonNet
  fullName: NodaTime.Serialization.JsonNet
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Serialization
    name: Serialization
    href: NodaTime.Serialization.html
  - name: .
  - uid: NodaTime.Serialization.JsonNet
    name: JsonNet
    href: NodaTime.Serialization.JsonNet.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Serialization
    name: Serialization
    href: NodaTime.Serialization.html
  - name: .
  - uid: NodaTime.Serialization.JsonNet
    name: JsonNet
    href: NodaTime.Serialization.JsonNet.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime*
  commentId: Overload:NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime
  href: NodaTime.Serialization.JsonNet.Extensions.html#NodaTime_Serialization_JsonNet_Extensions_ConfigureForNodaTime_Newtonsoft_Json_JsonSerializerSettings_NodaTime_IDateTimeZoneProvider_
  name: ConfigureForNodaTime
  nameWithType: Extensions.ConfigureForNodaTime
  fullName: NodaTime.Serialization.JsonNet.Extensions.ConfigureForNodaTime
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  parent: NodaTime
  isExternal: true
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: NodaTime
  commentId: N:NodaTime
  isExternal: true
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: NodaTime.Serialization.JsonNet.NodaJsonSettings
  commentId: T:NodaTime.Serialization.JsonNet.NodaJsonSettings
  parent: NodaTime.Serialization.JsonNet
  href: NodaTime.Serialization.JsonNet.NodaJsonSettings.html
  name: NodaJsonSettings
  nameWithType: NodaJsonSettings
  fullName: NodaTime.Serialization.JsonNet.NodaJsonSettings
- uid: NodaTime.Serialization.JsonNet.NodaConverters.IsoIntervalConverter
  commentId: P:NodaTime.Serialization.JsonNet.NodaConverters.IsoIntervalConverter
  href: NodaTime.Serialization.JsonNet.NodaConverters.html#NodaTime_Serialization_JsonNet_NodaConverters_IsoIntervalConverter
  name: IsoIntervalConverter
  nameWithType: NodaConverters.IsoIntervalConverter
  fullName: NodaTime.Serialization.JsonNet.NodaConverters.IsoIntervalConverter
- uid: NodaTime.Interval
  commentId: T:NodaTime.Interval
  isExternal: true
  href: https://github.com/nodatime/nodatime/blob/0a5d46c41a654ab70ceb0b85208d98a17938a50b/src/NodaTime/Interval.cs
  name: Interval
  nameWithType: Interval
  fullName: NodaTime.Interval
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter*
  commentId: Overload:NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter
  href: NodaTime.Serialization.JsonNet.Extensions.html#NodaTime_Serialization_JsonNet_Extensions_WithIsoIntervalConverter_Newtonsoft_Json_JsonSerializerSettings_
  name: WithIsoIntervalConverter
  nameWithType: Extensions.WithIsoIntervalConverter
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoIntervalConverter
- uid: NodaTime.Serialization.JsonNet.NodaConverters.IsoDateIntervalConverter
  commentId: P:NodaTime.Serialization.JsonNet.NodaConverters.IsoDateIntervalConverter
  href: NodaTime.Serialization.JsonNet.NodaConverters.html#NodaTime_Serialization_JsonNet_NodaConverters_IsoDateIntervalConverter
  name: IsoDateIntervalConverter
  nameWithType: NodaConverters.IsoDateIntervalConverter
  fullName: NodaTime.Serialization.JsonNet.NodaConverters.IsoDateIntervalConverter
- uid: NodaTime.DateInterval
  commentId: T:NodaTime.DateInterval
  isExternal: true
  href: https://github.com/nodatime/nodatime/blob/0a5d46c41a654ab70ceb0b85208d98a17938a50b/src/NodaTime/DateInterval.cs
  name: DateInterval
  nameWithType: DateInterval
  fullName: NodaTime.DateInterval
- uid: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter*
  commentId: Overload:NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter
  href: NodaTime.Serialization.JsonNet.Extensions.html#NodaTime_Serialization_JsonNet_Extensions_WithIsoDateIntervalConverter_Newtonsoft_Json_JsonSerializerSettings_
  name: WithIsoDateIntervalConverter
  nameWithType: Extensions.WithIsoDateIntervalConverter
  fullName: NodaTime.Serialization.JsonNet.Extensions.WithIsoDateIntervalConverter
shouldSkipMarkup: true
