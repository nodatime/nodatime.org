<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NodaConverterBase(T).ReadJson Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ReadJson method" /><meta name="System.Keywords" content="NodaConverterBase%3CT%3E.ReadJson method" /><meta name="System.Keywords" content="NodaConverterBase(Of T).ReadJson method" /><meta name="Microsoft.Help.F1" content="NodaTime.Serialization.JsonNet.NodaConverterBase`1.ReadJson" /><meta name="Microsoft.Help.Id" content="M:NodaTime.Serialization.JsonNet.NodaConverterBase`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" /><meta name="Description" content="Converts the JSON stored in a reader into the relevant Noda Time type." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="NodaTime.Serialization.JsonNet" /><meta name="file" content="M_NodaTime_Serialization_JsonNet_NodaConverterBase_1_ReadJson" /><meta name="guid" content="M_NodaTime_Serialization_JsonNet_NodaConverterBase_1_ReadJson" /><link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">NodaConverterBase<span id="ID0EEBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0ECBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>ReadJson Method </td><td class="OH_tdRunningTitleColumn">Noda Time</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">
            Converts the JSON stored in a reader into the relevant Noda Time type.
            </div><p></p><b>Namespace:</b> <a href="N_NodaTime_Serialization_JsonNet.htm" target="">NodaTime.Serialization.JsonNet</a><br /><b>Assembly:</b> <span sdata="assembly">NodaTime.Serialization.JsonNet</span> (in NodaTime.Serialization.JsonNet.dll) Version: 2.0.0.0 (2.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0ECGEAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ECGEAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0ECGEAAAAA_tabimgleft"></div><div id="ID0ECGEAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECGEAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0ECGEAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECGEAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0ECGEAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECGEAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0ECGEAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECGEAAAAA_tabimgright"></div></div><div id="ID0ECGEAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECGEAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ECGEAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ECGEAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECGEAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECGEAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECGEAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ECGEAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">override</span> <span class="identifier">Object</span> <span class="identifier">ReadJson</span>(
	<span class="identifier">JsonReader</span> <span class="parameter">reader</span>,
	<span class="identifier">Type</span> <span class="parameter">objectType</span>,
	<span class="identifier">Object</span> <span class="parameter">existingValue</span>,
	<span class="identifier">JsonSerializer</span> <span class="parameter">serializer</span>
)</pre></div><div id="ID0ECGEAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public override Object ReadJson(
	JsonReader reader,
	Type objectType,
	Object existingValue,
	JsonSerializer serializer
)</pre></div><div id="ID0ECGEAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Overrides</span> <span class="keyword">Function</span> <span class="identifier">ReadJson</span> ( 
	<span class="parameter">reader</span> <span class="keyword">As</span> <span class="identifier">JsonReader</span>,
	<span class="parameter">objectType</span> <span class="keyword">As</span> <span class="identifier">Type</span>,
	<span class="parameter">existingValue</span> <span class="keyword">As</span> <span class="identifier">Object</span>,
	<span class="parameter">serializer</span> <span class="keyword">As</span> <span class="identifier">JsonSerializer</span>
) <span class="keyword">As</span> <span class="identifier">Object</span></pre></div><div id="ID0ECGEAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Overrides Function ReadJson ( 
	reader As JsonReader,
	objectType As Type,
	existingValue As Object,
	serializer As JsonSerializer
) As Object</pre></div><div id="ID0ECGEAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
<span class="keyword">virtual</span> <span class="identifier">Object</span>^ <span class="identifier">ReadJson</span>(
	<span class="identifier">JsonReader</span>^ <span class="parameter">reader</span>, 
	<span class="identifier">Type</span>^ <span class="parameter">objectType</span>, 
	<span class="identifier">Object</span>^ <span class="parameter">existingValue</span>, 
	<span class="identifier">JsonSerializer</span>^ <span class="parameter">serializer</span>
) <span class="keyword">override</span></pre></div><div id="ID0ECGEAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
virtual Object^ ReadJson(
	JsonReader^ reader, 
	Type^ objectType, 
	Object^ existingValue, 
	JsonSerializer^ serializer
) override</pre></div><div id="ID0ECGEAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0ECGEAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECGEAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="reader"><dt><span class="parameter">reader</span></dt><dd>Type: <span class="nolink">JsonReader</span><br /><span>The Json.NET reader to read data from.</span></dd></dl><dl paramName="objectType"><dt><span class="parameter">objectType</span></dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">System<span id="ID0EBCACFEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCACFEAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Type</a><br /><span>The type to convert the JSON to.</span></dd></dl><dl paramName="existingValue"><dt><span class="parameter">existingValue</span></dt><dd>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBCABFEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCABFEAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a><br /><span>An existing value; ignored by this converter.</span></dd></dl><dl paramName="serializer"><dt><span class="parameter">serializer</span></dt><dd>Type: <span class="nolink">JsonSerializer</span><br /><span>A serializer to use for any embedded deserialization.</span></dd></dl></div><h4 class="subHeading">Return Value</h4>Type: <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a><br />The deserialized value.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="T_NodaTime_Utility_InvalidNodaDataException.htm" target="">NodaTime.Utility<span id="ID0EBABAAADAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAADAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>InvalidNodaDataException</a></td><td>The JSON was invalid for this converter.</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Version Information</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><b>Available since: </b>1.2.0<br /><b>Supported in the PCL? </b>Yes<a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_NodaTime_Serialization_JsonNet_NodaConverterBase_1.htm" target="">NodaConverterBase<span id="ID0EDACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDACAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EBACAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBACAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</a></div><div class="seeAlsoStyle"><a href="AllMembers_T_NodaTime_Serialization_JsonNet_NodaConverterBase_1.htm" target="">NodaConverterBase<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="N_NodaTime_Serialization_JsonNet.htm" target="">NodaTime.Serialization.JsonNet Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank"><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /> 
						Copyright 2014 The Noda Time Authors. All rights reserved. (http://www.apache.org/licenses/LICENSE-2.0)</a></p><div class="OH_feedbacklink"><a href="mailto:noda-time@googlegroups.com?subject=Noda+Time+NodaConverterBase(T).ReadJson+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to Noda Time Google Groups.</div></div></body></html>