<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>Instant Structure</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_Instant" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.Instant" /><MSHelp:Keyword Index="A" Term="T:NodaTime.Instant" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeInstantClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeInstantMembersTopic" /><MSHelp:Keyword Index="K" Term="Instant structure" /><MSHelp:Keyword Index="K" Term="NodaTime.Instant structure" /><MSHelp:Keyword Index="F" Term="Instant" /><MSHelp:Keyword Index="F" Term="NodaTime.Instant" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.Instant" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Represents an instant on the global timeline." /></xml></head><body><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">Instant Structure</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <a href="N_NodaTime.htm">NodaTime</a> ► <span class="selflink">Instant</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            Represents an instant on the global timeline.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">Instant</span> : <span class="identifier">IEquatable</span>&lt;<span class="identifier">Instant</span>&gt;, 
	<span class="identifier">IComparable</span>&lt;<span class="identifier">Instant</span>&gt;, <span class="identifier">IFormattable</span>, <span class="identifier">IComparable</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">Instant</span>
	<span class="keyword">Implements</span> <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> <span class="identifier">Instant</span>), <span class="identifier">IComparable</span>(<span class="keyword">Of</span> <span class="identifier">Instant</span>), 
	<span class="identifier">IFormattable</span>, <span class="identifier">IComparable</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">Instant</span> : <span class="identifier">IEquatable</span>&lt;<span class="identifier">Instant</span>&gt;, 
	<span class="identifier">IComparable</span>&lt;<span class="identifier">Instant</span>&gt;, <span class="identifier">IFormattable</span>, <span class="identifier">IComparable</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant__ctor.htm">Instant(Int64)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">Instant</span> struct.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_Add.htm">Add(Instant, Duration)</a></td><td><div class="summary">
            Adds a duration to an instant. Friendly alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_Addition.htm">Addition(Instant, Duration)</a></td><td><div class="summary">
            Implements the operator + (addition) for <span class="selflink">Instant</span> + <a href="T_NodaTime_Duration.htm">Duration</a>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_CompareTo.htm">CompareTo(Instant)</a></td><td><div class="summary">
            Compares the current object with another object of the same type.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_Equality.htm">Equality(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator == (equality).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_Equals_1.htm">Equals(Object)</a></td><td><div class="summary">
            Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to this instance.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/2dts52z7" target="_blank">Equals(Object)</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_Equals.htm">Equals(Instant)</a></td><td><div class="summary">
            Indicates whether the value of this instant is equal to the value of the specified instant.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromDateTimeOffset.htm">FromDateTimeOffset(DateTimeOffset)</a></td><td><div class="summary">
            Converts a <a href="http://msdn2.microsoft.com/en-us/library/bb341783" target="_blank">DateTimeOffset</a> into a new Instant representing the same instant in time. Note that
            the offset information is not preserved in the returned Instant.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromDateTimeUtc.htm">FromDateTimeUtc(DateTime)</a></td><td><div class="summary">
            Converts a <a href="http://msdn2.microsoft.com/en-us/library/03ybds8y" target="_blank">DateTime</a> into a new Instant representing the same instant in time.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromMillisecondsSinceUnixEpoch.htm">FromMillisecondsSinceUnixEpoch(Int64)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">Instant</span> struct based
            on a number of milliseconds since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromSecondsSinceUnixEpoch.htm">FromSecondsSinceUnixEpoch(Int64)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">Instant</span> struct based
            on a number of seconds since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromTicksSinceUnixEpoch.htm">FromTicksSinceUnixEpoch(Int64)</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">Instant</span> struct based
            on a number of ticks since the Unix epoch of (ISO) January 1st 1970, midnight, UTC.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromUtc.htm">FromUtc(Int32, Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Returns a new instant corresponding to the given UTC date and time in the ISO calendar.
            In most cases applications should use <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> to represent a date
            and time, but this method is useful in some situations where an <span class="selflink">Instant</span> is
            required, such as time zone testing.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_FromUtc_1.htm">FromUtc(Int32, Int32, Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Returns a new instant corresponding to the given UTC date and
            time in the ISO calendar. In most cases applications should 
            use <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a>
            to represent a date and time, but this method is useful in some 
            situations where an Instant is required, such as time zone testing.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_GetHashCode.htm">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
              Returns a hash code for this instance.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/y3509fc2" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_GreaterThan.htm">GreaterThan(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator &gt; (greater than).
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_GreaterThanOrEqual.htm">GreaterThanOrEqual(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator &gt;= (greater than or equal).
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_Inequality.htm">Inequality(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator != (inequality).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_InUtc.htm">InUtc<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns the <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> representing the same point in time as this instant, in the UTC time
            zone and ISO-8601 calendar. This is a shortcut for calling <a href="M_NodaTime_Instant_InZone.htm">InZone(DateTimeZone)</a> with an
            argument of <a href="P_NodaTime_DateTimeZone_Utc.htm">Utc</a>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_InZone.htm">InZone(DateTimeZone)</a></td><td><div class="summary">
            Returns the <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> representing the same point in time as this instant, in the
            specified time zone and ISO-8601 calendar.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_InZone_1.htm">InZone(DateTimeZone, CalendarSystem)</a></td><td><div class="summary">
            Returns the <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> representing the same point in time as this instant, in the
            specified time zone and calendar system.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_LessThan.htm">LessThan(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator &lt; (less than).
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_LessThanOrEqual.htm">LessThanOrEqual(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator &lt;= (less than or equal).
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_Max.htm">Max(Instant, Instant)</a></td><td><div class="summary">
            Returns the later instant of the given two.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_Instant_MaxValue.htm">MaxValue</a></td><td><div class="summary">
            Represents the largest possible <span class="selflink">Instant</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_Min.htm">Min(Instant, Instant)</a></td><td><div class="summary">
            Returns the earlier instant of the given two.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_Minus_1.htm">Minus(Instant)</a></td><td><div class="summary">
            Returns the result of subtracting another instant from this one, for a fluent alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_Minus.htm">Minus(Duration)</a></td><td><div class="summary">
            Returns the result of subtracting a duration from this instant, for a fluent alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_Instant_MinValue.htm">MinValue</a></td><td><div class="summary">
            Represents the smallest possible <span class="selflink">Instant</span>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_Plus.htm">Plus(Duration)</a></td><td><div class="summary">
            Returns the result of adding a duration to this instant, for a fluent alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_PlusTicks.htm">PlusTicks(Int64)</a></td><td><div class="summary">
            Returns a new value of this instant with the given number of ticks added to it.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_Subtract_1.htm">Subtract(Instant, Instant)</a></td><td><div class="summary">
              Subtracts one instant from another. Friendly alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_Subtract.htm">Subtract(Instant, Duration)</a></td><td><div class="summary">
            Subtracts a duration from an instant. Friendly alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_Subtraction_1.htm">Subtraction(Instant, Instant)</a></td><td><div class="summary">
              Implements the operator - (subtraction) for <span class="selflink">Instant</span> - <span class="selflink">Instant</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_Instant_op_Subtraction.htm">Subtraction(Instant, Duration)</a></td><td><div class="summary">
            Implements the operator - (subtraction) for <span class="selflink">Instant</span> - <a href="T_NodaTime_Duration.htm">Duration</a>.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_Instant_Ticks.htm">Ticks</a></td><td><div class="summary">
            The number of ticks since the Unix epoch. Negative values represent instants before the Unix epoch.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_ToDateTimeOffset.htm">ToDateTimeOffset<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs a <a href="http://msdn2.microsoft.com/en-us/library/bb341783" target="_blank">DateTimeOffset</a> from this Instant which has an offset of zero.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_ToDateTimeUtc.htm">ToDateTimeUtc<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Constructs a <a href="http://msdn2.microsoft.com/en-us/library/03ybds8y" target="_blank">DateTime</a> from this Instant which has a <a href="http://msdn2.microsoft.com/en-us/library/e3t6hfy5" target="_blank">Kind</a>
            of <a href="http://msdn2.microsoft.com/en-us/library/shx7s921" target="_blank">Utc</a> and represents the same instant of time as this value.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_ToString.htm">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns a <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> that represents this instance.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/wb77sz3h" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_Instant_ToString_1.htm">ToString(String, IFormatProvider)</a></td><td><div class="summary">
            Formats the value of the current instance using the specified pattern.
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent"><p>
            An instant is defined by an integral number of 'ticks' since the Unix epoch (typically described as January 1st
            1970, midnight, UTC, ISO calendar), where a tick is equal to 100 nanoseconds. There are 10,000 ticks in a
            millisecond.
            </p><p>
            An <span class="selflink">Instant</span> has no concept of a particular time zone or calendar: it simply represents a point in
            time that can be globally agreed-upon.
            </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Thread Safety</div><div class="sectionContent">This type is an immutable value type. See the thread safety section of the user guide for more information.</div></div><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2013 The Noda Time Authors. All rights reserved.</a></div><p>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime.dll) Version: 1.1.0.0 (1.1.1)</p></div></body></html>