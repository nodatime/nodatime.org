<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>IDateTimeZoneSource Interface</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_TimeZones_IDateTimeZoneSource" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.TimeZones.IDateTimeZoneSource" /><MSHelp:Keyword Index="A" Term="T:NodaTime.TimeZones.IDateTimeZoneSource" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeTimeZonesIDateTimeZoneSourceClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeTimeZonesIDateTimeZoneSourceMembersTopic" /><MSHelp:Keyword Index="K" Term="IDateTimeZoneSource interface" /><MSHelp:Keyword Index="K" Term="NodaTime.TimeZones.IDateTimeZoneSource interface" /><MSHelp:Keyword Index="F" Term="IDateTimeZoneSource" /><MSHelp:Keyword Index="F" Term="NodaTime.TimeZones.IDateTimeZoneSource" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.TimeZones.IDateTimeZoneSource" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Provides the interface for objects that can retrieve time zone definitions given an ID." /></xml></head><body><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">IDateTimeZoneSource Interface</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <a href="N_NodaTime_TimeZones.htm">NodaTime.TimeZones</a> ► <span class="selflink">IDateTimeZoneSource</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            Provides the interface for objects that can retrieve time zone definitions given an ID.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IDateTimeZoneSource</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IDateTimeZoneSource</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IDateTimeZoneSource</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_TimeZones_IDateTimeZoneSource_ForId.htm">ForId(String)</a></td><td><div class="summary">
            Returns the time zone definition associated with the given id.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_TimeZones_IDateTimeZoneSource_GetIds.htm">GetIds<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns an unordered enumeration of the available ids from this source.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_TimeZones_IDateTimeZoneSource_MapTimeZoneId.htm">MapTimeZoneId(TimeZoneInfo)</a></td><td><div class="summary">
            Returns this source's corresponding ID for the given BCL time zone.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_TimeZones_IDateTimeZoneSource_VersionId.htm">VersionId</a></td><td><div class="summary">
            Returns an appropriate version ID for diagnostic purposes, which must not be null.
            This doesn't have any specific format; it's solely for diagnostic purposes.
            For example, the default source returns a string such as
            "TZDB: 2011n" indicating where the information comes from and which version of that information
            it's loaded.
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent"><p>
            The interface presumes that the available time zones are static; there is no mechanism for 
            updating the list of available time zones. Any time zone ID that is returned in <a href="M_NodaTime_TimeZones_IDateTimeZoneSource_GetIds.htm">GetIds<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> 
            must be resolved by <a href="M_NodaTime_TimeZones_IDateTimeZoneSource_ForId.htm">ForId(String)</a> for the life of the source.
            </p><p>
            Implementations need not cache time zones or the available time zone IDs. 
            Caching is provided by <a href="T_NodaTime_TimeZones_DateTimeZoneCache.htm">DateTimeZoneCache</a>, which most consumers should use instead of 
            consuming <span class="selflink">IDateTimeZoneSource</span> directly in order to get better performance.
            </p><p>
            It is expected that any exceptions thrown are implementation-specific; nothing is explicitly
            specified in the interface. Typically this would be unusual to the point that callers would not
            try to catch them; any implementation which may break in ways that are sensible to catch should advertise
            this clearly, so that clients will know to handle the exceptions appropriately. No wrapper exception
            type is provided by Noda Time to handle this situation, and code in Noda Time does not try to catch
            such exceptions.
            </p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Thread Safety</div><div class="sectionContent">Implementations are not required to be thread-safe.</div></div><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2013 The Noda Time Authors. All rights reserved.</a></div><p>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime.dll) Version: 1.1.0.0 (1.1.1)</p></div></body></html>