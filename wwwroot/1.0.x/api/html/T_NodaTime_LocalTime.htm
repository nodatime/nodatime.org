<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>LocalTime Structure</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_LocalTime" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.LocalTime" /><MSHelp:Keyword Index="A" Term="T:NodaTime.LocalTime" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeLocalTimeClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeLocalTimeMembersTopic" /><MSHelp:Keyword Index="K" Term="LocalTime structure" /><MSHelp:Keyword Index="K" Term="NodaTime.LocalTime structure" /><MSHelp:Keyword Index="F" Term="LocalTime" /><MSHelp:Keyword Index="F" Term="NodaTime.LocalTime" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.LocalTime" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="LocalTime is an immutable struct representing a time of day, with no reference to a particular calendar, time zone or date." /></xml></head><body><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">LocalTime Structure</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <a href="N_NodaTime.htm">NodaTime</a> ► <span class="selflink">LocalTime</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            LocalTime is an immutable struct representing a time of day, with no reference
            to a particular calendar, time zone or date.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">LocalTime</span> : <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>&lt;<span class="selflink">LocalTime</span>&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/4d7sx9hd" target="_blank">IComparable</a>&lt;<span class="selflink">LocalTime</span>&gt;, <a href="http://msdn2.microsoft.com/en-us/library/bk5yxz0f" target="_blank">IFormattable</a></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">LocalTime</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>(<span class="keyword">Of</span> <span class="selflink">LocalTime</span>), <a href="http://msdn2.microsoft.com/en-us/library/4d7sx9hd" target="_blank">IComparable</a>(<span class="keyword">Of</span> <span class="selflink">LocalTime</span>),  _
	<a href="http://msdn2.microsoft.com/en-us/library/bk5yxz0f" target="_blank">IFormattable</a></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">LocalTime</span> : <a href="http://msdn2.microsoft.com/en-us/library/ms131187" target="_blank">IEquatable</a>&lt;<span class="selflink">LocalTime</span>&gt;, 
	<a href="http://msdn2.microsoft.com/en-us/library/4d7sx9hd" target="_blank">IComparable</a>&lt;<span class="selflink">LocalTime</span>&gt;, <a href="http://msdn2.microsoft.com/en-us/library/bk5yxz0f" target="_blank">IFormattable</a></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime__ctor.htm">LocalTime(Int32, Int32)</a></td><td><div class="summary">
            Creates a local time at the given hour and minute, with second, millisecond-of-second
            and tick-of-millisecond values of zero.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime__ctor_1.htm">LocalTime(Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a local time at the given hour, minute and second,
            with millisecond-of-second and tick-of-millisecond values of zero.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime__ctor_2.htm">LocalTime(Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a local time at the given hour, minute, second and millisecond,
            with a tick-of-millisecond value of zero.
            </div><br /></td></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime__ctor_3.htm">LocalTime(Int32, Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Creates a local time at the given hour, minute, second, millisecond and tick within millisecond.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_Add.htm">Add(LocalTime, Period)</a></td><td><div class="summary">
            Adds the specified period to the time. Friendly alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_Addition.htm">Addition(LocalTime, Period)</a></td><td><div class="summary">
            Creates a new local time by adding a period to an existing time. The period must not contain
            any date-related units (days etc) with non-zero values.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_ClockHourOfHalfDay.htm">ClockHourOfHalfDay</a></td><td><div class="summary">
            Gets the hour of the half-day of this local time, in the range 1 to 12 inclusive.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_CompareTo.htm">CompareTo(LocalTime)</a></td><td><div class="summary">
            Indicates whether this time is earlier, later or the same as another one.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_Equality.htm">Equality(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two local times for equality, by checking whether they represent
            the exact same local time, down to the tick.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_Equals.htm">Equals(LocalTime)</a></td><td><div class="summary">
            Compares this local time with the specified one for equality,
            by checking whether the two values represent the exact same local time, down to the tick.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_Equals_1.htm">Equals(Object)</a></td><td><div class="summary">
            Compares this local time with the specified reference. A local time is
            only equal to another local time with the same underlying tick value.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/2dts52z7" target="_blank">Equals(Object)</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_FromHourMinuteSecondTick.htm">FromHourMinuteSecondTick(Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Factory method for creating a local time from the hour of day, minute of hour, second of minute, and tick of second.
            This is not a constructor overload as it would have the same signature as the one taking millisecond of second.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_GetHashCode.htm">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns a hash code for this local time.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/y3509fc2" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_GreaterThan.htm">GreaterThan(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two LocalTime values to see if the left one is strictly later than the right
            one.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_GreaterThanOrEqual.htm">GreaterThanOrEqual(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two LocalTime values to see if the left one is later than or equal to the right
            one.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_Hour.htm">Hour</a></td><td><div class="summary">
            Gets the hour of day of this local time, in the range 0 to 23 inclusive.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_Inequality.htm">Inequality(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two local times for inequality.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_LessThan.htm">LessThan(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two LocalTime values to see if the left one is strictly earlier than the right
            one.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_LessThanOrEqual.htm">LessThanOrEqual(LocalTime, LocalTime)</a></td><td><div class="summary">
            Compares two LocalTime values to see if the left one is earlier than or equal to the right
            one.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_LocalDateTime.htm">LocalDateTime</a></td><td><div class="summary">
            Returns a LocalDateTime with this local time, on January 1st 1970 in the ISO calendar.
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_LocalTime_Midnight.htm">Midnight</a></td><td><div class="summary">
            Local time at midnight, i.e. 0 hours, 0 minutes, 0 seconds.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_Millisecond.htm">Millisecond</a></td><td><div class="summary">
            Gets the millisecond of this local time within the second, in the range 0 to 999 inclusive.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_Minus.htm">Minus(Period)</a></td><td><div class="summary">
            Subtracts the specified period from this time. Fluent alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_Minute.htm">Minute</a></td><td><div class="summary">
            Gets the minute of this local time, in the range 0 to 59 inclusive.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_LocalTime_Noon.htm">Noon</a></td><td><div class="summary">
            Local time at noon, i.e. 12 hours, 0 minutes, 0 seconds.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_Plus.htm">Plus(Period)</a></td><td><div class="summary">
            Adds the specified period to this time. Fluent alternative to <span class="code">operator+()</span>.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_PlusHours.htm">PlusHours(Int64)</a></td><td><div class="summary">
            Returns a new LocalTime representing the current value with the given number of hours added.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_PlusMilliseconds.htm">PlusMilliseconds(Int64)</a></td><td><div class="summary">
            Returns a new LocalTime representing the current value with the given number of milliseconds added.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_PlusMinutes.htm">PlusMinutes(Int64)</a></td><td><div class="summary">
            Returns a new LocalTime representing the current value with the given number of minutes added.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_PlusSeconds.htm">PlusSeconds(Int64)</a></td><td><div class="summary">
            Returns a new LocalTime representing the current value with the given number of seconds added.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_PlusTicks.htm">PlusTicks(Int64)</a></td><td><div class="summary">
            Returns a new LocalTime representing the current value with the given number of ticks added.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_Second.htm">Second</a></td><td><div class="summary">
            Gets the second of this local time within the minute, in the range 0 to 59 inclusive.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_Subtract.htm">Subtract(LocalTime, Period)</a></td><td><div class="summary">
            Subtracts the specified period from the time. Friendly alternative to <span class="code">operator-()</span>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/puboperator.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_LocalTime_op_Subtraction.htm">Subtraction(LocalTime, Period)</a></td><td><div class="summary">
            Creates a new local time by subtracting a period from an existing time. The period must not contain
            any date-related units (days etc) with non-zero values.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_TickOfDay.htm">TickOfDay</a></td><td><div class="summary">
            Gets the tick of this local time within the day, in the range 0 to 863,999,999,999 inclusive.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_LocalTime_TickOfSecond.htm">TickOfSecond</a></td><td><div class="summary">
            Gets the tick of this local time within the second, in the range 0 to 9,999,999 inclusive.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_ToString.htm">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns a <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> that represents this instance.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a>.<a href="http://msdn2.microsoft.com/en-us/library/wb77sz3h" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_LocalTime_ToString_1.htm">ToString(String, IFormatProvider)</a></td><td><div class="summary">
            Formats the value of the current instance using the specified pattern.
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Thread Safety</div><div class="sectionContent">This type is an immutable value type. See the thread safety section of the user guide for more information.</div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2001-2009 Stephen Colebourne, 2009-2012 Jon Skeet, All rights reserved.</a></div>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime) Version: 1.0.0.0 (1.0.1)</p></div></body></html>