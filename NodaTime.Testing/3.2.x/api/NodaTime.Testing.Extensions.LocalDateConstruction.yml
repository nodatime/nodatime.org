### YamlMime:ManagedReference
items:
- uid: NodaTime.Testing.Extensions.LocalDateConstruction
  commentId: T:NodaTime.Testing.Extensions.LocalDateConstruction
  id: LocalDateConstruction
  parent: NodaTime.Testing.Extensions
  children:
  - NodaTime.Testing.Extensions.LocalDateConstruction.April(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.August(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.December(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.February(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.January(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.July(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.June(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.March(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.May(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.November(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.October(System.Int32,System.Int32)
  - NodaTime.Testing.Extensions.LocalDateConstruction.September(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: LocalDateConstruction
  nameWithType: LocalDateConstruction
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction
  type: Class
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Extension methods for constructing <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> values in the ISO calendar.
  example: []
  syntax:
    content: public static class LocalDateConstruction
    content.vb: Public Module LocalDateConstruction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.January(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.January(System.Int32,System.Int32)
  id: January(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: January(int, int)
  nameWithType: LocalDateConstruction.January(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.January(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in January on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.January(2017);</code></pre>
  syntax:
    content: public static LocalDate January(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of January for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in January.
    content.vb: Public Shared Function January(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.January*
  nameWithType.vb: LocalDateConstruction.January(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.January(Integer, Integer)
  name.vb: January(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.February(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.February(System.Int32,System.Int32)
  id: February(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: February(int, int)
  nameWithType: LocalDateConstruction.February(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.February(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in February on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.February(2017);</code></pre>
  syntax:
    content: public static LocalDate February(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of February for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in February.
    content.vb: Public Shared Function February(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.February*
  nameWithType.vb: LocalDateConstruction.February(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.February(Integer, Integer)
  name.vb: February(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.March(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.March(System.Int32,System.Int32)
  id: March(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: March(int, int)
  nameWithType: LocalDateConstruction.March(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.March(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in March on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.March(2017);</code></pre>
  syntax:
    content: public static LocalDate March(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of March for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in March.
    content.vb: Public Shared Function March(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.March*
  nameWithType.vb: LocalDateConstruction.March(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.March(Integer, Integer)
  name.vb: March(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.April(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.April(System.Int32,System.Int32)
  id: April(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: April(int, int)
  nameWithType: LocalDateConstruction.April(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.April(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in April on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.April(2017);</code></pre>
  syntax:
    content: public static LocalDate April(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of April for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in April.
    content.vb: Public Shared Function April(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.April*
  nameWithType.vb: LocalDateConstruction.April(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.April(Integer, Integer)
  name.vb: April(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.May(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.May(System.Int32,System.Int32)
  id: May(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: May(int, int)
  nameWithType: LocalDateConstruction.May(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.May(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in May on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.May(2017);</code></pre>
  syntax:
    content: public static LocalDate May(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of May for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in May.
    content.vb: Public Shared Function May(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.May*
  nameWithType.vb: LocalDateConstruction.May(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.May(Integer, Integer)
  name.vb: May(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.June(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.June(System.Int32,System.Int32)
  id: June(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: June(int, int)
  nameWithType: LocalDateConstruction.June(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.June(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in June on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.June(2017);</code></pre>
  syntax:
    content: public static LocalDate June(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of June for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in June.
    content.vb: Public Shared Function June(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.June*
  nameWithType.vb: LocalDateConstruction.June(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.June(Integer, Integer)
  name.vb: June(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.July(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.July(System.Int32,System.Int32)
  id: July(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: July(int, int)
  nameWithType: LocalDateConstruction.July(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.July(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in July on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.July(2017);</code></pre>
  syntax:
    content: public static LocalDate July(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of July for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in July.
    content.vb: Public Shared Function July(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.July*
  nameWithType.vb: LocalDateConstruction.July(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.July(Integer, Integer)
  name.vb: July(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.August(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.August(System.Int32,System.Int32)
  id: August(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: August(int, int)
  nameWithType: LocalDateConstruction.August(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.August(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in August on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.August(2017);</code></pre>
  syntax:
    content: public static LocalDate August(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of August for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in August.
    content.vb: Public Shared Function August(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.August*
  nameWithType.vb: LocalDateConstruction.August(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.August(Integer, Integer)
  name.vb: August(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.September(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.September(System.Int32,System.Int32)
  id: September(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: September(int, int)
  nameWithType: LocalDateConstruction.September(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.September(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in September on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.September(2017);</code></pre>
  syntax:
    content: public static LocalDate September(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of September for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in September.
    content.vb: Public Shared Function September(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.September*
  nameWithType.vb: LocalDateConstruction.September(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.September(Integer, Integer)
  name.vb: September(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.October(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.October(System.Int32,System.Int32)
  id: October(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: October(int, int)
  nameWithType: LocalDateConstruction.October(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.October(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in October on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.October(2017);</code></pre>
  syntax:
    content: public static LocalDate October(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of October for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in October.
    content.vb: Public Shared Function October(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.October*
  nameWithType.vb: LocalDateConstruction.October(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.October(Integer, Integer)
  name.vb: October(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.November(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.November(System.Int32,System.Int32)
  id: November(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: November(int, int)
  nameWithType: LocalDateConstruction.November(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.November(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in November on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.November(2017);</code></pre>
  syntax:
    content: public static LocalDate November(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of November for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in November.
    content.vb: Public Shared Function November(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.November*
  nameWithType.vb: LocalDateConstruction.November(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.November(Integer, Integer)
  name.vb: November(Integer, Integer)
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.December(System.Int32,System.Int32)
  commentId: M:NodaTime.Testing.Extensions.LocalDateConstruction.December(System.Int32,System.Int32)
  id: December(System.Int32,System.Int32)
  isExtensionMethod: true
  parent: NodaTime.Testing.Extensions.LocalDateConstruction
  langs:
  - csharp
  - vb
  name: December(int, int)
  nameWithType: LocalDateConstruction.December(int, int)
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.December(int, int)
  type: Method
  assemblies:
  - NodaTime.Testing
  namespace: NodaTime.Testing.Extensions
  summary: Constructs a <xref href="NodaTime.LocalDate" data-throw-if-not-resolved="false"></xref> in December on the given day and year.
  example:
  - <pre><code class="lang-csharp">var date = 1.December(2017);</code></pre>
  syntax:
    content: public static LocalDate December(this int day, int year)
    parameters:
    - id: day
      type: System.Int32
      description: The day of December for the new date
    - id: year
      type: System.Int32
      description: The year for the new date
    return:
      type: NodaTime.LocalDate
      description: The specified date in December.
    content.vb: Public Shared Function December(day As Integer, year As Integer) As LocalDate
  overload: NodaTime.Testing.Extensions.LocalDateConstruction.December*
  nameWithType.vb: LocalDateConstruction.December(Integer, Integer)
  fullName.vb: NodaTime.Testing.Extensions.LocalDateConstruction.December(Integer, Integer)
  name.vb: December(Integer, Integer)
references:
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  href: NodaTime.LocalDate.html
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.Testing.Extensions
  commentId: N:NodaTime.Testing.Extensions
  href: NodaTime.html
  name: NodaTime.Testing.Extensions
  nameWithType: NodaTime.Testing.Extensions
  fullName: NodaTime.Testing.Extensions
  spec.csharp:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Testing
    name: Testing
    href: NodaTime.Testing.html
  - name: .
  - uid: NodaTime.Testing.Extensions
    name: Extensions
    href: NodaTime.Testing.Extensions.html
  spec.vb:
  - uid: NodaTime
    name: NodaTime
    href: NodaTime.html
  - name: .
  - uid: NodaTime.Testing
    name: Testing
    href: NodaTime.Testing.html
  - name: .
  - uid: NodaTime.Testing.Extensions
    name: Extensions
    href: NodaTime.Testing.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NodaTime
  commentId: N:NodaTime
  href: NodaTime.html
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.January*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.January
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_January_System_Int32_System_Int32_
  name: January
  nameWithType: LocalDateConstruction.January
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.January
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.February*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.February
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_February_System_Int32_System_Int32_
  name: February
  nameWithType: LocalDateConstruction.February
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.February
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.March*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.March
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_March_System_Int32_System_Int32_
  name: March
  nameWithType: LocalDateConstruction.March
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.March
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.April*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.April
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_April_System_Int32_System_Int32_
  name: April
  nameWithType: LocalDateConstruction.April
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.April
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.May*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.May
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_May_System_Int32_System_Int32_
  name: May
  nameWithType: LocalDateConstruction.May
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.May
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.June*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.June
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_June_System_Int32_System_Int32_
  name: June
  nameWithType: LocalDateConstruction.June
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.June
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.July*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.July
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_July_System_Int32_System_Int32_
  name: July
  nameWithType: LocalDateConstruction.July
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.July
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.August*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.August
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_August_System_Int32_System_Int32_
  name: August
  nameWithType: LocalDateConstruction.August
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.August
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.September*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.September
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_September_System_Int32_System_Int32_
  name: September
  nameWithType: LocalDateConstruction.September
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.September
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.October*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.October
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_October_System_Int32_System_Int32_
  name: October
  nameWithType: LocalDateConstruction.October
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.October
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.November*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.November
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_November_System_Int32_System_Int32_
  name: November
  nameWithType: LocalDateConstruction.November
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.November
- uid: NodaTime.Testing.Extensions.LocalDateConstruction.December*
  commentId: Overload:NodaTime.Testing.Extensions.LocalDateConstruction.December
  href: NodaTime.Testing.Extensions.LocalDateConstruction.html#NodaTime_Testing_Extensions_LocalDateConstruction_December_System_Int32_System_Int32_
  name: December
  nameWithType: LocalDateConstruction.December
  fullName: NodaTime.Testing.Extensions.LocalDateConstruction.December
shouldSkipMarkup: true
