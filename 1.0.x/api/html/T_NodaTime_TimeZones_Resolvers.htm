<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>Resolvers Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_TimeZones_Resolvers" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.TimeZones.Resolvers" /><MSHelp:Keyword Index="A" Term="T:NodaTime.TimeZones.Resolvers" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeTimeZonesResolversClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeTimeZonesResolversMembersTopic" /><MSHelp:Keyword Index="K" Term="Resolvers class" /><MSHelp:Keyword Index="K" Term="NodaTime.TimeZones.Resolvers class" /><MSHelp:Keyword Index="F" Term="Resolvers" /><MSHelp:Keyword Index="F" Term="NodaTime.TimeZones.Resolvers" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.TimeZones.Resolvers" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="&quot;Constant&quot; fields representing commonly-used implementations of the resolver delegates, and a method to combine two &quot;partial&quot; resolvers into a full one." /></xml></head><body><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">Resolvers Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <a href="N_NodaTime_TimeZones.htm">NodaTime.TimeZones</a> ► <span class="selflink">Resolvers</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            "Constant" fields representing commonly-used implementations of the resolver delegates,
            and a method to combine two "partial" resolvers into a full one.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Resolvers</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">Resolvers</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Resolvers</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_TimeZones_Resolvers_CreateMappingResolver.htm">CreateMappingResolver(AmbiguousTimeResolver, SkippedTimeResolver)</a></td><td><div class="summary">
            Combines an <a href="T_NodaTime_TimeZones_AmbiguousTimeResolver.htm">AmbiguousTimeResolver</a> and a <a href="T_NodaTime_TimeZones_SkippedTimeResolver.htm">SkippedTimeResolver</a> into a <a href="T_NodaTime_TimeZones_ZoneLocalMappingResolver.htm">ZoneLocalMappingResolver</a>
            in the obvious way: unambiguous mappings are returned directly, ambiguous mappings are delegated to the given
            AmbiguousTimeResolver, and "skipped" mappings are delegated to the given SkippedTimeResolver.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_LenientResolver.htm">LenientResolver</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_ZoneLocalMappingResolver.htm">ZoneLocalMappingResolver</a> which never throws an exception due to ambiguity or skipped time.
            Ambiguity is handled by returning the later occurrence, and skipped times are mapped to the start of the zone interval
            after the gap. This resolver combines <a href="F_NodaTime_TimeZones_Resolvers_ReturnLater.htm">ReturnLater</a> and <a href="F_NodaTime_TimeZones_Resolvers_ReturnStartOfIntervalAfter.htm">ReturnStartOfIntervalAfter</a>.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ReturnEarlier.htm">ReturnEarlier</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_AmbiguousTimeResolver.htm">AmbiguousTimeResolver</a> which returns the earlier of the two matching times.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ReturnEndOfIntervalBefore.htm">ReturnEndOfIntervalBefore</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_SkippedTimeResolver.htm">SkippedTimeResolver</a> which returns the final tick of the time zone interval
            before the "gap".
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ReturnLater.htm">ReturnLater</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_AmbiguousTimeResolver.htm">AmbiguousTimeResolver</a> which returns the later of the two matching times.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ReturnStartOfIntervalAfter.htm">ReturnStartOfIntervalAfter</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_SkippedTimeResolver.htm">SkippedTimeResolver</a> which returns the first tick of the time zone interval
            after the "gap".
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_StrictResolver.htm">StrictResolver</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_ZoneLocalMappingResolver.htm">ZoneLocalMappingResolver</a> which only ever succeeds in the (usual) case where the result
            of the mapping is unambiguous. Otherwise, it throws <a href="T_NodaTime_SkippedTimeException.htm">SkippedTimeException</a> or
            <a href="T_NodaTime_AmbiguousTimeException.htm">AmbiguousTimeException</a>. This resolver combines <a href="F_NodaTime_TimeZones_Resolvers_ThrowWhenAmbiguous.htm">ThrowWhenAmbiguous</a> and
            <a href="F_NodaTime_TimeZones_Resolvers_ThrowWhenSkipped.htm">ThrowWhenSkipped</a>.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ThrowWhenAmbiguous.htm">ThrowWhenAmbiguous</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_AmbiguousTimeResolver.htm">AmbiguousTimeResolver</a> which simply throws an <a href="T_NodaTime_AmbiguousTimeException.htm">AmbiguousTimeException</a>.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_TimeZones_Resolvers_ThrowWhenSkipped.htm">ThrowWhenSkipped</a></td><td><div class="summary"><a href="T_NodaTime_TimeZones_SkippedTimeResolver.htm">SkippedTimeResolver</a> which simply throws a <a href="T_NodaTime_SkippedTimeException.htm">SkippedTimeException</a> (assuming
            the arguments are all non-null).
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Thread Safety</div><div class="sectionContent">All members of this class are thread-safe, as are the values returned by them.</div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">Resolvers</span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2001-2009 Stephen Colebourne, 2009-2012 Jon Skeet, All rights reserved.</a></div>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime) Version: 1.0.0.0 (1.0.1)</p></div></body></html>