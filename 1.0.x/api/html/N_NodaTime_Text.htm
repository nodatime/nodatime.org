<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>NodaTime.Text Namespace</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="N_NodaTime_Text" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="N:NodaTime.Text" /><MSHelp:Keyword Index="A" Term="N:NodaTime.Text" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeText" /><MSHelp:Keyword Index="K" Term="NodaTime.Text namespace" /><MSHelp:Keyword Index="F" Term="NodaTime.Text" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml></head><body><div id="control"><span class="productTitle">Noda Time</span><br /><span class="topicTitle">NodaTime.Text Namespace</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Help.htm">Namespaces</a> ► <span class="selflink">NodaTime.Text</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary"><p>
            The NodaTime.Text namespace contains types related to formatting and parsing date and time
            values to and from text. Each core Noda Time type has its own "pattern" class to create a more
            object-oriented (and efficient) approach to text handling than the one taken to the BCL.
            See the user guide for more information.
            </p></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">NodaTime.Text</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Namespace</span> <span class="identifier">NodaTime.Text</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">NodaTime.Text</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Types</div><div class="sectionContent"><div id="typeSection"><table class="filter"><tr class="tabs" id="typeFilter"><td class="tab" value="all" onclick="toggleClass('typeFilter','value','all','activeTab','tab'); processSubgroup('all', 'type'); processList('typeList','filterElement', 'type');">All Types</td><td class="tab" value="class" onclick="toggleClass('typeFilter','value','class','activeTab','tab'); processSubgroup('class', 'type'); processList('typeList','filterElement','type');">Classes</td><td class="tab" value="interface" onclick="toggleClass('typeFilter','value','interface','activeTab','tab'); processSubgroup('interface', 'type'); processList('typeList','filterElement','type');">Interfaces</td></tr></table><table id="typeList" class="members"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Type</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_InstantPattern.htm">InstantPattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_Instant.htm">Instant</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_InvalidPatternException.htm">InvalidPatternException</a></b></td><td><div class="summary">
            Exception thrown to indicate that the format pattern provided for either formatting or parsing is invalid.
            </div><br /></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_NodaTime_Text_IPattern_1.htm">IPattern<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Generic interface supporting parsing and formatting. Parsing always results in a 
            <a href="T_NodaTime_Text_ParseResult_1.htm">ParseResult<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a> which can represent success or failure.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_LocalDatePattern.htm">LocalDatePattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_LocalDate.htm">LocalDate</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_LocalDateTimePattern.htm">LocalDateTimePattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_LocalDateTime.htm">LocalDateTime</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_LocalTimePattern.htm">LocalTimePattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_LocalTime.htm">LocalTime</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_OffsetPattern.htm">OffsetPattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_Offset.htm">Offset</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_ParseResult_1.htm">ParseResult<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            The result of a parse operation. 
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_PeriodPattern.htm">PeriodPattern</a></b></td><td><div class="summary">
            Represents a pattern for parsing and formatting <a href="T_NodaTime_Period.htm">Period</a> values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_NodaTime_Text_UnparsableValueException.htm">UnparsableValueException</a></b></td><td><div class="summary">
            Exception thrown to indicate that the specified value could not be parsed.
            </div><br /></td></tr></table></div></div></div><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda Time">Noda Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2001-2009 Stephen Colebourne, 2009-2012 Jon Skeet, All rights reserved.</a></div></div></body></html>